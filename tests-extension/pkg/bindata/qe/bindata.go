// Code generated for package testdata by go-bindata DO NOT EDIT. (@generated)
// sources:
// test/qe/testdata/olm/catalogsource-address.yaml
// test/qe/testdata/olm/catalogsource-configmap.yaml
// test/qe/testdata/olm/catalogsource-image-cacheless.yaml
// test/qe/testdata/olm/catalogsource-image-extract.yaml
// test/qe/testdata/olm/catalogsource-image-incorrect-updatestrategy.yaml
// test/qe/testdata/olm/catalogsource-image.yaml
// test/qe/testdata/olm/catalogsource-legacy.yaml
// test/qe/testdata/olm/catalogsource-namespace.yaml
// test/qe/testdata/olm/catalogsource-opm.yaml
// test/qe/testdata/olm/cm-21824-correct.yaml
// test/qe/testdata/olm/cm-21824-wrong.yaml
// test/qe/testdata/olm/cm-25644-etcd-csv.yaml
// test/qe/testdata/olm/cm-csv-etcd.yaml
// test/qe/testdata/olm/cm-namespaceconfig.yaml
// test/qe/testdata/olm/cm-template.yaml
// test/qe/testdata/olm/configmap-ectd-alpha-beta.yaml
// test/qe/testdata/olm/configmap-etcd.yaml
// test/qe/testdata/olm/configmap-test.yaml
// test/qe/testdata/olm/configmap-with-defaultchannel.yaml
// test/qe/testdata/olm/configmap-without-defaultchannel.yaml
// test/qe/testdata/olm/cr-webhookTest.yaml
// test/qe/testdata/olm/cr_devworkspace.yaml
// test/qe/testdata/olm/cr_pgadmin.yaml
// test/qe/testdata/olm/cs-image-template.yaml
// test/qe/testdata/olm/cs-without-image.yaml
// test/qe/testdata/olm/cs-without-interval.yaml
// test/qe/testdata/olm/cs-without-scc.yaml
// test/qe/testdata/olm/csc.yaml
// test/qe/testdata/olm/env-subscription.yaml
// test/qe/testdata/olm/envfrom-subscription.yaml
// test/qe/testdata/olm/etcd-cluster.yaml
// test/qe/testdata/olm/etcd-subscription-manual.yaml
// test/qe/testdata/olm/etcd-subscription.yaml
// test/qe/testdata/olm/mc-workload-partition.yaml
// test/qe/testdata/olm/og-allns.yaml
// test/qe/testdata/olm/og-multins.yaml
// test/qe/testdata/olm/olm-proxy-subscription.yaml
// test/qe/testdata/olm/olm-subscription.yaml
// test/qe/testdata/olm/operator.yaml
// test/qe/testdata/olm/operatorgroup-serviceaccount.yaml
// test/qe/testdata/olm/operatorgroup-upgradestrategy.yaml
// test/qe/testdata/olm/operatorgroup.yaml
// test/qe/testdata/olm/opsrc.yaml
// test/qe/testdata/olm/packageserver.yaml
// test/qe/testdata/olm/platform_operator.yaml
// test/qe/testdata/olm/prometheus-antiaffinity.yaml
// test/qe/testdata/olm/prometheus-nodeaffinity.yaml
// test/qe/testdata/olm/role-binding.yaml
// test/qe/testdata/olm/role.yaml
// test/qe/testdata/olm/scc.yaml
// test/qe/testdata/olm/scoped-sa-etcd.yaml
// test/qe/testdata/olm/scoped-sa-fine-grained-roles.yaml
// test/qe/testdata/olm/scoped-sa-roles.yaml
// test/qe/testdata/olm/secret.yaml
// test/qe/testdata/olm/secret_opaque.yaml
// test/qe/testdata/olm/vpa-crd.yaml
// test/qe/testdata/opm/45409_include.yaml
// test/qe/testdata/opm/53869/catalog-basic-template.yaml
// test/qe/testdata/opm/53871/catalog-semver-veneer-1.yaml
// test/qe/testdata/opm/53871/catalog-semver-veneer-2.yaml
// test/qe/testdata/opm/53871/catalog-semver-veneer-3.yaml
// test/qe/testdata/opm/53871/catalog-semver-veneer-4.yaml
// test/qe/testdata/opm/53871/catalog-semver-veneer-5.yaml
// test/qe/testdata/opm/70013/catalog-invalid/index.yaml
// test/qe/testdata/opm/70013/catalog-valid/index.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/charts.operatorhub.io_cockroachdbs.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb-controller-manager-metrics-service_v1_service.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb.clusterserviceversion.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/metadata/properties.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/charts.operatorhub.io_cockroachdbs.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb-controller-manager-metrics-service_v1_service.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb.clusterserviceversion.yaml
// test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/metadata/properties.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/charts.operatorhub.io_cockroachdbs.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb-controller-manager-metrics-service_v1_service.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb.clusterserviceversion.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/charts.operatorhub.io_cockroachdbs.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb-controller-manager-metrics-service_v1_service.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml
// test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb.clusterserviceversion.yaml
// test/qe/testdata/opm/eclipse-che/7.32.2/checlusters.org.eclipse.che.crd.yaml
// test/qe/testdata/opm/eclipse-che/7.32.2/eclipse-che.v7.32.2.clusterserviceversion.yaml
// test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdbackups.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdclusters.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdoperator.v0.9.2.clusterserviceversion.yaml
// test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdrestores.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/0.9.2/metadata/annotations.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdbackups.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdclusters.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdoperator.v0.9.4.clusterserviceversion.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdrestores.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdbackups.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdclusters.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdoperator.v0.9.4-clusterwide.clusterserviceversion.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdrestores.etcd.database.coreos.com.crd.yaml
// test/qe/testdata/opm/etcd_operator/etcd_community/etcd.package.yaml
// test/qe/testdata/opm/index_34016.db
// test/qe/testdata/opm/learn_operator/package/0.0.1/learn-operator.v0.0.1.clusterserviceversion.yaml
// test/qe/testdata/opm/learn_operator/package/0.0.1/learn.crd.yaml
// test/qe/testdata/opm/learn_operator/package/0.0.2/learn-operator.v0.0.2.clusterserviceversion.yaml
// test/qe/testdata/opm/learn_operator/package/0.0.2/learn.crd.yaml
// test/qe/testdata/opm/learn_operator/package/learn.package.yaml
// test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-bundle3.json
// test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-bundle4.json
// test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-package.json
// test/qe/testdata/opm/render/configs/mta-operator/mta-operator-bundle4.json
// test/qe/testdata/opm/render/configs/mta-operator/mta-operator-bundle5.json
// test/qe/testdata/opm/render/configs/mta-operator/mta-operator-package.json
// test/qe/testdata/opm/render/diff/index-latest-2.db
// test/qe/testdata/opm/render/diff/index.db
// test/qe/testdata/opm/render/init/readme.md
// test/qe/testdata/opm/render/init/test.png
// test/qe/testdata/opm/render/validate/catalog/operator-1/index.yaml
// test/qe/testdata/opm/render/validate/catalog-error/operator-1/index.yaml
// test/qe/testdata/opm/render/validate/catalog-error/operator-2/index.json
// test/qe/testdata/opm/render/validate/configs/etcd/channel1.json
// test/qe/testdata/opm/render/validate/configs/etcd/channel2.json
// test/qe/testdata/opm/render/validate/configs/etcd/etcd.json
// test/qe/testdata/opm/render/validate/configs/etcd/package.json
// test/qe/testdata/opm/render/validate/configs/example-operator/channel1.json
// test/qe/testdata/opm/render/validate/configs/example-operator/example-operator.json
// test/qe/testdata/opm/render/validate/configs/example-operator/package.json
// test/qe/testdata/opm/render/validate/configs-wrong/etcd/etcd.json
// test/qe/testdata/opm/render/validate/configs-wrong/etcd/package.json
// test/qe/testdata/opm/render/validate/configs-wrong/example-operator/example-operator.json
// test/qe/testdata/opm/render/validate/configs-wrong/example-operator/package.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/.indexignore
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcd/etcd.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcd/package.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcdwrong/etcd.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcdwrong/package.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/channel1.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/example-operator.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/package.json
// test/qe/testdata/opm/render/validate/configs-wrong-ignore/wrong-etcd.json
package testdata

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _testQeTestdataOlmCatalogsourceAddressYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    address: "${ADDRESS}"
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
`)

func testQeTestdataOlmCatalogsourceAddressYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceAddressYaml, nil
}

func testQeTestdataOlmCatalogsourceAddressYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceAddressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-address.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceConfigmapYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    configMap: "${ADDRESS}"
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
`)

func testQeTestdataOlmCatalogsourceConfigmapYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceConfigmapYaml, nil
}

func testQeTestdataOlmCatalogsourceConfigmapYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-configmap.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceImageCachelessYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    grpcPodConfig:
      extractContent:
        catalogDir: /configs
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"
`)

func testQeTestdataOlmCatalogsourceImageCachelessYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceImageCachelessYaml, nil
}

func testQeTestdataOlmCatalogsourceImageCachelessYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceImageCachelessYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-image-cacheless.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceImageExtractYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    grpcPodConfig:
      extractContent:
        cacheDir: /tmp/cache
        catalogDir: /configs
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"
`)

func testQeTestdataOlmCatalogsourceImageExtractYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceImageExtractYaml, nil
}

func testQeTestdataOlmCatalogsourceImageExtractYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceImageExtractYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-image-extract.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy: 
      registryPoll: {}
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET`)

func testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYaml, nil
}

func testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-image-incorrect-updatestrategy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceImageYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"
`)

func testQeTestdataOlmCatalogsourceImageYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceImageYaml, nil
}

func testQeTestdataOlmCatalogsourceImageYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceImageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-image.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceLegacyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    grpcPodConfig: 
          securityContextConfig: legacy
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"
`)

func testQeTestdataOlmCatalogsourceLegacyYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceLegacyYaml, nil
}

func testQeTestdataOlmCatalogsourceLegacyYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceLegacyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-legacy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceNamespaceYaml = []byte(`---
apiVersion: operators.coreos.com/v1alpha1
kind: CatalogSource
metadata:
  name: scenario3
  namespace: scenario3
spec:
  sourceType: internal
  configMap: scenario3
  displayName: Scenario 3 Operators
  publisher: Red Hat
`)

func testQeTestdataOlmCatalogsourceNamespaceYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceNamespaceYaml, nil
}

func testQeTestdataOlmCatalogsourceNamespaceYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCatalogsourceOpmYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    grpcPodConfig:
      extractContent:
        cacheDir: /tmp/cache
        catalogDir: /configs
      memoryTarget: 30Mi
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    icon:
      base64data: ""
      mediatype: ""
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"
`)

func testQeTestdataOlmCatalogsourceOpmYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCatalogsourceOpmYaml, nil
}

func testQeTestdataOlmCatalogsourceOpmYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCatalogsourceOpmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/catalogsource-opm.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCm21824CorrectYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-21824-template
objects:
- apiVersion: v1
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: '[{"apiVersion":"charts.helm.k8s.io/v1","kind":"Kubeturbo21824","metadata":{"name":"kubeturbo21824-release"},"spec":{"serverMeta":{"turboServer":"https://Turbo_server_URL"},"targetConfig":{"targetName":"Cluster_Name"}}}]'
            capabilities: Basic Install
            categories: Monitoring
            certified: "false"
            containerImage: quay.io/olmqe/kubeturbo-operator-base:8.5-multi-arch
            createdAt: 2019-05-01T00:00:00.000Z
            description: Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.
            repository: https://github.com/turbonomic/kubeturbo21824/tree/master/deploy/kubeturbo21824-operator
            support: Turbonomic, Inc.
          labels:
            operatorframework.io/arch.amd64: supported
            operatorframework.io/arch.arm64: supported
            operatorframework.io/arch.ppc64le: supported
            operatorframework.io/arch.s390x: supported
          name: kubeturbo21824-operator.v8.5.0
          namespace: placeholder
        spec:
          apiservicedefinitions: {}
          customresourcedefinitions:
            owned:
            - description: Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.
              displayName: Kubeturbo21824 Operator
              kind: Kubeturbo21824
              name: kubeturbo21824s.charts.helm.k8s.io
              version: v1
          description: |-
            ### Application Resource Management for Kubernetes
            Turbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.
            Software manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.

            Turbonomic makes workloads smart — enabling them to self-manage and determines the specific actions that will drive continuous health:

            * Continuous placement for Pods (rescheduling)
            * Continuous scaling for applications and  the underlying cluster.

            It assures application performance by giving workloads the resources they need when they need them.

            ### How does it work?
            Turbonomic uses a container — KubeTurbo — that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.
            KubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.
            Turbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.
          displayName: Kubeturbo21824 Operator
          icon:
            - base64data: 
              mediatype: image/png
          install:
            spec:
              permissions:
                - rules:
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                      resources:
                        - nodes
                        - pods
                        - configmaps
                        - endpoints
                        - events
                        - deployments
                        - persistentvolumeclaims
                        - replicasets
                        - replicationcontrollers
                        - services
                        - secrets
                        - serviceaccounts
                      verbs:
                        - '*'
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                        - policy
                      resources:
                        - daemonsets
                        - endpoints
                        - limitranges
                        - namespaces
                        - persistentvolumes
                        - persistentvolumeclaims
                        - poddisruptionbudget
                        - resourcequotas
                        - services
                        - statefulsets
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - nodes/spec
                        - nodes/stats
                      verbs:
                        - get
                    - apiGroups:
                        - charts.helm.k8s.io
                      resources:
                        - '*'
                      verbs:
                        - '*'
                  serviceAccountName: kubeturbo21824-operator
              clusterPermissions:
                - rules:
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                      resources:
                        - nodes
                        - pods
                        - configmaps
                        - deployments
                        - replicasets
                        - replicationcontrollers
                        - serviceaccounts
                      verbs:
                        - '*'
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                        - policy
                      resources:
                        - services
                        - endpoints
                        - namespaces
                        - limitranges
                        - resourcequotas
                        - daemonsets
                        - persistentvolumes
                        - persistentvolumeclaims
                        - poddisruptionbudget
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - nodes/spec
                        - nodes/stats
                      verbs:
                        - get
                    - apiGroups:
                        - charts.helm.k8s.io
                      resources:
                        - '*'
                      verbs:
                        - '*'
                    - apiGroups:
                        - rbac.authorization.k8s.io
                      resources:
                        - clusterroles
                        - clusterrolebindings
                      verbs:
                        - '*'
                  serviceAccountName: kubeturbo21824-operator
              deployments:
                - name: kubeturbo21824-operator
                  spec:
                    replicas: 1
                    selector:
                      matchLabels:
                        name: kubeturbo21824-operator
                    strategy: {}
                    template:
                      metadata:
                        labels:
                          name: kubeturbo21824-operator
                      spec:
                        containers:
                        - name: kubeturbo21824-operator
                          image: quay.io/olmqe/kubeturbo-operator-base:8.5-multi-arch
                          args:
                          - --leader-elect
                          - --leader-election-id=kubeturbo-operator
                          imagePullPolicy: Always
                          livenessProbe:
                            httpGet:
                              path: /healthz
                              port: 8081
                            initialDelaySeconds: 15
                            periodSeconds: 20
                          readinessProbe:
                            httpGet:
                              path: /readyz
                              port: 8081
                            initialDelaySeconds: 5
                            periodSeconds: 10
                            resources: {}
                          env:
                          - name: WATCH_NAMESPACE
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.namespace
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.name
                          - name: OPERATOR_NAME
                            value: "kubeturbo21824-operator"
                          securityContext:
                            readOnlyRootFilesystem: true
                            capabilities:
                              drop:
                                - ALL
                          volumeMounts:
                          - mountPath: /tmp
                            name: operator-tmpfs0
                        volumes:
                        - name: operator-tmpfs0
                          emptyDir: {}
                        serviceAccountName: kubeturbo21824-operator
            strategy: deployment
          installModes:
            - supported: true
              type: OwnNamespace
            - supported: true
              type: SingleNamespace
            - supported: false
              type: MultiNamespace
            - supported: false
              type: AllNamespaces
          links:
            - name: Turbonomic, Inc.
              url: https://www.turbonomic.com/
            - name: Kubeturbo21824 Operator
              url: https://github.com/turbonomic/kubeturbo21824/tree/master/deploy/kubeturbo21824-operator
          maintainers:
            - email: endre.sara@turbonomic.com
              name: Endre Sara
          maturity: alpha
          provider:
            name: Turbonomic, Inc.
          version: 8.5.0
    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: kubeturbo21824s.charts.helm.k8s.io
          annotations:
            "api-approved.kubernetes.io": "https://github.com/operator-framework/operator-sdk/pull/2703"
        spec:
          group: charts.helm.k8s.io
          names:
            kind: Kubeturbo21824
            listKind: Kubeturbo21824List
            plural: kubeturbo21824s
            singular: kubeturbo21824
          scope: Namespaced
          versions:
            # Each version can be enabled/disabled by Served flag.
            # One and only one version must be marked as the storage version.
            - name: v1alpha1
              served: true
              storage: false
              schema:
                openAPIV3Schema:
                  description: Kubeturbo21824 is the Schema for the kubeturbo21824s API
                  type: object
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      x-kubernetes-preserve-unknown-fields: true
                      properties:
                      type: object
            - name: v1
              served: true
              storage: true
              schema:
                openAPIV3Schema:
                  description: Kubeturbo21824 is the Schema for the kubeturbo21824s API
                  type: object
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      x-kubernetes-preserve-unknown-fields: true
                      description: Spec defines the desired state of Kubeturbo21824
                      type: object
                      properties:
                        roleBinding:
                          description: The name of cluster role binding. Default is turbo-all-binding
                          type: string
                        serviceAccountName:
                          description: The name of the service account name. Default is turbo-user
                          type: string
                        replicaCount:
                          description: Kubeturbo21824 replicaCount
                          type: integer
                        image:
                          description: Kubeturbo21824 image details for deployments outside of RH Operator Hub
                          type: object
                          properties:
                            repository:
                              description: Container repository. default is docker hub
                              type: string
                            tag:
                              description: Kubeturbo21824 container image tag
                              type: string
                            busyboxRepository:
                              description: Busybox repository. default is busybox
                              type: string
                            pullPolicy:
                              description: Define pull policy, Always is default
                              type: string
                            imagePullSecret:
                              description: Define the secret used to authenticate to the container image registry
                              type: string
                        serverMeta:
                          description: Configuration for Turbo Server
                          type: object
                          properties:
                            version:
                              description: Turbo Server major version
                              type: string
                            turboServer:
                              description: URL for Turbo Server endpoint
                              type: string
                        restAPIConfig:
                          description: Credentials to register probe with Turbo Server
                          type: object
                          properties:
                            turbonomicCredentialsSecretName:
                              description: Name of k8s secret that contains the turbo credentials
                              type: string
                            opsManagerUserName:
                              description: Turbo admin user id
                              type: string
                            opsManagerPassword:
                              description: Turbo admin user password
                              type: string
                        featureGates:
                          description: Disable features
                          type: object
                          properties:
                            disabledFeatures:
                              description: Feature names
                              type: string
                        HANodeConfig:
                          description: Create HA placement policy for Node to Hypervisor by node role. Master is default
                          type: object
                          properties:
                            nodeRoles:
                              description: Node role names
                              type: string
                        targetConfig:
                          description: Optional target configuration
                          type: object
                          properties:
                            targetName:
                              description: Optional target name for registration
                              type: string
                        args:
                          description: Kubeturbo21824 command line arguments
                          type: object
                          properties:
                            logginglevel:
                              description: Define logging level, default is info = 2
                              type: integer
                            kubelethttps:
                              description: Identify if kubelet requires https
                              type: boolean
                            kubeletport:
                              description: Identify kubelet port
                              type: integer
                            sccsupport:
                              description: Allow kubeturbo21824 to execute actions in OCP
                              type: string
                            failVolumePodMoves:
                              description: Allow kubeturbo21824 to reschedule pods with volumes attached
                              type: string
                            busyboxExcludeNodeLabels:
                              description: Do not run busybox on these nodes to discover the cpu frequency with k8s 1.18 and later, default is either of kubernetes.io/os=windows or beta.kubernetes.io/os=windows present as node label
                              type: string
                            stitchuuid:
                              description: Identify if using uuid or ip for stitching
                              type: boolean
                        resources:
                          description: Kubeturbo21824 resource configuration
                          type: object
                          properties:
                            limits:
                              description: Define limits
                              type: object
                              properties:
                                memory:
                                  description: Define memory limits in Gi or Mi, include units
                                  type: string
                                cpu:
                                  description: Define cpu limits in cores or millicores, include units
                                  type: string
                            requests:
                              description: Define requests
                              type: object
                              properties:
                                memory:
                                  description: Define memory requests in Gi or Mi, include units
                                  type: string
                                cpu:
                                  description: Define cpu requests in cores or millicores, include units
                                  type: string
    packages: |
      - channels:
        - currentCSV: kubeturbo21824-operator.v8.5.0
          name: alpha
        defaultChannel: alpha
        packageName: kubeturbo21824
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
parameters:
- name: NAME
- name: NAMESPACE

`)

func testQeTestdataOlmCm21824CorrectYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCm21824CorrectYaml, nil
}

func testQeTestdataOlmCm21824CorrectYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCm21824CorrectYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cm-21824-correct.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCm21824WrongYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-21824-template
objects:
- apiVersion: v1
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: '[{"apiVersion":"charts.helm.k8s.io/v1","kind":"Kubeturbo21824","metadata":{"name":"kubeturbo21824-release"},"spec":{"serverMeta":{"turboServer":"https://Turbo_server_URL"},"targetConfig":{"targetName":"Cluster_Name"}}}]'
            capabilities: Basic Install
            categories: Monitoring
            certified: "false"
            containerImage: quay.io/olmqe/kubeturbo-operator-base:8.5-multi-arch
            createdAt: 2019-05-01T00:00:00.000Z
            description: Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.
            repository: https://github.com/turbonomic/kubeturbo21824/tree/master/deploy/kubeturbo21824-operator
            support: Turbonomic, Inc.
          labels:
            operatorframework.io/arch.amd64: supported
            operatorframework.io/arch.arm64: supported
            operatorframework.io/arch.ppc64le: supported
            operatorframework.io/arch.s390x: supported
          name: kubeturbo21824-operator.v8.5.0
          namespace: placeholder
        spec:
          apiservicedefinitions: {}
          customresourcedefinitions:
            owned:
            - description: Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.
              displayName: Kubeturbo21824 Operator
              kind: Kubeturbo21824
              name: kubeturbo21824s.charts.helm.k8s.io
              version: v1
          description: |-
            ### Application Resource Management for Kubernetes
            Turbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.
            Software manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.

            Turbonomic makes workloads smart — enabling them to self-manage and determines the specific actions that will drive continuous health:

            * Continuous placement for Pods (rescheduling)
            * Continuous scaling for applications and  the underlying cluster.

            It assures application performance by giving workloads the resources they need when they need them.

            ### How does it work?
            Turbonomic uses a container — KubeTurbo — that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.
            KubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.
            Turbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.
          displayName: Kubeturbo21824 Operator
          icon:
            - base64data: 
              mediatype: image/png
          install:
            spec:
              permissions:
                - rules:
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                      resources:
                        - nodes
                        - pods
                        - configmaps
                        - endpoints
                        - events
                        - deployments
                        - persistentvolumeclaims
                        - replicasets
                        - replicationcontrollers
                        - services
                        - secrets
                        - serviceaccounts
                      verbs:
                        - '*'
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                        - policy
                      resources:
                        - daemonsets
                        - endpoints
                        - limitranges
                        - namespaces
                        - persistentvolumes
                        - persistentvolumeclaims
                        - poddisruptionbudget
                        - resourcequotas
                        - services
                        - statefulsets
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - nodes/spec
                        - nodes/stats
                      verbs:
                        - get
                    - apiGroups:
                        - charts.helm.k8s.io
                      resources:
                        - '*'
                      verbs:
                        - '*'
                  serviceAccountName: kubeturbo21824-operator
              clusterPermissions:
                - rules:
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                      resources:
                        - nodes
                        - pods
                        - configmaps
                        - deployments
                        - replicasets
                        - replicationcontrollers
                        - serviceaccounts
                      verbs:
                        - '*'
                    - apiGroups:
                        - ""
                        - apps
                        - extensions
                        - policy
                      resources:
                        - services
                        - endpoints
                        - namespaces
                        - limitranges
                        - resourcequotas
                        - daemonsets
                        - persistentvolumes
                        - persistentvolumeclaims
                        - poddisruptionbudget
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - nodes/spec
                        - nodes/stats
                      verbs:
                        - get
                    - apiGroups:
                        - charts.helm.k8s.io
                      resources:
                        - '*'
                      verbs:
                        - '*'
                    - apiGroups:
                        - rbac.authorization.k8s.io
                      resources:
                        - clusterroles
                        - clusterrolebindings
                      verbs:
                        - '*'
                  serviceAccountName: kubeturbo21824-operator
              deployments:
                - name: kubeturbo21824-operator
                  spec:
                    replicas: 1
                    selector:
                      matchLabels:
                        name: kubeturbo21824-operator
                    strategy: {}
                    template:
                      metadata:
                        labels:
                          name: kubeturbo21824-operator
                      spec:
                        containers:
                        - name: kubeturbo21824-operator
                          image: quay.io/olmqe/kubeturbo-operator-base:8.5-multi-arch
                          args:
                          - --leader-elect
                          - --leader-election-id=kubeturbo-operator
                          imagePullPolicy: Always
                          livenessProbe:
                            httpGet:
                              path: /healthz
                              port: 8081
                            initialDelaySeconds: 15
                            periodSeconds: 20
                          readinessProbe:
                            httpGet:
                              path: /readyz
                              port: 8081
                            initialDelaySeconds: 5
                            periodSeconds: 10
                            resources: {}
                          env:
                          - name: WATCH_NAMESPACE
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.namespace
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.name
                          - name: OPERATOR_NAME
                            value: "kubeturbo21824-operator"
                          securityContext:
                            readOnlyRootFilesystem: true
                            capabilities:
                              drop:
                                - ALL
                          volumeMounts:
                          - mountPath: /tmp
                            name: operator-tmpfs0
                        volumes:
                        - name: operator-tmpfs0
                          emptyDir: {}
                        serviceAccountName: kubeturbo21824-operator
            strategy: deployment
          installModes:
            - supported: true
              type: OwnNamespace
            - supported: true
              type: SingleNamespace
            - supported: false
              type: MultiNamespace
            - supported: false
              type: AllNamespaces
          links:
            - name: Turbonomic, Inc.
              url: https://www.turbonomic.com/
            - name: Kubeturbo21824 Operator
              url: https://github.com/turbonomic/kubeturbo21824/tree/master/deploy/kubeturbo21824-operator
          maintainers:
            - email: endre.sara@turbonomic.com
              name: Endre Sara
          maturity: alpha
          provider:
            name: Turbonomic, Inc.
          version: 8.5.0
    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: kubeturbo21824.charts.helm.k8s.io
          annotations:
            "api-approved.kubernetes.io": "https://github.com/operator-framework/operator-sdk/pull/2703"
        spec:
          group: charts.helm.k8s.io
          names:
            kind: Kubeturbo21824
            listKind: Kubeturbo21824List
            plural: kubeturbo21824s
            singular: kubeturbo21824
          scope: Namespaced
          versions:
            # Each version can be enabled/disabled by Served flag.
            # One and only one version must be marked as the storage version.
            - name: v1alpha1
              served: true
              storage: false
              schema:
                openAPIV3Schema:
                  description: Kubeturbo21824 is the Schema for the kubeturbo21824s API
                  type: object
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the latest
                    internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource this
                    object represents. Servers may infer this from the endpoint the client
                    submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      x-kubernetes-preserve-unknown-fields: true
                      properties:
                      type: object
            - name: v1
              served: true
              storage: true
              schema:
                openAPIV3Schema:
                  description: Kubeturbo21824 is the Schema for the kubeturbo21824s API
                  type: object
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      x-kubernetes-preserve-unknown-fields: true
                      description: Spec defines the desired state of Kubeturbo21824
                      type: object
                      properties:
                        roleBinding:
                          description: The name of cluster role binding. Default is turbo-all-binding
                          type: string
                        serviceAccountName:
                          description: The name of the service account name. Default is turbo-user
                          type: string
                        replicaCount:
                          description: Kubeturbo21824 replicaCount
                          type: integer
                        image:
                          description: Kubeturbo21824 image details for deployments outside of RH Operator Hub
                          type: object
                          properties:
                            repository:
                              description: Container repository. default is docker hub
                              type: string
                            tag:
                              description: Kubeturbo21824 container image tag
                              type: string
                            busyboxRepository:
                              description: Busybox repository. default is busybox
                              type: string
                            pullPolicy:
                              description: Define pull policy, Always is default
                              type: string
                            imagePullSecret:
                              description: Define the secret used to authenticate to the container image registry
                              type: string
                        serverMeta:
                          description: Configuration for Turbo Server
                          type: object
                          properties:
                            version:
                              description: Turbo Server major version
                              type: string
                            turboServer:
                              description: URL for Turbo Server endpoint
                              type: string
                        restAPIConfig:
                          description: Credentials to register probe with Turbo Server
                          type: object
                          properties:
                            turbonomicCredentialsSecretName:
                              description: Name of k8s secret that contains the turbo credentials
                              type: string
                            opsManagerUserName:
                              description: Turbo admin user id
                              type: string
                            opsManagerPassword:
                              description: Turbo admin user password
                              type: string
                        featureGates:
                          description: Disable features
                          type: object
                          properties:
                            disabledFeatures:
                              description: Feature names
                              type: string
                        HANodeConfig:
                          description: Create HA placement policy for Node to Hypervisor by node role. Master is default
                          type: object
                          properties:
                            nodeRoles:
                              description: Node role names
                              type: string
                        targetConfig:
                          description: Optional target configuration
                          type: object
                          properties:
                            targetName:
                              description: Optional target name for registration
                              type: string
                        args:
                          description: Kubeturbo21824 command line arguments
                          type: object
                          properties:
                            logginglevel:
                              description: Define logging level, default is info = 2
                              type: integer
                            kubelethttps:
                              description: Identify if kubelet requires https
                              type: boolean
                            kubeletport:
                              description: Identify kubelet port
                              type: integer
                            sccsupport:
                              description: Allow kubeturbo21824 to execute actions in OCP
                              type: string
                            failVolumePodMoves:
                              description: Allow kubeturbo21824 to reschedule pods with volumes attached
                              type: string
                            busyboxExcludeNodeLabels:
                              description: Do not run busybox on these nodes to discover the cpu frequency with k8s 1.18 and later, default is either of kubernetes.io/os=windows or beta.kubernetes.io/os=windows present as node label
                              type: string
                            stitchuuid:
                              description: Identify if using uuid or ip for stitching
                              type: boolean
                        resources:
                          description: Kubeturbo21824 resource configuration
                          type: object
                          properties:
                            limits:
                              description: Define limits
                              type: object
                              properties:
                                memory:
                                  description: Define memory limits in Gi or Mi, include units
                                  type: string
                                cpu:
                                  description: Define cpu limits in cores or millicores, include units
                                  type: string
                            requests:
                              description: Define requests
                              type: object
                              properties:
                                memory:
                                  description: Define memory requests in Gi or Mi, include units
                                  type: string
                                cpu:
                                  description: Define cpu requests in cores or millicores, include units
                                  type: string
    packages: |
      - channels:
        - currentCSV: kubeturbo21824-operator.v8.5.0
          name: alpha
        defaultChannel: alpha
        packageName: kubeturbo21824
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
parameters:
- name: NAME
- name: NAMESPACE

`)

func testQeTestdataOlmCm21824WrongYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCm21824WrongYaml, nil
}

func testQeTestdataOlmCm21824WrongYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCm21824WrongYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cm-21824-wrong.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCm25644EtcdCsvYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-etd-csv-template
objects:
- apiVersion: v1
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: '[{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdCluster","metadata":{"name":"example","namespace":"default"},"spec":{"size":3,"version":"3.2.13"}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdRestore","metadata":{"name":"example-etcd-cluster"},"spec":{"etcdCluster":{"name":"example-etcd-cluster"},"backupStorageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdBackup","metadata":{"name":"example-etcd-cluster-backup"},"spec":{"etcdEndpoints":["<etcd-cluster-endpoints>"],"storageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}}]'
            tectonic-visibility: ocs
          creationTimestamp: null
          name: etcdoperator.v0.9.2
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              - description: Limits describes the minimum/maximum amount of compute resources
                  required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to backup an etcd cluster.
              displayName: etcd Backup
              kind: EtcdBackup
              name: etcdbackups.etcd.database.coreos.com
              specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors:
                - urn:alm:descriptor:etcd:endpoint
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to restore an etcd cluster from a backup.
              displayName: etcd Restore
              kind: EtcdRestore
              name: etcdrestores.etcd.database.coreos.com
              specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:EtcdCluster
                - urn:alm:descriptor:text
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          description: |
            etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
            A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.
            _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._
            ### Reading and writing to etcd
            Communicate with etcd though its command line utility ` + "`" + `etcdctl` + "`" + ` or with the API using the automatically generated Kubernetes Service.
            [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)
            ### Supported Features
            **High availability**
            Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.
            **Automated updates**
            Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.
            **Backups included**
            Coming soon, the ability to schedule backups to happen on or off cluster.
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-operator
                      - command:
                        - etcd-backup-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-backup-operator
                      - command:
                        - etcd-restore-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-restore-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  - etcdbackups
                  - etcdrestores
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: support@coreos.com
            name: CoreOS, Inc
          maturity: alpha
          provider:
            name: CoreOS, Inc
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.9.2
    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          creationTimestamp: null
          name: etcdclusters.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdCluster
            listKind: EtcdClusterList
            plural: etcdclusters
            shortNames:
            - etcdclus
            - etcd
            singular: etcdcluster
          scope: Namespaced
          version: v1beta2
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: null
          storedVersions: null
      - apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          creationTimestamp: null
          name: etcdbackups.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdBackup
            listKind: EtcdBackupList
            plural: etcdbackups
            singular: etcdbackup
          scope: Namespaced
          version: v1beta2
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: null
          storedVersions: null
      - apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          creationTimestamp: null
          name: etcdrestores.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdRestore
            listKind: EtcdRestoreList
            plural: etcdrestores
            singular: etcdrestore
          scope: Namespaced
          version: v1beta2
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: null
          storedVersions: null
    packages: |
      - channels:
        - currentCSV: etcdoperator.v0.9.2
          name: alpha
        defaultChannel: ""
        packageName: etcd
  kind: ConfigMap
  metadata:
    name:        "${NAME}"
    namespace:   "${NAMESPACE}"
    displayName: QE Operators
    publisher:   QE
parameters:
- name: NAME
- name: NAMESPACE

`)

func testQeTestdataOlmCm25644EtcdCsvYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCm25644EtcdCsvYaml, nil
}

func testQeTestdataOlmCm25644EtcdCsvYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCm25644EtcdCsvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cm-25644-etcd-csv.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCmCsvEtcdYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-csv-etcd-template
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: '[{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdCluster","metadata":{"name":"example","namespace":"default"},"spec":{"size":3,"version":"3.2.13"}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdRestore","metadata":{"name":"example-etcd-cluster"},"spec":{"etcdCluster":{"name":"example-etcd-cluster"},"backupStorageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdBackup","metadata":{"name":"example-etcd-cluster-backup"},"spec":{"etcdEndpoints":["<etcd-cluster-endpoints>"],"storageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}}]'
            tectonic-visibility: ocs
          creationTimestamp: null
          name: etcdoperator.v0.9.2
          namespace: "${NAMESPACE}"
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              - description: Limits describes the minimum/maximum amount of compute resources
                  required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to backup an etcd cluster.
              displayName: etcd Backup
              kind: EtcdBackup
              name: etcdbackups.etcd.database.coreos.com
              specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors:
                - urn:alm:descriptor:etcd:endpoint
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to restore an etcd cluster from a backup.
              displayName: etcd Restore
              kind: EtcdRestore
              name: etcdrestores.etcd.database.coreos.com
              specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:EtcdCluster
                - urn:alm:descriptor:text
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          minKubeVersion: a.b.1
          description: |
            etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
            A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.

            _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._

            ### Reading and writing to etcd

            Communicate with etcd though its command line utility ` + "`" + `etcdctl` + "`" + ` or with the API using the automatically generated Kubernetes Service.

            [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)

            ### Supported Features


            **High availability**


            Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.


            **Automated updates**


            Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.


            **Backups included**


            Coming soon, the ability to schedule backups to happen on or off cluster.
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-operator
                      - command:
                        - etcd-backup-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-backup-operator
                      - command:
                        - etcd-restore-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-restore-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  - etcdbackups
                  - etcdrestores
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: true
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: support@coreos.com
            name: CoreOS, Inc
          maturity: alpha
          provider:
            name: CoreOS, Inc
          replaces: etcdoperator.v0.9.0
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.9.2
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: '[{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdCluster","metadata":{"name":"example","namespace":"default"},"spec":{"size":3,"version":"3.2.13"}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdRestore","metadata":{"name":"example-etcd-cluster"},"spec":{"etcdCluster":{"name":"example-etcd-cluster"},"backupStorageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdBackup","metadata":{"name":"example-etcd-cluster-backup"},"spec":{"etcdEndpoints":["<etcd-cluster-endpoints>"],"storageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}}]'
            tectonic-visibility: ocs
          creationTimestamp: null
          name: etcdoperator.v0.9.0
          namespace: "${NAMESPACE}"
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              - description: Limits describes the minimum/maximum amount of compute resources
                  required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to backup an etcd cluster.
              displayName: etcd Backup
              kind: EtcdBackup
              name: etcdbackups.etcd.database.coreos.com
              specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors:
                - urn:alm:descriptor:etcd:endpoint
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to restore an etcd cluster from a backup.
              displayName: etcd Restore
              kind: EtcdRestore
              name: etcdrestores.etcd.database.coreos.com
              specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:EtcdCluster
                - urn:alm:descriptor:text
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          description: |
            etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
            A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.

            _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._

            ### Reading and writing to etcd

            Communicate with etcd though its command line utility ` + "`" + `etcdctl` + "`" + ` or with the API using the automatically generated Kubernetes Service.

            [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)

            ### Supported Features


            **High availability**


            Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.


            **Automated updates**


            Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.


            **Backups included**


            Coming soon, the ability to schedule backups to happen on or off cluster.
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:db563baa8194fcfe39d1df744ed70024b0f1f9e9b55b5923c2f3a413c44dc6b8
                        name: etcd-operator
                      - command:
                        - etcd-backup-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:db563baa8194fcfe39d1df744ed70024b0f1f9e9b55b5923c2f3a413c44dc6b8
                        name: etcd-backup-operator
                      - command:
                        - etcd-restore-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:db563baa8194fcfe39d1df744ed70024b0f1f9e9b55b5923c2f3a413c44dc6b8
                        name: etcd-restore-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  - etcdbackups
                  - etcdrestores
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: true
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: support@coreos.com
            name: CoreOS, Inc
          maturity: alpha
          provider:
            name: CoreOS, Inc
          replaces: etcdoperator.v0.6.1
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.9.0
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            tectonic-visibility: ocs
          creationTimestamp: null
          name: etcdoperator.v0.6.1
          namespace: "${NAMESPACE}"
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: service
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          description: |
            etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
            A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.

            _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._

            ### Reading and writing to etcd

            Communicate with etcd though its command line utility ` + "`" + `etcdctl` + "`" + ` or with the API using the automatically generated Kubernetes Service.

            [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)

            ### Supported Features
            **High availability**
            Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.
            **Automated updates**
            Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.
            **Backups included**
            Coming soon, the ability to schedule backups to happen on or off cluster.
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:bd944a211eaf8f31da5e6d69e8541e7cada8f16a9f7a5a570b22478997819943
                        name: etcd-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  verbs:
                  - '*'
                - apiGroups:
                  - storage.k8s.io
                  resources:
                  - storageclasses
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: true
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            alm-status-descriptors: etcdoperator.v0.6.1
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: support@coreos.com
            name: CoreOS, Inc
          maturity: alpha
          provider:
            name: CoreOS, Inc
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.6.1
    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          creationTimestamp: null
          name: etcdclusters.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdCluster
            listKind: EtcdClusterList
            plural: etcdclusters
            shortNames:
            - etcdclus
            - etcd
            singular: etcdcluster
          scope: Namespaced
          version: v1beta2
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: null
          storedVersions: null
      - apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          creationTimestamp: null
          name: etcdbackups.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdBackup
            listKind: EtcdBackupList
            plural: etcdbackups
            singular: etcdbackup
          scope: Namespaced
          version: v1beta2
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: null
          storedVersions: null
      - apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          creationTimestamp: null
          name: etcdrestores.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdRestore
            listKind: EtcdRestoreList
            plural: etcdrestores
            singular: etcdrestore
          scope: Namespaced
          version: v1beta2
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: null
          storedVersions: null
    packages: |
      - channels:
        - currentCSV: etcoperator.2
          name: alpha
        defaultChannel: ""
        packageName: etcd
parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmCmCsvEtcdYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCmCsvEtcdYaml, nil
}

func testQeTestdataOlmCmCsvEtcdYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCmCsvEtcdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cm-csv-etcd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCmNamespaceconfigYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-namespaceconfig-template
objects:
- apiVersion: v1
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: |-
              [
                {
                  "apiVersion": "redhatcop.redhat.io/v1alpha1",
                  "kind": "NamespaceConfig",
                  "metadata": {
                    "name": "example-namespaceconfig"
                  },
                  "spec": {
                    "size": 3
                  }
                }
              ]
            capabilities: Full Lifecycle
            categories: Security
            certified: "false"
            containerImage: quay.io/redhat-cop/namespace-configuration-operator:latest
            createdAt: 5/28/2019
            description: This operator provides a facility to define and enforce namespace
              configurations
            repository: https://github.com/redhat-cop/namespace-configuration-operator
            support: Best Effort
          name: namespace-configuration-operator.v0.1.0
          namespace: namespace-configuration-operator
        spec:
          apiservicedefinitions: {}
          customresourcedefinitions:
            owned:
            - description: Represent the desired configuration for a set of namespaces selected
                via labels
              displayName: Namespace Configuration
              kind: NamespaceConfig
              name: namespaceconfigs.redhatcop.redhat.io
              version: v1alpha1
          description: "The namespace configuration operator helps keeping a namespace's configuration
            aligned with one of more policies specified as a CRs.\n\nThe ` + "`" + `NamespaceConfig` + "`" + `
            CR allows specifying one or more objects that will be created in the selected
            namespaces.\n\nFor example using this operator an administrator can enforce a
            specific ResourceQuota or LimitRange on a set of namespaces. For example with
            the following snippet:\n\n` + "`" + `` + "`" + `` + "`" + `\napiVersion: redhatcop.redhat.io/v1alpha1\nkind:
            NamespaceConfig\nmetadata:\n  name: small-size\nspec:\n  selector:\n    matchLabels:\n
            \     size: small  \n  resources:\n  - apiVersion: v1\n    kind: ResourceQuota\n
            \   metadata:\n      name: small-size  \n    spec:\n      hard:\n        requests.cpu:
            \"4\"\n        requests.memory: \"2Gi\"\n` + "`" + `` + "`" + `` + "`" + `\n\nwe are enforcing that all the
            namespaces with label: ` + "`" + `size=small` + "`" + ` receive the specified resource quota.  \n"
          displayName: Namespace Configuration Operator
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              clusterPermissions:
              - rules:
                - apiGroups:
                  - '*'
                  resources:
                  - '*'
                  verbs:
                  - '*'
                serviceAccountName: namespace-configuration-operator
              deployments:
              - name: namespace-configuration-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: namespace-configuration-operator
                  strategy: {}
                  template:
                    metadata:
                      labels:
                        name: namespace-configuration-operator
                    spec:
                      containers:
                      - command:
                        - namespace-configuration-operator
                        env:
                        - name: WATCH_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.annotations['olm.targetNamespaces']
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        - name: OPERATOR_NAME
                          value: namespace-configuration-operator
                        image: quay.io/redhat-cop/namespace-configuration-operator:v0.1.0
                        imagePullPolicy: Always
                        name: namespace-configuration-operator
                        resources: {}
                      serviceAccountName: namespace-configuration-operator
              permissions:
              - rules:
                - apiGroups:
                  - ""
                  resources:
                  - configmaps
                  - pods
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - services
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - replicasets
                  - deployments
                  verbs:
                  - get
                  - list
                - apiGroups:
                  - monitoring.coreos.com
                  resources:
                  - servicemonitors
                  verbs:
                  - get
                  - create
                - apiGroups:
                  - apps
                  resourceNames:
                  - namespace-configuration-operator
                  resources:
                  - deployments/finalizers
                  verbs:
                  - update
                serviceAccountName: namespace-configuration-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          keywords:
          - namespace
          - configuration
          - policy
          - management
          links:
          - name: repository
            url: https://github.com/redhat-cop/namespace-configuration-operator
          - name: conatinerImage
            url: https://quay.io/redhat-cop/namespace-configuration-operator:latest
          - name: blog
            url: https://blog.openshift.com/controlling-namespace-configurations
          maintainers:
          - email: rspazzol@redhat.com
            name: Raffaele Spazzoli
          maturity: alpha
          minKubeVersion: 1.10.0
          provider:
            name: Containers & PaaS CoP
          replaces: namespace-configuration-operator.v0.0.1
          skips:
          - namespace-configuration-operator.v0.0.2
          version: 0.1.0
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: '[{"apiVersion":"redhatcop.redhat.io/v1alpha1","kind":"NamespaceConfig","metadata":{"name":"example-namespaceconfig"},"spec":{"size":3}}]'
            capabilities: Full Lifecycle
            categories: Security
            certified: "false"
            containerImage: quay.io/redhat-cop/namespace-configuration-operator:latest
            createdAt: 5/28/2019
            description: This operator provides a facility to define and enforce namespace
              configurations
            repository: https://github.com/redhat-cop/namespace-configuration-operator
            support: Best Effort
          name: namespace-configuration-operator.v0.0.2
          namespace: namespace-configuration-operator
        spec:
          apiservicedefinitions: {}
          customresourcedefinitions:
            owned:
            - description: Represent the desired configuration for a set of namespaces selected
                via labels
              displayName: Namespace Configuration
              kind: NamespaceConfig
              name: namespaceconfigs.redhatcop.redhat.io
              version: v1alpha1
          description: "The namespace configuration operator helps keeping a namespace's configuration
            aligned with one of more policies specified as a CRs.\n\nThe ` + "`" + `NamespaceConfig` + "`" + `
            CR allows specifying one or more objects that will be created in the selected
            namespaces.\n\nFor example using this operator an administrator can enforce a
            specific ResourceQuota or LimitRange on a set of namespaces. For example with
            the following snippet:\n\n` + "`" + `` + "`" + `` + "`" + `\napiVersion: redhatcop.redhat.io/v1alpha1\nkind:
            NamespaceConfig\nmetadata:\n  name: small-size\nspec:\n  selector:\n    matchLabels:\n
            \     size: small  \n  resources:\n  - apiVersion: v1\n    kind: ResourceQuota\n
            \   metadata:\n      name: small-size  \n    spec:\n      hard:\n        requests.cpu:
            \"4\"\n        requests.memory: \"2Gi\"\n` + "`" + `` + "`" + `` + "`" + `\n\nwe are enforcing that all the
            namespaces with label: ` + "`" + `size=small` + "`" + ` receive the specified resource quota.  \n"
          displayName: Namespace Configuration Operator
          icon:
          - base64data: iVBORw0KGgoAAAANSUhEUgAAAOoAAADYCAMAAADS+I/aAAAAgVBMVEX///8AAAD29vb8/Pz5+fnz8/Pq6urf3994eHjIyMi8vLzU1NTQ0NB8fHzx8fGrq6szMzOQkJBtbW2enp5BQUGxsbGkpKRJSUlfX1/d3d1mZmaEhITAwMA5OTkVFRXl5eVTU1MmJiYfHx+WlpZaWloODg6Li4suLi4ZGRk9PT1HR0fjV/a/AAAPPUlEQVR4nM1daUPqOhBVQHZEQJBVWhHw+v9/4LWt0LQ9k8xkaT2fru9BkiHbmTUPD0HxvNlPZ5P559vh5QeH72g9709mq+lw1GuF7blGHPen7eFRi8P2NDw2PU43dIe7b72QKr4vw27TI7ZCdzl/54t5w0d/+Nz0yGUYzWK5mDccTpumx8/FeGIv5g27UdNSmLHZucuZ4dJrWhYdWtMXX4ImOEw7TUtEoNf3KWeGyV+c2oHgWpHgbdC0ZCUM4zCCJvgYNi2dguVXOEETvC+blvAX+zisoAn+xMyODfzWFw7jhgXtrusRNMFnowx5Vp+gCWaNCTo41yvpD5q5eVrb2gX9wbwBAjVsQtAE+5oF7dhM6dt2t1gth4PxDwbD5eo0Wb9aNNOvVdKxbHCH/mpAGVTavf1iHouae6+RGF/4wzrPpxxFuzNaSdbJKriIGZ7Yq249FRnHequI2/I2lHAFjJij6Q/a8sY7+zmv9Y8a+MSKNZK5wwW45y3l4FcsR/1+WVrMp4rONGZ0E3jDvplHMPdiARsxpnbioyMCT1dj9xdvZtyu2SD36auvCo7Gvk9eaVvLqE28+uxOQc/U8cw7P+2YbvBrEEpsumT6TyF6fTZcPh8B/HgGSb+DkbWNnrG8e/+FDZIGtXMta5V1o+1tG1iJ7GhX8YfX3vVnbw0a5EDX/9WRsah41nUU1eLgb+vsdd/+utH5hBfeujFAt2O9cYl/mk5q9IMeY3oYnjiiho3+qzc6RbOIvXD/E93+3Ef7nsbiQafb063Xtk1Zo3HW1bt02414jOgL/sO16ZhsuiF3UZd0KTjam2ia0ljAzdMHNSSno4m+yxqMUeiQK83h56c3aqMRgW1K1nf7NkkvccOxj+S8Wt9+5C3WeIRNi6KqlpoHaWD5A0Fx5NayU+io5Vu31w+Cul+tljBlxucf6a3jcTPaHI9dj/rkHRRvsiCIlI7K1SGK7oi3i3fGscDjO8tbIrSIiPftJxBXOfMc1EzQm4u0HcJZfGauRezwmPjV+Qhfg/QmjJ2aaeFve1YRiGM4krUyxa1wbaCkqH5dSkToiehkauM2+Cc5HdPu1d+Nt2ssaQLzpC9BC7QbbScURwus0QkM8B08SBFLGpNmRp/XDnY6CC4c7P+SnuLExff4Imzn5+raflGd49XDpjl4UuUGjRaxiqUcOjXtX4mLCi9hbtPYg2tD8rHLUBhOdjs4sJ0ME8Qps234ZUtVELoMJQ20P+9fw5c6jHVi7lbM862JDriiBfpuV7UkwXnFuiaPq8Cj88QfnXks/Mug6IHDxwXcJKyzDy9+Fz2sQmrYV2t5gcFz+AkOmHO0QKbuZMiv0MSI+cUK53qDH4MHPYOVYa8xVyqICi1nWvaqBw5e+Zhxm+MG4E/k5p2pbgnOdmhVVd4D8VF4O5rHDH8h7k5dHFAcZfXcYCjpyGFBqZBwWo2UBx5K3KSP9BR5KQsLBmJWe5EuSvMCyGRNBxO0szDv1JvqFxXvP6DQmRk/8NRrDhpoCDOoxnApcNXpXM1QlwEyY5ov+OqRpNVCYeyuvgfoj+Iaa1Sh7sbiNsqCNO+I6gLWuorhvaG3RiBCGfEELWlE0ZFukRPxWf7RDVYU1I2WtsP1yzfVFNnH5OdmaxOx0mYWXDJZmq4OGMOl+wKySwk8eeWZuFDa+WMklNTMfZDeqnO5oLgdCX2gJKvCwPhLkv4zd43MYbofCA1KYpMX5Bppl3BJ0neGfw0eTOn/aXeej73RaLRRJUFGqUggqcb+W4Xmsi67FlhxOkj3vF6L5//2HkKAFoEs0leQu0trlLmkryempO3uwJxCkeBmYEOlHYSBxXxRCY1MXVs/3GWz3hlW72Y6iQQ5w9nUIUshNR4KkhxIHO+ZS8qxfJBnPIkRNUxxLJAk/RydkPkgGF13LMoXpD4KtFXloUCSmgJVPpNLyrFvxnJJM0qEyJVYUlYyGSmrTFJmVmQJiWUL/Gcrvxk7C/WxbP7O9ylHUn3uBIlXrA3bhe1JykupsuZzyrri7CY1MYcjA4Rl1J42geIHqsk/14aFkkoutgLwqWQn6YM2HjtZKyovu8kqlVQTqqzFB+T6DJpNob2i6cuiaCXLZM1XApOgcTPBy9jCgBG3yIXufjXrr6PXKjsd/9DlOP8ztfbfNUAuFbUVdQmXPtd3Z5Z6syxY0xK9RrGUqbKySbc20YlGjLUgryFkLdUKmFB45QLOZRWoF2S4txZHTAs9x4/lrtLH81Px75usEkXKqgTS8AEbC/1KWrgJ0/xEhURmsop2DHbB6ZH68oCOQPlI7KHYa9P8ROXUtwjykR9MUfo9YIQPkKGvEKlUN1fmuQZZf02CgGZ5jab6hbLBUmtw36k7oay/9gygfDlEBdBQeFSq97vJaixroOJ2oQDdy9u1WoByKHiQlc6mquCuu4Bg5UBR+hpZxXHLP+dwzJQ0/x3BN0KlvSnRHFHyt9u8QutfFVH+BeAxC5ZlMi2NwFFWTtUi1WcJ1ny41CHPsjJsAaqRF4gasFKVImt5v9qoU0RUeo6CjQH8/5B14T3LarB7FA9Y8IEgBWhuUGRN6zooFMamUqH2gi2ZyMAnwtYHUGRNeZMiq02Y6jOt05W3f52z2km3hiLrvxL3t5G1TZXwqVh46zyWvrNyOoqsh0RWRX9d2zSLHQvVwAtB9Jcr3m6lgxRZ03pYCjm10qpQTE9cDaUDFCJQ6nzGbtI1rPCmtB6Wwk6lPsAUwDABdmFc/VQYYnibunR7KLKef4TvKGsrXg164tOiEqKONiGg+54KQI4K3d0XabZEVePHERnzDtG6f1kMN8yQzpKskPAB0uylDNjwvXCD331XtwWqyjrSFfr8XrAoTcFGhqktOL58FGnZFluqSFr0eSz1kSN9zk3fvV/QO2IlAIOLe0X01s1l8KuI3levWvhKPUu2Bu8sK9OitT9Ndgt6+wEzmnNWYis/ZVKyByUVhTt5sXcB35lrzbGOytXmiqTlW13ikLUiF0UgPcixyWJQxvxOhqr8RfKGk7usSA1y4/tUoAByZUqe/XEu0Y60ICeLCxVShH0GkqrlzjcDaNPpYhVJWuD6RrgavYC+53LcEe5P2hEvCIyxqHNRAPhZrSj3L4hQBc03BE8rOBYiQO5Kh+aIClyaQbZ5wZ8p3PRLFM1uq8Y9Lcgp0pyfgnBitxsHRQjYeW2etVeHRlZBfI7btIIGraih6RUCjWOGrjtXPjTdCKKncEpzPBzN2YkyI4+TzkOvdPPay/ngKUiWyqwpgA7cxq6m7LcZFYim0wpG1FBKTDqsU5QeJlRy7qtA5elOHlF0AAqL+NOlIwugG0DXgLItO/mB51bPCNU8FtmCCwyJllpzrqMY3+IHbreYmzkTkQjJdaPeFYdnMoQq0jQBUiXKeyh7WFHXCAMoIE3ADVVJU3MgPqE+tLa/6uerBtLhP3djBBoZewWrkqb3MSb8Z71tt7KJ/MeJpUBOD+4ZrIbBZd4l+JqwQdKq3hqoijYiK8ziQ2oZ0Gx00FkUmwwblQ0eIk7sgQhQZOnBaiHbjOSm5qJxyWT1arTRV37tULXR0UHC6ktRZDJJE+p1LUXCcgzL1dsmUJgCDJ9g+IgUeTJJV7cpvJ/qy2dWldfqbfMVxvcJV7A51FBR2jJJk2WYXlP5KcwdAlB0w2xXaMwyfUmxDWarPaF3UfKP9p0ysUMzoaExxENpsOCjoSMlUrUkqWL0ZntKCfXcf2gnVBgNBrr8/sxcpsP7v3INWGCmpizC3l9Cgi4F7U+aT0OU/p1Lqgxa4CcgrS6xZy8+TB/UTut9zWfZ48u7zIo5QqRc0pnGns8naOrTscP7BZXO3OouqX2YL23o98sncCVazZ14s5qlrOqEJBVbMunMZr9BN7ALzdK5UblkJyVrNjNcKJJaPEdIrmG/gee4G1qXu7vwVsNEA8ve91ITamwGcSQ8OH5jAbGBUqOiFz53TndsOU3KAhtkZPX9hg4OTaB7Kehd6ewrt8yXvTu6MyxJu/Me9Ei4Tkj9S/18upeUxef6DGF3MN31+/P+brEPwvpxFAZ90Cs65qBYl+IcMlA8w3G1282mtmkGRAohHQikLNjBSAkTNFlXPOB2/l0ttzERSEQfMLjAiP8HQ8t4jvPe7JIVibrlNBWAj+kY7UjOKNok7YoAEH5DmvarWfK3nkM8eFJAp5Swb0cbUfXBR12SUbtswI3shi9BZdtYRb4Qz8W8a2aqeAnW8AhilSnbbVeCmOkaUxWFIKmvRaAr0WrPUAqyTh/r3JzRhxqeBoTGTbvYLaoKi97u0R0sl4PwvIHKDLO8XGNC1oYecyyCyAuzzDYgKzc1/CBeAmp72Q6NDL4OmOzJA/kknnWLVAhHDdRWC/JRR4tU9V+Qz5mHJ7c60LGIDkyUjCv7aFBWWlInozhppqxBESUA2PYvIqd2qUC4x8bOYU1GrqMipclrbuTBTvL48DAeOpaziSewNdVbPbjqNOk+NXD6IjQ1EZwzUhJo0gc8ZDJJoEk8ivz0ENM9xDUSpydNGoPowT9dH3QXNW5YbZELb9e85tirxdyQQJs153FtaetynWu4dTbaOGOvnkh9iZRAsXE59Emfnn9qvaxnTwn4RN/kS5gpvJsKDKVv1sE4cdeQFxjgVzaVN54FsXB3TAnLQcw/xpL6/kPG2tqKygkCHYnGMuFnvyFjbfP7AcFKmplT1s4rb8u4ZZzRx/eAXA08U1fBxUv/R0ai/cEyyoIJTpp05Hwo7jnZZl7f0kbg1R/eORCYDa9KRA0aJOGjKyOeWUm7mcW89oOSlhuOzME8nid7kbnnaT/h1kq91qU8Cl5sOFz2rFF19xfBgy1eTA484JBLEuuTpjJUuzc8SR6GeazZqNUVFDa44W17WSz349Gm1zv2NqPxYLm4mGoOIXzXbYI2JZQHQ4iMBQOOvLK8nvHdjBfQWL7VP7ynKnDRsnw8xxbz4DFfGowYpNgXDo14ThRoHB1ecW7AbVKB/FU6CzRw7iJ0zJqlIxbBwxXZMBtGXPBHZvSOKRGA6YprY/eLBgPJU3hMrP9EPBjA0erdIBJfp8YDpHQYeGMV/b86oTnaQ0lJQgLzQC+R+MeAbU4AOO9qMab4Q28q1LczrKd/IFjTAr1pX1Cv79q3Tgz6G2iNpxOjZhvtpqOw9uv68DwaTmeT+fbz7fUlwb/vt8/5fHJZTIfjXt2s7z9MqsTdLqoFFgAAAABJRU5ErkJggg==
            mediatype: image/png
          install:
            spec:
              clusterPermissions:
              - rules:
                - apiGroups:
                  - '*'
                  resources:
                  - '*'
                  verbs:
                  - '*'
                serviceAccountName: namespace-configuration-operator
              deployments:
              - name: namespace-configuration-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: namespace-configuration-operator
                  strategy: {}
                  template:
                    metadata:
                      labels:
                        name: namespace-configuration-operator
                    spec:
                      containers:
                      - command:
                        - namespace-configuration-operator
                        env:
                        - name: WATCH_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.annotations['olm.targetNamespaces']
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        - name: OPERATOR_NAME
                          value: namespace-configuration-operator
                        image: quay.io/redhat-cop/namespace-configuration-operator:v0.0.2
                        imagePullPolicy: Always
                        name: namespace-configuration-operator
                        resources: {}
                      serviceAccountName: namespace-configuration-operator
              permissions:
              - rules:
                - apiGroups:
                  - ""
                  resources:
                  - configmaps
                  - pods
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - services
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - replicasets
                  - deployments
                  verbs:
                  - get
                  - list
                - apiGroups:
                  - monitoring.coreos.com
                  resources:
                  - servicemonitors
                  verbs:
                  - get
                  - create
                - apiGroups:
                  - apps
                  resourceNames:
                  - namespace-configuration-operator
                  resources:
                  - deployments/finalizers
                  verbs:
                  - update
                serviceAccountName: namespace-configuration-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          keywords:
          - namespace
          - configuration
          - policy
          - management
          links:
          - name: repository
            url: https://github.com/redhat-cop/namespace-configuration-operator
          - name: conatinerImage
            url: https://quay.io/redhat-cop/namespace-configuration-operator:latest
          - name: blog
            url: https://blog.openshift.com/controlling-namespace-configurations
          maintainers:
          - email: rspazzol@redhat.com
            name: Raffaele Spazzoli
          maturity: alpha
          provider:
            name: Containers & PaaS CoP
          replaces: namespace-configuration-operator.v0.0.1
          version: 0.0.2
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            capabilities: Full Lifecycle
            categories: Security
            certified: "false"
            description: This operator provides a facility to define and enforce namespace configurations
            containerImage: quay.io/redhat-cop/namespace-configuration-operator:latest
            createdAt: 5/28/2019
            support: Best Effort
            repository: https://github.com/redhat-cop/namespace-configuration-operator
            alm-examples: |
              [
                {
                  "apiVersion": "redhatcop.redhat.io/v1alpha1",
                  "kind": "NamespaceConfig",
                  "metadata": {
                      "name": "small-size"
                  },
                  "spec": {
                      "selector": {
                        "matchLabels": {
                            "size": "small"
                        }
                      },
                      "resources": [
                        {
                            "apiVersion": "v1",
                            "kind": "ResourceQuota",
                            "metadata": {
                              "name": "small-size"
                            },
                            "spec": {
                              "hard": {
                                  "requests.cpu": "4",
                                  "requests.memory": "2Gi"
                              }
                            }
                        }
                      ]
                  }
                }
              ]
          name: namespace-configuration-operator.v0.0.1
          namespace: namespace-configuration-operator
        spec:
          icon:
          - base64data: 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
            mediatype: image/png
          links:
          - name: repository
            url: https://github.com/redhat-cop/namespace-configuration-operator
          - name: conatinerImage
            url: https://quay.io/redhat-cop/namespace-configuration-operator:latest
          - name: blog
            url: https://blog.openshift.com/controlling-namespace-configurations
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          maturity: alpha
          version: 0.0.1
          keywords: ['namespace', 'configuration', 'policy', 'management']
          maintainers:
          - name: Raffaele Spazzoli
            email: rspazzol@redhat.com
          provider:
            name: Containers & PaaS CoP
          apiservicedefinitions: {}
          description: |
            The namespace configuration operator helps keeping a namespace's configuration aligned with one of more policies specified as a CRs.
            The ` + "`" + `NamespaceConfig` + "`" + ` CR allows specifying one or more objects that will be created in the selected namespaces.
            For example using this operator an administrator can enforce a specific ResourceQuota or LimitRange on a set of namespaces. For example with the following snippet:
            ` + "`" + `` + "`" + `` + "`" + `
            apiVersion: redhatcop.redhat.io/v1alpha1
            kind: NamespaceConfig
            metadata:
              name: small-size
            spec:
              selector:
                matchLabels:
                  size: small
              resources:
              - apiVersion: v1
                kind: ResourceQuota
                metadata:
                  name: small-size
                spec:
                  hard:
                    requests.cpu: "4"
                    requests.memory: "2Gi"
            ` + "`" + `` + "`" + `` + "`" + `
            we are enforcing that all the namespaces with label: ` + "`" + `size=small` + "`" + ` receive the specified resource quota.
          customresourcedefinitions:
            owned:
            - kind: NamespaceConfig
              name: namespaceconfigs.redhatcop.redhat.io
              version: v1alpha1
              displayName: Namespace Configuration
              description: Represent the desired configuration for a set of namespaces selected via labels
          displayName: Namespace Configuration Operator
          install:
            spec:
              clusterPermissions:
              - rules:
                - apiGroups:
                  - "*"
                  resources:
                  - "*"
                  verbs:
                  - '*'
                serviceAccountName: namespace-configuration-operator
              deployments:
              - name: namespace-configuration-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: namespace-configuration-operator
                  strategy: {}
                  template:
                    metadata:
                      labels:
                        name: namespace-configuration-operator
                    spec:
                      containers:
                      - command:
                        - namespace-configuration-operator
                        env:
                        - name: WATCH_NAMESPACE
                          value: ""
                        - name: POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        - name: OPERATOR_NAME
                          value: namespace-configuration-operator
                        image: quay.io/redhat-cop/namespace-configuration-operator:latest
                        imagePullPolicy: Always
                        name: namespace-configuration-operator
                        resources: {}
                      serviceAccountName: namespace-configuration-operator
              permissions:
              - rules:
                - apiGroups:
                  - ""
                  resources:
                  - configmaps
                  - pods
                  verbs:
                  - '*'
                - apiGroups:
                  - ""
                  resources:
                  - services
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - replicasets
                  - deployments
                  verbs:
                  - get
                  - list
                - apiGroups:
                  - monitoring.coreos.com
                  resources:
                  - servicemonitors
                  verbs:
                  - get
                  - create
                - apiGroups:
                  - apps
                  resourceNames:
                  - namespace-configuration-operator
                  resources:
                  - deployments/finalizers
                  verbs:
                  - update
                serviceAccountName: namespace-configuration-operator
            strategy: deployment
    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: namespaceconfigs.redhatcop.redhat.io
        spec:
          group: redhatcop.redhat.io
          names:
            kind: NamespaceConfig
            listKind: NamespaceConfigList
            plural: namespaceconfigs
            singular: namespaceconfig
          scope: Namespaced
          versions:
          - name: v1alpha1
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
    packages: |
      - channels:
        - currentCSV: namespace-configuration-operator.v0.1.0
          name: alpha
        defaultChannel: alpha
        packageName: namespace-configuration-operator
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
parameters:
- name: NAME
- name: NAMESPACE

`)

func testQeTestdataOlmCmNamespaceconfigYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCmNamespaceconfigYaml, nil
}

func testQeTestdataOlmCmNamespaceconfigYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCmNamespaceconfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cm-namespaceconfig.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCmTemplateYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-sub-template
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  data:
    special.how: very
    special.type: charm
parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmCmTemplateYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCmTemplateYaml, nil
}

func testQeTestdataOlmCmTemplateYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCmTemplateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cm-template.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmConfigmapEctdAlphaBetaYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-bad-operator-template
objects:
- apiVersion: v1
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\
              \n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\
              \n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\
              \n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\
              \n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"\
              path\": \"<full-s3-path>\",\n        \"awsSecret\": \"<aws-secret>\"\n     \
              \ }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\
              \n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"<etcd-cluster-endpoints>\"\
              ],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"<full-s3-path>\"\
              ,\n        \"awsSecret\": \"<aws-secret>\"\n      }\n    }\n  }\n]\n"
            capabilities: Full Lifecycle
            categories: Database
            description: Creates and maintain highly-available etcd clusters on Kubernetes
            tectonic-visibility: ocs
          name: etcdoperator.v0.9.2
          namespace: placeholder
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              - description: Limits describes the minimum/maximum amount of compute resources
                  required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to backup an etcd cluster.
              displayName: etcd Backup
              kind: EtcdBackup
              name: etcdbackups.etcd.database.coreos.com
              specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors:
                - urn:alm:descriptor:etcd:endpoint
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to restore an etcd cluster from a backup.
              displayName: etcd Restore
              kind: EtcdRestore
              name: etcdrestores.etcd.database.coreos.com
              specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:EtcdCluster
                - urn:alm:descriptor:text
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          description: "The etcd Operater creates and maintains highly-available etcd clusters\
            \ on Kubernetes, allowing engineers to easily deploy and manage etcd clusters\
            \ for their applications.\n\netcd is a distributed key value store that provides\
            \ a reliable way to store data across a cluster of machines. It\xE2\u20AC\u2122\
            s open-source and available on GitHub. etcd gracefully handles leader elections\
            \ during network partitions and will tolerate machine failure, including the leader.\n\
            \n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command\
            \ line utility ` + "`" + `etcdctl` + "`" + ` via port forwarding:\n\n    $ kubectl --namespace default\
            \ port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379\
            \ get /\n\nOr directly to the API using the automatically generated Kubernetes\
            \ Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379\
            \ get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before\
            \ exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\
            \n* **High availability** - Multiple instances of etcd are networked together\
            \ and secured. Individual failures or networking issues are transparently handled\
            \ to keep your cluster up and running.\n\n* **Automated updates** - Rolling out\
            \ a new etcd version works like all Kubernetes rolling updates. Simply declare\
            \ the desired version, and the etcd service starts a safe rolling update to the\
            \ new version automatically.\n\n* **Backups included** - Create etcd backups and\
            \ restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure\
            \ TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md)\
            \ as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your\
            \ etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes)\
            \ across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the\
            \ Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement)\
            \ values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition)\
            \ that you would like to use.\n"
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-operator
                      - command:
                        - etcd-backup-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-backup-operator
                      - command:
                        - etcd-restore-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-restore-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  - etcdbackups
                  - etcdrestores
                  verbs:
                  - '*'
                - apiGroups:
                  - ''
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ''
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: etcd-dev@googlegroups.com
            name: etcd Community
          maturity: alpha
          provider:
            name: CNCF
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.9.2
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\
              \n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\
              \n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\
              \n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\
              \n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"\
              path\": \"<full-s3-path>\",\n        \"awsSecret\": \"<aws-secret>\"\n     \
              \ }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\
              \n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"<etcd-cluster-endpoints>\"\
              ],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"<full-s3-path>\"\
              ,\n        \"awsSecret\": \"<aws-secret>\"\n      }\n    }\n  }\n]\n"
            capabilities: Full Lifecycle
            categories: Database
            containerImage: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
            createdAt: 2019-02-28 01:03:00
            description: Create and maintain highly-available etcd clusters on Kubernetes
            repository: https://github.com/coreos/etcd-operator
            tectonic-visibility: ocs
          name: etcdoperator.v0.9.4
          namespace: placeholder
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              - description: Limits describes the minimum/maximum amount of compute resources
                  required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta3
            - description: Represents the intent to backup an etcd cluster.
              displayName: etcd Backup
              kind: EtcdBackup
              name: etcdbackups.etcd.database.coreos.com
              specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors:
                - urn:alm:descriptor:etcd:endpoint
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to restore an etcd cluster from a backup.
              displayName: etcd Restore
              kind: EtcdRestore
              name: etcdrestores.etcd.database.coreos.com
              specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:EtcdCluster
                - urn:alm:descriptor:text
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          description: "The etcd Operater creates and maintains highly-available etcd clusters\
            \ on Kubernetes, allowing engineers to easily deploy and manage etcd clusters\
            \ for their applications.\n\netcd is a distributed key value store that provides\
            \ a reliable way to store data across a cluster of machines. It\xE2\u20AC\u2122\
            s open-source and available on GitHub. etcd gracefully handles leader elections\
            \ during network partitions and will tolerate machine failure, including the leader.\n\
            \n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command\
            \ line utility ` + "`" + `etcdctl` + "`" + ` via port forwarding:\n\n    $ kubectl --namespace default\
            \ port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379\
            \ get /\n\nOr directly to the API using the automatically generated Kubernetes\
            \ Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379\
            \ get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before\
            \ exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\
            \n* **High availability** - Multiple instances of etcd are networked together\
            \ and secured. Individual failures or networking issues are transparently handled\
            \ to keep your cluster up and running.\n\n* **Automated updates** - Rolling out\
            \ a new etcd version works like all Kubernetes rolling updates. Simply declare\
            \ the desired version, and the etcd service starts a safe rolling update to the\
            \ new version automatically.\n\n* **Backups included** - Create etcd backups and\
            \ restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure\
            \ TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md)\
            \ as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your\
            \ etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes)\
            \ across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the\
            \ Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement)\
            \ values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition)\
            \ that you would like to use.\n"
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                        name: etcd-operator
                      - command:
                        - etcd-backup-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                        name: etcd-backup-operator
                      - command:
                        - etcd-restore-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                        name: etcd-restore-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  - etcdbackups
                  - etcdrestores
                  verbs:
                  - '*'
                - apiGroups:
                  - ''
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ''
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: etcd-dev@googlegroups.com
            name: etcd Community
          maturity: alpha
          provider:
            name: CNCF
          replaces: etcdoperator.v0.9.2
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.9.4

    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: etcdclusters.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdCluster
            listKind: EtcdClusterList
            plural: etcdclusters
            shortNames:
            - etcdclus
            - etcd
            singular: etcdcluster
          scope: Namespaced
          versions:
          - name: v1beta3
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
          - name: v1beta2
            served: true
            storage: false
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: etcdbackups.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdBackup
            listKind: EtcdBackupList
            plural: etcdbackups
            singular: etcdbackup
          scope: Namespaced
          versions:
          - name: v1beta2
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: etcdrestores.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdRestore
            listKind: EtcdRestoreList
            plural: etcdrestores
            singular: etcdrestore
          scope: Namespaced
          versions:
          - name: v1beta2
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
    packages: |
      - channels:
        - currentCSV: etcdoperator.v0.9.2
          name: alpha
        - currentCSV: etcdoperator.v0.9.4
          name: beta
        defaultChannel: alpha
        packageName: etcd-update
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmConfigmapEctdAlphaBetaYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmConfigmapEctdAlphaBetaYaml, nil
}

func testQeTestdataOlmConfigmapEctdAlphaBetaYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmConfigmapEctdAlphaBetaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/configmap-ectd-alpha-beta.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmConfigmapEtcdYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cm-bad-operator-template
objects:
- apiVersion: v1
  data:
    clusterServiceVersions: |
      - apiVersion: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        metadata:
          annotations:
            alm-examples: "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\
              \n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\
              \n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\
              \n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\
              \n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"\
              path\": \"<full-s3-path>\",\n        \"awsSecret\": \"<aws-secret>\"\n     \
              \ }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
              ,\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\
              \n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"<etcd-cluster-endpoints>\"\
              ],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"<full-s3-path>\"\
              ,\n        \"awsSecret\": \"<aws-secret>\"\n      }\n    }\n  }\n]\n"
            capabilities: Full Lifecycle
            categories: Database
            description: Creates and maintain highly-available etcd clusters on Kubernetes
            tectonic-visibility: ocs
          name: etcdoperator.v0.9.2
          namespace: placeholder
        spec:
          customresourcedefinitions:
            owned:
            - description: Represents a cluster of etcd nodes.
              displayName: etcd Cluster
              kind: EtcdCluster
              name: etcdclusters.etcd.database.coreos.com
              resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
              specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podCount
              - description: Limits describes the minimum/maximum amount of compute resources
                  required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
              statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                - urn:alm:descriptor:com.tectonic.ui:podStatuses
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Service
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: The target version of the etcd cluster, after upgrading.
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to backup an etcd cluster.
              displayName: etcd Backup
              kind: EtcdBackup
              name: etcdbackups.etcd.database.coreos.com
              specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors:
                - urn:alm:descriptor:etcd:endpoint
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
            - description: Represents the intent to restore an etcd cluster from a backup.
              displayName: etcd Restore
              kind: EtcdRestore
              name: etcdrestores.etcd.database.coreos.com
              specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:EtcdCluster
                - urn:alm:descriptor:text
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors:
                - urn:alm:descriptor:aws:s3:path
              - description: The name of the secret object that stores the AWS credential
                  and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes:Secret
              statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors:
                - urn:alm:descriptor:text
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors:
                - urn:alm:descriptor:io.kubernetes.phase:reason
              version: v1beta2
          description: "The etcd Operater creates and maintains highly-available etcd clusters\
            \ on Kubernetes, allowing engineers to easily deploy and manage etcd clusters\
            \ for their applications.\n\netcd is a distributed key value store that provides\
            \ a reliable way to store data across a cluster of machines. It\xE2\u20AC\u2122\
            s open-source and available on GitHub. etcd gracefully handles leader elections\
            \ during network partitions and will tolerate machine failure, including the leader.\n\
            \n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command\
            \ line utility ` + "`" + `etcdctl` + "`" + ` via port forwarding:\n\n    $ kubectl --namespace default\
            \ port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379\
            \ get /\n\nOr directly to the API using the automatically generated Kubernetes\
            \ Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379\
            \ get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before\
            \ exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\
            \n* **High availability** - Multiple instances of etcd are networked together\
            \ and secured. Individual failures or networking issues are transparently handled\
            \ to keep your cluster up and running.\n\n* **Automated updates** - Rolling out\
            \ a new etcd version works like all Kubernetes rolling updates. Simply declare\
            \ the desired version, and the etcd service starts a safe rolling update to the\
            \ new version automatically.\n\n* **Backups included** - Create etcd backups and\
            \ restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure\
            \ TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md)\
            \ as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your\
            \ etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes)\
            \ across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the\
            \ Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement)\
            \ values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition)\
            \ that you would like to use.\n"
          displayName: etcd
          icon:
          - base64data: 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
            mediatype: image/png
          install:
            spec:
              deployments:
              - name: etcd-operator
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      name: etcd-operator-alm-owned
                  template:
                    metadata:
                      labels:
                        name: etcd-operator-alm-owned
                      name: etcd-operator-alm-owned
                    spec:
                      containers:
                      - command:
                        - etcd-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-operator
                      - command:
                        - etcd-backup-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-backup-operator
                      - command:
                        - etcd-restore-operator
                        - --create-crd=false
                        env:
                        - name: MY_POD_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: MY_POD_NAME
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.name
                        image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                        name: etcd-restore-operator
                      serviceAccountName: etcd-operator
              permissions:
              - rules:
                - apiGroups:
                  - etcd.database.coreos.com
                  resources:
                  - etcdclusters
                  - etcdbackups
                  - etcdrestores
                  verbs:
                  - '*'
                - apiGroups:
                  - ''
                  resources:
                  - pods
                  - services
                  - endpoints
                  - persistentvolumeclaims
                  - events
                  verbs:
                  - '*'
                - apiGroups:
                  - apps
                  resources:
                  - deployments
                  verbs:
                  - '*'
                - apiGroups:
                  - ''
                  resources:
                  - secrets
                  verbs:
                  - get
                serviceAccountName: etcd-operator
            strategy: deployment
          installModes:
          - supported: true
            type: OwnNamespace
          - supported: true
            type: SingleNamespace
          - supported: false
            type: MultiNamespace
          - supported: false
            type: AllNamespaces
          keywords:
          - etcd
          - key value
          - database
          - coreos
          - open source
          labels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
          links:
          - name: Blog
            url: https://coreos.com/etcd
          - name: Documentation
            url: https://coreos.com/operators/etcd/docs/latest/
          - name: etcd Operator Source Code
            url: https://github.com/coreos/etcd-operator
          maintainers:
          - email: etcd-dev@googlegroups.com
            name: etcd Community
          maturity: alpha
          provider:
            name: CNCF
          selector:
            matchLabels:
              alm-owner-etcd: etcdoperator
              operated-by: etcdoperator
          version: 0.9.2
    customResourceDefinitions: |
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: etcdclusters.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdCluster
            listKind: EtcdClusterList
            plural: etcdclusters
            shortNames:
            - etcdclus
            - etcd
            singular: etcdcluster
          scope: Namespaced
          versions:
          - name: v1beta2
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: etcdbackups.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdBackup
            listKind: EtcdBackupList
            plural: etcdbackups
            singular: etcdbackup
          scope: Namespaced
          versions:
          - name: v1beta2
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: etcdrestores.etcd.database.coreos.com
        spec:
          group: etcd.database.coreos.com
          names:
            kind: EtcdRestore
            listKind: EtcdRestoreList
            plural: etcdrestores
            singular: etcdrestore
          scope: Namespaced
          versions:
          - name: v1beta2
            served: true
            storage: true
            schema:
              openAPIV3Schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  metadata:
                    type: object
                  spec:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  status:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
    packages: |
      - channels:
        - currentCSV: etcdoperator.v0.9.2
          name: alpha
        defaultChannel: "alpha"
        packageName: etcd-update
  kind: ConfigMap
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmConfigmapEtcdYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmConfigmapEtcdYaml, nil
}

func testQeTestdataOlmConfigmapEtcdYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmConfigmapEtcdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/configmap-etcd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmConfigmapTestYaml = []byte(`apiVersion: v1
kind: ConfigMap
metadata:
  name: test
  namespace: default
`)

func testQeTestdataOlmConfigmapTestYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmConfigmapTestYaml, nil
}

func testQeTestdataOlmConfigmapTestYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmConfigmapTestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/configmap-test.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmConfigmapWithDefaultchannelYaml = []byte(`---
kind: ConfigMap
apiVersion: v1
metadata:
  name: scenario3
  namespace: scenario3
data:
  customResourceDefinitions: |-
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: exampleas.examples.io
      spec:
        group: examples.io
        names:
          kind: ExampleA
          listKind: ExampleAList
          plural: exampleas
          singular: examplea
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: examplebs.examples.io
      spec:
        group: examples.io
        names:
          kind: ExampleB
          listKind: ExampleBList
          plural: examplebs
          singular: exampleb
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
  clusterServiceVersions: |-
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-a.v0.0.1
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleA
            name: exampleas.examples.io
            version: v1alpha1
            displayName: Example A
            description: Example A Custom Resource Definition
          required:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator A
        description: An example operator (A)
        provider:
          name: Example Provider A
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-a
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-a
            deployments:
            - name: example-operator-a
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-a
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-a
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-a:v1
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-a
                      image: docker.io/djzager/example-operator-a:v1
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-a
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: alpha
        version: 0.0.1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-a.v1.0.0
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleA
            name: exampleas.examples.io
            version: v1alpha1
            displayName: Example A
            description: Example A Custom Resource Definition
          required:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator A
        description: An example operator (A)
        provider:
          name: Example Provider A
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-a
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-a
            deployments:
            - name: example-operator-a
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-a
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-a
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-a:v1stable
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-a
                      image: docker.io/djzager/example-operator-a:v1stable
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-a
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: stable
        version: 1.0.0
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-b.v0.0.1
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator B
        description: An example operator (B)
        provider:
          name: Example Provider B
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-b
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-b
            deployments:
            - name: example-operator-b
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-b
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-b
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-b:v1
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-b
                      image: docker.io/djzager/example-operator-b:v1
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-b
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: alpha
        version: 0.0.1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-b.v1.0.0
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator B
        description: An example operator (B)
        provider:
          name: Example Provider B
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-b
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-b
            deployments:
            - name: example-operator-b
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-b
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-b
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-b:v1stable
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-b
                      image: docker.io/djzager/example-operator-b:v1stable
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-b
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: stable
        version: 1.0.0
  packages: |-
    - packageName: example-operator-a
      defaultChannel: alpha
      channels:
      - name: alpha
        currentCSV: example-operator-a.v0.0.1
      - name: stable
        currentCSV: example-operator-a.v1.0.0
    - packageName: example-operator-b
      defaultChannel: alpha
      channels:
      - name: alpha
        currentCSV: example-operator-b.v0.0.1
      - name: stable
        currentCSV: example-operator-b.v1.0.0
`)

func testQeTestdataOlmConfigmapWithDefaultchannelYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmConfigmapWithDefaultchannelYaml, nil
}

func testQeTestdataOlmConfigmapWithDefaultchannelYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmConfigmapWithDefaultchannelYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/configmap-with-defaultchannel.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmConfigmapWithoutDefaultchannelYaml = []byte(`---
kind: ConfigMap
apiVersion: v1
metadata:
  name: scenario3
  namespace: scenario3
data:
  customResourceDefinitions: |-
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: exampleas.examples.io
      spec:
        group: examples.io
        names:
          kind: ExampleA
          listKind: ExampleAList
          plural: exampleas
          singular: examplea
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: examplebs.examples.io
      spec:
        group: examples.io
        names:
          kind: ExampleB
          listKind: ExampleBList
          plural: examplebs
          singular: exampleb
        scope: Namespaced
        subresources:
          status: {}
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
  clusterServiceVersions: |-
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-a.v0.0.1
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleA
            name: exampleas.examples.io
            version: v1alpha1
            displayName: Example A
            description: Example A Custom Resource Definition
          required:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator A
        description: An example operator (A)
        provider:
          name: Example Provider A
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-a
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-a
            deployments:
            - name: example-operator-a
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-a
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-a
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-a:v1
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-a
                      image: docker.io/djzager/example-operator-a:v1
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-a
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: alpha
        version: 0.0.1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-a.v1.0.0
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleA
            name: exampleas.examples.io
            version: v1alpha1
            displayName: Example A
            description: Example A Custom Resource Definition
          required:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator A
        description: An example operator (A)
        provider:
          name: Example Provider A
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-a
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-a
            deployments:
            - name: example-operator-a
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-a
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-a
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-a:v1stable
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-a
                      image: docker.io/djzager/example-operator-a:v1stable
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-a
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: stable
        version: 1.0.0
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-b.v0.0.1
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator B
        description: An example operator (B)
        provider:
          name: Example Provider B
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-b
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-b
            deployments:
            - name: example-operator-b
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-b
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-b
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-b:v1
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-b
                      image: docker.io/djzager/example-operator-b:v1
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-b
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: alpha
        version: 0.0.1
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          capabilities: Basic Install
        name: example-operator-b.v1.0.0
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - kind: ExampleB
            name: examplebs.examples.io
            version: v1alpha1
            displayName: Example B
            description: Example B Custom Resource Definition
        displayName: Example Operator B
        description: An example operator (B)
        provider:
          name: Example Provider B
        links:
          - name: Source Code
            url: https://github.com/djzager/olm-playground
        keywords:
          - foo
          - bar
          - baz
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - example-operator-b
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - examples.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: example-operator-b
            deployments:
            - name: example-operator-b
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: example-operator-b
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: example-operator-b
                  spec:
                    containers:
                    - command:
                      - /usr/local/bin/ao-logs
                      - /tmp/ansible-operator/runner
                      - stdout
                      image: docker.io/djzager/example-operator-b:v1stable
                      imagePullPolicy: IfNotPresent
                      name: ansible
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                        readOnly: true
                    - env:
                      - name: WATCH_NAMESPACE
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: example-operator-b
                      image: docker.io/djzager/example-operator-b:v1stable
                      imagePullPolicy: IfNotPresent
                      name: operator
                      resources: {}
                      volumeMounts:
                      - mountPath: /tmp/ansible-operator/runner
                        name: runner
                    serviceAccountName: example-operator-b
                    volumes:
                    - emptyDir: {}
                      name: runner
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        maturity: stable
        version: 1.0.0
  packages: |-
    - packageName: example-operator-a
      channels:
      - name: alpha
        currentCSV: example-operator-a.v0.0.1
      - name: stable
        currentCSV: example-operator-a.v1.0.0
    - packageName: example-operator-b
      channels:
      - name: alpha
        currentCSV: example-operator-b.v0.0.1
      - name: stable
        currentCSV: example-operator-b.v1.0.0
`)

func testQeTestdataOlmConfigmapWithoutDefaultchannelYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmConfigmapWithoutDefaultchannelYaml, nil
}

func testQeTestdataOlmConfigmapWithoutDefaultchannelYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmConfigmapWithoutDefaultchannelYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/configmap-without-defaultchannel.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCrWebhooktestYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: WebhookTest-template
objects:
- apiVersion: webhook.operators.coreos.io/v1
  kind: WebhookTest
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
  spec:
    valid: ${{VALID}}
parameters:
- name: NAME
- name: NAMESPACE
- name: VALID
`)

func testQeTestdataOlmCrWebhooktestYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCrWebhooktestYaml, nil
}

func testQeTestdataOlmCrWebhooktestYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCrWebhooktestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cr-webhookTest.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCr_devworkspaceYaml = []byte(`kind: DevWorkspace
apiVersion: workspace.devfile.io/v1alpha2
metadata:
  name: empty-devworkspace
spec:
  started: true
  template: {}

`)

func testQeTestdataOlmCr_devworkspaceYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCr_devworkspaceYaml, nil
}

func testQeTestdataOlmCr_devworkspaceYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCr_devworkspaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cr_devworkspace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCr_pgadminYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: PGAdmin-template
objects:
- apiVersion: postgres-operator.crunchydata.com/v1beta1
  kind: PGAdmin
  metadata:
    name: pgadmin-example
    namespace: ${NAMESPACE}
  spec:
    dataVolumeClaimSpec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    serverGroups:
    - name: Crunchy Postgres for Kubernetes
      postgresClusterSelector: {}
    tolerations:
    - tolerationSeconds: 1726856593000774400

parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmCr_pgadminYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCr_pgadminYaml, nil
}

func testQeTestdataOlmCr_pgadminYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCr_pgadminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cr_pgadmin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCsImageTemplateYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cs-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    annotations:
      olm.catalogImageTemplate: "${IMAGETEMPLATE}"
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: IMAGETEMPLATE
  value: "quay.io/kube-release-v{kube_major_version}/catalog:v{kube_major_version}"
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"

`)

func testQeTestdataOlmCsImageTemplateYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCsImageTemplateYaml, nil
}

func testQeTestdataOlmCsImageTemplateYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCsImageTemplateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cs-image-template.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCsWithoutImageYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: catalogsource-image-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    displayName: "${DISPLAYNAME}"
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: 10m0s
parameters:
- name: NAME
- name: NAMESPACE
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
`)

func testQeTestdataOlmCsWithoutImageYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCsWithoutImageYaml, nil
}

func testQeTestdataOlmCsWithoutImageYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCsWithoutImageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cs-without-image.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCsWithoutIntervalYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cs-wihtout-interval
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    annotations:
      olm.catalogImageTemplate: "${IMAGETEMPLATE}"
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
parameters:
- name: IMAGETEMPLATE
  value: "quay.io/kube-release-v{kube_major_version}/catalog:v{kube_major_version}"
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
`)

func testQeTestdataOlmCsWithoutIntervalYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCsWithoutIntervalYaml, nil
}

func testQeTestdataOlmCsWithoutIntervalYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCsWithoutIntervalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cs-without-interval.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCsWithoutSccYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cs-without-scc
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    annotations:
      olm.catalogImageTemplate: "${IMAGETEMPLATE}"
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    image: "${ADDRESS}"
    secrets:
    - "${SECRET}"  
    displayName: "${DISPLAYNAME}"
    publisher: "${PUBLISHER}"
    sourceType: "${SOURCETYPE}"
    updateStrategy:
      registryPoll:
        interval: "${INTERVAL}"
parameters:
- name: IMAGETEMPLATE
  value: "quay.io/kube-release-v{kube_major_version}/catalog:v{kube_major_version}"
- name: NAME
- name: NAMESPACE
- name: ADDRESS
- name: DISPLAYNAME
- name: PUBLISHER
- name: SOURCETYPE
- name: SECRET
- name: INTERVAL
  value: "10m0s"

`)

func testQeTestdataOlmCsWithoutSccYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCsWithoutSccYaml, nil
}

func testQeTestdataOlmCsWithoutSccYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCsWithoutSccYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/cs-without-scc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmCscYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: opsrc-template
objects:
- kind: CatalogSourceConfig
  apiVersion: operators.coreos.com/v1
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    packages: "${PACKAGES}"
    targetNamespace: "${TARGETNAMESPACE}"
    source: "${SOURCE}"
parameters:
- name: NAME
- name: NAMESPACE
- name: PACKAGES
- name: TARGETNAMESPACE
- name: SOURCE
`)

func testQeTestdataOlmCscYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmCscYaml, nil
}

func testQeTestdataOlmCscYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmCscYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/csc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmEnvSubscriptionYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: sub-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: Subscription
  metadata:
    name: "${SUBNAME}"
    namespace: "${SUBNAMESPACE}"
  spec:
    channel: "${CHANNEL}"
    installPlanApproval: "${APPROVAL}"
    name: "${OPERATORNAME}"
    source: "${SOURCENAME}"
    sourceNamespace: "${SOURCENAMESPACE}"
    startingCSV: "${STARTINGCSV}"
    config:
      env:
      - name: ISO_IMAGE_TYPE
        value: "minimal-iso"
      - name: OPENSHIFT_VERSIONS
        value: '{"4.6":{"display_name":"4.6.16","release_image":"quay.io/openshift-release-dev/ocp-release:4.6.16-x86_64","rhcos_image":"https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.6/4.6.8/rhcos-4.6.8-x86_64-live.x86_64.iso","rhcos_version":"46.82.202012051820-0","support_level":"production"},"4.7":{"display_name":"4.7.2","release_image":"quay.io/openshift-release-dev/ocp-release:4.7.2-x86_64","rhcos_image":"https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.7/4.7.0/rhcos-4.7.0-x86_64-live.x86_64.iso","rhcos_version":"47.83.202102090044-0","support_level":"production"},"4.8":{"display_name":"4.8","release_image":"registry.ci.openshift.org/ocp/release:4.8.0-0.nightly-2021-04-09-140229","rhcos_image":"https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.7/4.7.0/rhcos-4.7.0-x86_64-live.x86_64.iso","rhcos_version":"47.83.202102090044-0","support_level":"production"}}'
      - name: OPERATOR_CONDITION_NAME
        value: etcdoperator.v0.9.5
      - name: MY_POD_NAMESPACE
        value: default
parameters:
- name: SUBNAME
- name: SUBNAMESPACE
- name: CHANNEL
- name: APPROVAL
  value: "Automatic"
- name: OPERATORNAME
- name: SOURCENAME
- name: SOURCENAMESPACE
  value: "openshift-marketplace"
- name: STARTINGCSV
  value: ""
`)

func testQeTestdataOlmEnvSubscriptionYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmEnvSubscriptionYaml, nil
}

func testQeTestdataOlmEnvSubscriptionYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmEnvSubscriptionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/env-subscription.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmEnvfromSubscriptionYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: sub-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: Subscription
  metadata:
    name: "${SUBNAME}"
    namespace: "${SUBNAMESPACE}"
  spec:
    channel: "${CHANNEL}"
    installPlanApproval: "${APPROVAL}"
    name: "${OPERATORNAME}"
    source: "${SOURCENAME}"
    sourceNamespace: "${SOURCENAMESPACE}"
    startingCSV: "${STARTINGCSV}"
    config:
      envFrom:
      - configMapRef:
          name: "${CONFIGMAPREF}"
      - secretRef:
          name: "${SECRETREF}"
parameters:
- name: SUBNAME
- name: SUBNAMESPACE
- name: CHANNEL
- name: APPROVAL
  value: "Automatic"
- name: OPERATORNAME
- name: SOURCENAME
- name: SOURCENAMESPACE
  value: "openshift-marketplace"
- name: STARTINGCSV
  value: ""
- name: CONFIGMAPREF
- name: SECRETREF
`)

func testQeTestdataOlmEnvfromSubscriptionYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmEnvfromSubscriptionYaml, nil
}

func testQeTestdataOlmEnvfromSubscriptionYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmEnvfromSubscriptionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/envfrom-subscription.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmEtcdClusterYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: etcdCluster-template
objects:
- apiVersion: etcd.database.coreos.com/v1beta2
  kind: EtcdCluster
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    size: 3
    version: 3.2.13
parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmEtcdClusterYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmEtcdClusterYaml, nil
}

func testQeTestdataOlmEtcdClusterYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmEtcdClusterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/etcd-cluster.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmEtcdSubscriptionManualYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: subscription-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: Subscription
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    channel: "${CHANNEL}"
    installPlanApproval: "${APPROVAL}"
    name: etcd
    source: "${SOURCENAME}"
    sourceNamespace: "${SOURCENAMESPACE}"
    startingCSV: "${STARTINGCSV}"
parameters:
- name: NAME
- name: NAMESPACE
- name: SOURCENAME
- name: SOURCENAMESPACE
- name: CHANNEL
  value: "singlenamespace-alpha"
- name: STARTINGCSV
  value: "etcdoperator.v0.9.4"
- name: APPROVAL
  value: "Manual"
`)

func testQeTestdataOlmEtcdSubscriptionManualYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmEtcdSubscriptionManualYaml, nil
}

func testQeTestdataOlmEtcdSubscriptionManualYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmEtcdSubscriptionManualYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/etcd-subscription-manual.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmEtcdSubscriptionYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: subscription-template
objects:
  - apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: "${NAME}"
      namespace: "${NAMESPACE}"
    spec:
      channel: "${CHANNEL}"
      installPlanApproval: "${APPROVAL}"
      name: etcd
      source: "${SOURCENAME}"
      sourceNamespace: "${SOURCENAMESPACE}"
      startingCSV: "${STARTINGCSV}"
parameters:
  - name: NAME
  - name: NAMESPACE
  - name: SOURCENAME
  - name: SOURCENAMESPACE
  - name: CHANNEL
    value: "singlenamespace-alpha"
  - name: STARTINGCSV
    value: "etcdoperator.v0.9.4"
  - name: APPROVAL
    value: "Automatic"
`)

func testQeTestdataOlmEtcdSubscriptionYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmEtcdSubscriptionYaml, nil
}

func testQeTestdataOlmEtcdSubscriptionYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmEtcdSubscriptionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/etcd-subscription.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmMcWorkloadPartitionYaml = []byte(`apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: master
  name: 02-master-workload-partitioning
spec:
  config:
    ignition:
      version: 3.2.0
    storage:
      files:
      - contents:
          source: data:text/plain;charset=utf-8;base64,W2NyaW8ucnVudGltZS53b3JrbG9hZHMubWFuYWdlbWVudF0KYWN0aXZhdGlvbl9hbm5vdGF0aW9uID0gInRhcmdldC53b3JrbG9hZC5vcGVuc2hpZnQuaW8vbWFuYWdlbWVudCIKYW5ub3RhdGlvbl9wcmVmaXggPSAicmVzb3VyY2VzLndvcmtsb2FkLm9wZW5zaGlmdC5pbyIKW2NyaW8ucnVudGltZS53b3JrbG9hZHMubWFuYWdlbWVudC5yZXNvdXJjZXNdCmNwdXNoYXJlcyA9IDAKQ1BVcyA9ICIwLTEsIDUyLTUzIgo=
        mode: 420
        overwrite: true
        path: /etc/crio/crio.conf.d/01-workload-partitioning
        user:
          name: root
      - contents:
          source: data:text/plain;charset=utf-8;base64,ewogICJtYW5hZ2VtZW50IjogewogICAgImNwdXNldCI6ICIwLTEsNTItNTMiCiAgfQp9Cg==
        mode: 420
        overwrite: true
        path: /etc/kubernetes/openshift-workload-pinning
        user:
          name: root
`)

func testQeTestdataOlmMcWorkloadPartitionYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmMcWorkloadPartitionYaml, nil
}

func testQeTestdataOlmMcWorkloadPartitionYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmMcWorkloadPartitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/mc-workload-partition.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOgAllnsYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: operatorgroup-allns-template
objects:
- kind: OperatorGroup
  apiVersion: operators.coreos.com/v1
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
parameters:
- name: NAME
- name: NAMESPACE

`)

func testQeTestdataOlmOgAllnsYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOgAllnsYaml, nil
}

func testQeTestdataOlmOgAllnsYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOgAllnsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/og-allns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOgMultinsYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: operatorgroup-multins-template
objects:
- kind: OperatorGroup
  apiVersion: operators.coreos.com/v1
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    selector:
      matchLabels:
        env: "${MULTINSLABEL}"
parameters:
- name: NAME
- name: NAMESPACE
- name: MULTINSLABEL
`)

func testQeTestdataOlmOgMultinsYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOgMultinsYaml, nil
}

func testQeTestdataOlmOgMultinsYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOgMultinsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/og-multins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOlmProxySubscriptionYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: sub-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: Subscription
  metadata:
    name: "${SUBNAME}"
    namespace: "${SUBNAMESPACE}"
  spec:
    config:
      env:
      - name: HTTP_PROXY
        value: ${SUBHTTPPROXY}
      - name: HTTPS_PROXY
        value: ${SUBHTTPSPROXY}
      - name: NO_PROXY
        value: ${SUBNOPROXY}
    channel: "${CHANNEL}"
    installPlanApproval: "${APPROVAL}"
    name: "${OPERATORNAME}"
    source: "${SOURCENAME}"
    sourceNamespace: "${SOURCENAMESPACE}"
    startingCSV: "${STARTINGCSV}"
parameters:
- name: SUBNAME
- name: SUBNAMESPACE
- name: CHANNEL
- name: APPROVAL
  value: "Automatic"
- name: OPERATORNAME
- name: SOURCENAME
- name: SOURCENAMESPACE
  value: "openshift-marketplace"
- name: STARTINGCSV
  value: ""
- name: SUBHTTPPROXY
  value: ""
- name: SUBHTTPSPROXY
  value: ""
- name: SUBNOPROXY
  value: ""
`)

func testQeTestdataOlmOlmProxySubscriptionYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOlmProxySubscriptionYaml, nil
}

func testQeTestdataOlmOlmProxySubscriptionYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOlmProxySubscriptionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/olm-proxy-subscription.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOlmSubscriptionYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: sub-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: Subscription
  metadata:
    name: "${SUBNAME}"
    namespace: "${SUBNAMESPACE}"
  spec:
    channel: "${CHANNEL}"
    installPlanApproval: "${APPROVAL}"
    name: "${OPERATORNAME}"
    source: "${SOURCENAME}"
    sourceNamespace: "${SOURCENAMESPACE}"
    startingCSV: "${STARTINGCSV}"
parameters:
- name: SUBNAME
- name: SUBNAMESPACE
- name: CHANNEL
- name: APPROVAL
  value: "Automatic"
- name: OPERATORNAME
- name: SOURCENAME
- name: SOURCENAMESPACE
  value: "openshift-marketplace"
- name: STARTINGCSV
  value: ""
`)

func testQeTestdataOlmOlmSubscriptionYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOlmSubscriptionYaml, nil
}

func testQeTestdataOlmOlmSubscriptionYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOlmSubscriptionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/olm-subscription.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOperatorYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: operator-template
objects:
- apiVersion: operators.operatorframework.io/v1alpha1
  kind: Operator
  metadata:
    name: "${NAME}"
  spec:
    packageName: "${PACKAGE}"
    channel: "${CHANNEL}"
    version: "${VERSION}"
parameters:
- name: NAME
- name: PACKAGE
  value: "quay-operator"
- name: CHANNEL
  value: "stable-3.8"
- name: VERSION
  value: "3.8.12"
`)

func testQeTestdataOlmOperatorYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOperatorYaml, nil
}

func testQeTestdataOlmOperatorYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOperatorgroupServiceaccountYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: operatorgroup-template
objects:
  - kind: OperatorGroup
    apiVersion: operators.coreos.com/v1
    metadata:
      name: "${NAME}"
      namespace: "${NAMESPACE}"
    spec:
      serviceAccountName: "${SERVICE_ACCOUNT_NAME}"
      targetNamespaces:
        - "${NAMESPACE}"
parameters:
  - name: NAME
  - name: NAMESPACE
  - name: SERVICE_ACCOUNT_NAME
`)

func testQeTestdataOlmOperatorgroupServiceaccountYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOperatorgroupServiceaccountYaml, nil
}

func testQeTestdataOlmOperatorgroupServiceaccountYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOperatorgroupServiceaccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/operatorgroup-serviceaccount.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOperatorgroupUpgradestrategyYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: operatorgroup-upgradestrategy-template
objects:
- kind: OperatorGroup
  apiVersion: operators.coreos.com/v1
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    upgradeStrategy: "${UPGRADESTRATEGY}"
    targetNamespaces:
    - "${NAMESPACE}"

parameters:
- name: NAME
- name: NAMESPACE
- name: UPGRADESTRATEGY

`)

func testQeTestdataOlmOperatorgroupUpgradestrategyYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOperatorgroupUpgradestrategyYaml, nil
}

func testQeTestdataOlmOperatorgroupUpgradestrategyYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOperatorgroupUpgradestrategyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/operatorgroup-upgradestrategy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOperatorgroupYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: operatorgroup-template
objects:
- kind: OperatorGroup
  apiVersion: operators.coreos.com/v1
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    targetNamespaces:
    - "${NAMESPACE}"

parameters:
- name: NAME
- name: NAMESPACE
  
`)

func testQeTestdataOlmOperatorgroupYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOperatorgroupYaml, nil
}

func testQeTestdataOlmOperatorgroupYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmOpsrcYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: opsrc-template
objects:
- kind: OperatorSource
  apiVersion: operators.coreos.com/v1
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
    labels:
      opsrc-provider: "${NAMELABEL}"
  spec:
    type: appregistry
    endpoint: "https://quay.io/cnr"
    registryNamespace: "${REGISTRYNAMESPACE}"
    displayName: "${DISPLAYNAME}"
    publisher: "${PUBLISHER}"
parameters:
- name: NAME
- name: NAMESPACE
- name: NAMELABEL
- name: REGISTRYNAMESPACE
- name: DISPLAYNAME
- name: PUBLISHER
`)

func testQeTestdataOlmOpsrcYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmOpsrcYaml, nil
}

func testQeTestdataOlmOpsrcYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmOpsrcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/opsrc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmPackageserverYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: packageserver-csv-template
objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: ClusterServiceVersion
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  spec:
    apiservicedefinitions:
      owned:
      - containerPort: 5443
        deploymentName: packageserver
        description: A PackageManifest is a resource generated from existing CatalogSources
          and their ConfigMaps
        displayName: PackageManifest
        group: packages.operators.coreos.com
        kind: PackageManifest
        name: packagemanifests
        version: v1
    customresourcedefinitions: {}
    description: Represents an Operator package that is available from a given CatalogSource
      which will resolve to a ClusterServiceVersion.
    displayName: Package Server
    install:
      spec:
        clusterPermissions:
        - rules:
          - apiGroups:
            - authorization.k8s.io
            resources:
            - subjectaccessreviews
            verbs:
            - create
            - get
          - apiGroups:
            - ""
            resources:
            - configmaps
            verbs:
            - get
            - list
            - watch
          - apiGroups:
            - operators.coreos.com
            resources:
            - catalogsources
            verbs:
            - get
            - list
            - watch
          - apiGroups:
            - packages.operators.coreos.com
            resources:
            - packagemanifests
            verbs:
            - get
            - list
          serviceAccountName: olm-operator-serviceaccount
        deployments:
        - name: packageserver
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: packageserver
            strategy:
              type: RollingUpdate
            template:
              metadata:
                labels:
                  app: packageserver
              spec:
                containers:
                - command:
                  - /bin/package-server
                  - -v=4
                  - --secure-port
                  - "5443"
                  - --global-namespace
                  - olm
                  - --debug
                  image: quay.io/operator-framework/olm:local
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 5443
                      scheme: HTTPS
                  name: packageserver
                  ports:
                  - containerPort: 5443
                    protocol: TCP
                  readinessProbe:
                    httpGet:
                      path: /healthz
                      port: 5443
                      scheme: HTTPS
                  resources:
                    requests:
                      cpu: 10m
                      memory: 50Mi
                  terminationMessagePolicy: FallbackToLogsOnError
                  volumeMounts:
                  - mountPath: /tmp
                    name: tmpfs
                nodeSelector:
                  kubernetes.io/os: linux
                serviceAccountName: olm-operator-serviceaccount
                tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                  operator: Exists
                - effect: NoExecute
                  key: node.kubernetes.io/unreachable
                  operator: Exists
                  tolerationSeconds: 120
                - effect: NoExecute
                  key: node.kubernetes.io/not-ready
                  operator: Exists
                  tolerationSeconds: 120
                volumes:
                - emptyDir: {}
                  name: tmpfs
      strategy: deployment
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - packagemanifests
    - olm
    - packages
    links:
    - name: Package Server
      url: https://github.com/operator-framework/operator-lifecycle-manager/tree/master/pkg/package-server
    maintainers:
    - email: openshift-operators@redhat.com
      name: Red Hat
    maturity: alpha
    minKubeVersion: 1.11.0
    provider:
      name: Red Hat
    replaces: packageserver
    version: 1.0.0
parameters:
- name: NAMESPACE
- name: NAME
`)

func testQeTestdataOlmPackageserverYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmPackageserverYaml, nil
}

func testQeTestdataOlmPackageserverYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmPackageserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/packageserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmPlatform_operatorYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: platform-operator-template
objects:
- apiVersion: platform.openshift.io/v1alpha1
  kind: PlatformOperator
  metadata:
    name: "${NAME}"
  spec:
    package:
      name: "${PACKAGE}"
parameters:
- name: NAME
- name: PACKAGE
`)

func testQeTestdataOlmPlatform_operatorYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmPlatform_operatorYaml, nil
}

func testQeTestdataOlmPlatform_operatorYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmPlatform_operatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/platform_operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmPrometheusAntiaffinityYaml = []byte(`apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: example
spec:
  evaluationInterval: 30s
  serviceMonitorSelector: {}
  alerting:
    alertmanagers:
      - namespace: monitoring
        name: alertmanager-main
        port: web
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
              - values:
                  - dev
                key: app_54038
                operator: NotIn
  probeSelector: {}
  podMonitorSelector: {}
  scrapeInterval: 30s
  ruleSelector: {}
  replicas: 2
  serviceAccountName: prometheus-k8s
`)

func testQeTestdataOlmPrometheusAntiaffinityYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmPrometheusAntiaffinityYaml, nil
}

func testQeTestdataOlmPrometheusAntiaffinityYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmPrometheusAntiaffinityYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/prometheus-antiaffinity.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmPrometheusNodeaffinityYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: prometheus-nodeaffinity-template
objects:
  - apiVersion: monitoring.coreos.com/v1
    kind: Prometheus
    metadata:
      name: example
      namespace: "${NAMESPACE}"
    spec:
      evaluationInterval: 30s
      serviceMonitorSelector: {}
      alerting:
        alertmanagers:
          - namespace: monitoring
            name: alertmanager-main
            port: web
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - values:
                      - "${NODE_NAME}"
                    key: kubernetes.io/hostname
                    operator: In
      probeSelector: {}
      podMonitorSelector: {}
      scrapeInterval: 30s
      ruleSelector: {}
      replicas: 2
      serviceAccountName: prometheus-k8s
parameters:
  - name: NODE_NAME
  - name: NAMESPACE
`)

func testQeTestdataOlmPrometheusNodeaffinityYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmPrometheusNodeaffinityYaml, nil
}

func testQeTestdataOlmPrometheusNodeaffinityYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmPrometheusNodeaffinityYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/prometheus-nodeaffinity.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmRoleBindingYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rolebinding-template
objects:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: "${ROLE_NAME}"
  subjects:
  - kind: ServiceAccount
    name: "${SA_NAME}"
    namespace: "${NAMESPACE}"

parameters:
- name: NAME
- name: NAMESPACE
- name: SA_NAME
- name: ROLE_NAME
`)

func testQeTestdataOlmRoleBindingYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmRoleBindingYaml, nil
}

func testQeTestdataOlmRoleBindingYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/role-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmRoleYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: role-template
objects:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  rules:
    - apiGroups: ["*"]
      resources: ["*"]
      verbs: ["*"]
parameters:
- name: NAME
- name: NAMESPACE

`)

func testQeTestdataOlmRoleYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmRoleYaml, nil
}

func testQeTestdataOlmRoleYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmSccYaml = []byte(`allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: true
allowHostPID: true
allowHostPorts: true
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities:
- SYS_ADMIN
- SYS_RESOURCE
- SYS_PTRACE
- NET_ADMIN
- NET_BROADCAST
- NET_RAW
- IPC_LOCK
- CHOWN
- AUDIT_CONTROL
- AUDIT_READ
- DAC_READ_SEARCH
apiVersion: security.openshift.io/v1
defaultAddCapabilities: []
fsGroup:
  type: MustRunAs
groups: []
kind: SecurityContextConstraints
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"allowHostDirVolumePlugin":true,"allowHostIPC":false,"allowHostNetwork":true,"allowHostPID":true,"allowHostPorts":true,"allowPrivilegeEscalation":true,"allowPrivilegedContainer":false,"allowedCapabilities":["SYS_ADMIN","SYS_RESOURCE","SYS_PTRACE","NET_ADMIN","NET_BROADCAST","NET_RAW","IPC_LOCK","CHOWN","AUDIT_CONTROL","AUDIT_READ","DAC_READ_SEARCH"],"apiVersion":"security.openshift.io/v1","defaultAddCapabilities":[],"fsGroup":{"type":"MustRunAs"},"groups":[],"kind":"SecurityContextConstraints","metadata":{"annotations":{},"creationTimestamp":"2021-10-23T21:34:21Z","generation":4,"labels":{"app.kubernetes.io/instance":"datadog","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"datadog","app.kubernetes.io/version":"7","helm.sh/chart":"datadog-3.10.1"},"name":"datadog","resourceVersion":"7173625748","uid":"afc7e4af-cd2e-4a67-b78e-0312c8a2d2fb"},"priority":8,"readOnlyRootFilesystem":false,"requiredDropCapabilities":[],"runAsUser":{"type":"RunAsAny"},"seLinuxContext":{"seLinuxOptions":{"level":"s0","role":"system_r","type":"spc_t","user":"system_u"},"type":"MustRunAs"},"seccompProfiles":["runtime/default","localhost/system-probe"],"supplementalGroups":{"type":"RunAsAny"},"users":["system:serviceaccount:datadog:datadog"],"volumes":["configMap","downwardAPI","emptyDir","hostPath","secret"]}
  labels:
    app.kubernetes.io/instance: datadog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: datadog
    app.kubernetes.io/version: "7"
    helm.sh/chart: datadog-3.10.1
  name: datadog
priority: 8
readOnlyRootFilesystem: false
requiredDropCapabilities: []
runAsUser:
  type: RunAsAny
seLinuxContext:
  seLinuxOptions:
    level: s0
    role: system_r
    type: spc_t
    user: system_u
  type: MustRunAs
seccompProfiles:
- runtime/default
- localhost/system-probe
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:datadog:datadog
volumes:
- configMap
- downwardAPI
- emptyDir
- hostPath
- secret
`)

func testQeTestdataOlmSccYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmSccYaml, nil
}

func testQeTestdataOlmSccYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmSccYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/scc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmScopedSaEtcdYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scoped-24886
rules:
  - apiGroups: [""]
    resources:
      [
        "pods",
        "services",
        "services/finalizers",
        "endpoints",
        "persistentvolumeclaims",
        "events",
        "configmaps",
        "secrets",
        "serviceaccounts",
      ]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
    verbs: ["*"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors"]
    verbs: ["get", "create"]
  - apiGroups: ["apps"]
    resources: ["deployments/finalizers"]
    resourceNames: ["learn-operator"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets", "deployments"]
    verbs: ["get"]
  - apiGroups: ["app.learn.com"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["operators.coreos.com"]
    resources: ["subscriptions", "clusterserviceversions"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scoped-bindings-24886
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scoped-24886
subjects:
  - kind: ServiceAccount
    name: scoped-24886
`)

func testQeTestdataOlmScopedSaEtcdYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmScopedSaEtcdYaml, nil
}

func testQeTestdataOlmScopedSaEtcdYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmScopedSaEtcdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/scoped-sa-etcd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmScopedSaFineGrainedRolesYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scoped-24772
rules:
  - apiGroups: [""]
    resources:
      [
        "pods",
        "services",
        "services/finalizers",
        "endpoints",
        "persistentvolumeclaims",
        "events",
        "configmaps",
        "secrets",
        "serviceaccounts",
      ]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
    verbs: ["*"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors"]
    verbs: ["get", "create"]
  - apiGroups: ["apps"]
    resources: ["deployments/finalizers"]
    resourceNames: ["learn-operator"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets", "deployments"]
    verbs: ["get"]
  - apiGroups: ["app.learn.com"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["operators.coreos.com"]
    resources: ["subscriptions", "clusterserviceversions"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scoped-bindings-24772
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scoped-24772
subjects:
  - kind: ServiceAccount
    name: scoped-24772
`)

func testQeTestdataOlmScopedSaFineGrainedRolesYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmScopedSaFineGrainedRolesYaml, nil
}

func testQeTestdataOlmScopedSaFineGrainedRolesYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmScopedSaFineGrainedRolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/scoped-sa-fine-grained-roles.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmScopedSaRolesYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scoped-24771
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scoped-bindings-24771
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scoped-24771
subjects:
  - kind: ServiceAccount
    name: scoped-24771
`)

func testQeTestdataOlmScopedSaRolesYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmScopedSaRolesYaml, nil
}

func testQeTestdataOlmScopedSaRolesYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmScopedSaRolesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/scoped-sa-roles.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmSecretYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: secret-template
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    annotations:
      kubernetes.io/service-account.name: ${SANAME}
  type: ${TYPE}
parameters:
- name: NAME
- name: NAMESPACE
- name: SANAME
- name: TYPE
  value: "kubernetes.io/service-account-token"
`)

func testQeTestdataOlmSecretYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmSecretYaml, nil
}

func testQeTestdataOlmSecretYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmSecret_opaqueYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: secret-template
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${NAME}"
    namespace: "${NAMESPACE}"
  type: Opaque
  stringData:
    mykey: mypass

parameters:
- name: NAME
- name: NAMESPACE
`)

func testQeTestdataOlmSecret_opaqueYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmSecret_opaqueYaml, nil
}

func testQeTestdataOlmSecret_opaqueYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmSecret_opaqueYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/secret_opaque.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOlmVpaCrdYaml = []byte(`apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: vpa-template
objects:
- kind: CustomResourceDefinition
  apiVersion: apiextensions.k8s.io/v1
  metadata:
    name: "${NAME}"
    annotations:
      "api-approved.kubernetes.io": "https://github.com/kubernetes/kubernetes/pull/63797"
  spec:
    group: autoscaling.k8s.io
    scope: Namespaced
    names:
      plural: verticalpodautoscalers
      singular: verticalpodautoscaler
      kind: VerticalPodAutoscaler
      shortNames:
        - vpa
    version: v1beta1
    versions:
      - name: v1beta1
        served: false
        storage: false
        schema:
          openAPIV3Schema:
            type: object
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                type: object
                x-kubernetes-preserve-unknown-fields: true
              status:
                type: object
                x-kubernetes-preserve-unknown-fields: true
      - name: v1beta2
        served: true
        storage: true
        schema:
          openAPIV3Schema:
            type: object
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                type: object
                x-kubernetes-preserve-unknown-fields: true
              status:
                type: object
                x-kubernetes-preserve-unknown-fields: true
      - name: v1
        served: true
        storage: false
        schema:
          openAPIV3Schema:
            type: object
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                type: object
                x-kubernetes-preserve-unknown-fields: true
              status:
                type: object
                x-kubernetes-preserve-unknown-fields: true
parameters:
- name: NAME
  value: "verticalpodautoscalers.autoscaling.k8s.io"
`)

func testQeTestdataOlmVpaCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOlmVpaCrdYaml, nil
}

func testQeTestdataOlmVpaCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOlmVpaCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/olm/vpa-crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm45409_includeYaml = []byte(`  packages:
  - name: amq-streams
    versions:
    - '1.8.2'
`)

func testQeTestdataOpm45409_includeYamlBytes() ([]byte, error) {
	return _testQeTestdataOpm45409_includeYaml, nil
}

func testQeTestdataOpm45409_includeYaml() (*asset, error) {
	bytes, err := testQeTestdataOpm45409_includeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/45409_include.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm53869CatalogBasicTemplateYaml = []byte(`schema: olm.template.basic
entries: 
  - schema: olm.package
    name: nginx-operator
    defaultChannel: stable
  - schema: olm.channel
    package: nginx-operator
    name: stable
    entries:
    - name: nginx-operator.v0.0.1
    - name: nginx-operator.v1.0.1
      replaces: nginx-operator.v0.0.1
  - schema: olm.bundle
    image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - schema: olm.bundle
    image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1
`)

func testQeTestdataOpm53869CatalogBasicTemplateYamlBytes() ([]byte, error) {
	return _testQeTestdataOpm53869CatalogBasicTemplateYaml, nil
}

func testQeTestdataOpm53869CatalogBasicTemplateYaml() (*asset, error) {
	bytes, err := testQeTestdataOpm53869CatalogBasicTemplateYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/53869/catalog-basic-template.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm53871CatalogSemverVeneer1Yaml = []byte(`Schema: olm.semver
GenerateMajorChannels: true
GenerateMinorChannels: false
Candidate:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
Stable:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
Fast:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
`)

func testQeTestdataOpm53871CatalogSemverVeneer1YamlBytes() ([]byte, error) {
	return _testQeTestdataOpm53871CatalogSemverVeneer1Yaml, nil
}

func testQeTestdataOpm53871CatalogSemverVeneer1Yaml() (*asset, error) {
	bytes, err := testQeTestdataOpm53871CatalogSemverVeneer1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/53871/catalog-semver-veneer-1.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm53871CatalogSemverVeneer2Yaml = []byte(`Schema: olm.semver
GenerateMajorChannels: true
GenerateMinorChannels: true
Candidate:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-alpha
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-beta
Stable:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1
Fast:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-alpha
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-beta
`)

func testQeTestdataOpm53871CatalogSemverVeneer2YamlBytes() ([]byte, error) {
	return _testQeTestdataOpm53871CatalogSemverVeneer2Yaml, nil
}

func testQeTestdataOpm53871CatalogSemverVeneer2Yaml() (*asset, error) {
	bytes, err := testQeTestdataOpm53871CatalogSemverVeneer2YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/53871/catalog-semver-veneer-2.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm53871CatalogSemverVeneer3Yaml = []byte(`Schema: olm.semver
Candidate:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
Stable:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
Fast:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
`)

func testQeTestdataOpm53871CatalogSemverVeneer3YamlBytes() ([]byte, error) {
	return _testQeTestdataOpm53871CatalogSemverVeneer3Yaml, nil
}

func testQeTestdataOpm53871CatalogSemverVeneer3Yaml() (*asset, error) {
	bytes, err := testQeTestdataOpm53871CatalogSemverVeneer3YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/53871/catalog-semver-veneer-3.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm53871CatalogSemverVeneer4Yaml = []byte(`Schema: olm.semver
GenerateMajorChannels: false
GenerateMinorChannels: true
Stable:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.2
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
Fast:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v2.1.0
`)

func testQeTestdataOpm53871CatalogSemverVeneer4YamlBytes() ([]byte, error) {
	return _testQeTestdataOpm53871CatalogSemverVeneer4Yaml, nil
}

func testQeTestdataOpm53871CatalogSemverVeneer4Yaml() (*asset, error) {
	bytes, err := testQeTestdataOpm53871CatalogSemverVeneer4YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/53871/catalog-semver-veneer-4.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm53871CatalogSemverVeneer5Yaml = []byte(`Schema: olm.semver
Candidate:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-alpha
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-beta
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-alpha20220829
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-alpha20220830
Stable:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-beta
Fast:
  Bundles:
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v0.0.1
  - Image: quay.io/olmqe/nginxolm-operator-bundle:v1.0.1-beta

`)

func testQeTestdataOpm53871CatalogSemverVeneer5YamlBytes() ([]byte, error) {
	return _testQeTestdataOpm53871CatalogSemverVeneer5Yaml, nil
}

func testQeTestdataOpm53871CatalogSemverVeneer5Yaml() (*asset, error) {
	bytes, err := testQeTestdataOpm53871CatalogSemverVeneer5YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/53871/catalog-semver-veneer-5.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm70013CatalogInvalidIndexYaml = []byte(`---
defaultChannel: candidate-v1.0
name: nginx70050
schema: olm.package
---
entries:
- name: nginx70050.v1.0.1
name: candidate-v1.0
package: nginx70050
schema: olm.channel
---
image: quay.io/olmqe/olmtest-operator-bundle:v1.0.1-nginxolm70050
name: nginx70050.v1.0.1
package: nginx70050
properties:
- type: olm.gvk
  value:
    group: cache.example.com
    kind: Nginxolm70050
    version: v1alpha1
- type: olm.package
  value:
    packageName: nginx70050
    version: 1.0.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "cache.example.com/v1alpha1",
            "kind": "Nginxolm70050",
            "metadata": {
              "labels": {
                "app.kubernetes.io/created-by": "nginx70050",
                "app.kubernetes.io/instance": "nginxolm70050-sample",
                "app.kubernetes.io/managed-by": "kustomize",
                "app.kubernetes.io/name": "nginxolm70050",
                "app.kubernetes.io/part-of": "nginx70050"
              },
              "name": "nginxolm70050-sample"
            },
            "spec": null
          }
        ]
      capabilities: Basic Install
      createdAt: "2023-12-15T08:14:59Z"
      operators.operatorframework.io/builder: operator-sdk-v1.32.0+git
      operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: Nginxolm70050
        name: nginxolm70050s.cache.example.com
        version: v1alpha1
    description: nginxolm70050
    displayName: nginxolm70050
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - nginxolm70050
    links:
    - name: Nginx70050
      url: https://nginx70050.domain
    maturity: alpha
    provider:
      name: nginxolm70050
      url: nginxolm70050
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
  name: ""
- image: quay.io/olmqe/olmtest-operator-base:nginxolm70050
  name: ""
- image: quay.io/olmqe/olmtest-operator-bundle:v1.0.1-nginxolm70050
  name: ""
schema: olm.bundle
---
schema: olm.deprecations
package: nginx70050
entries:
  - reference:
      schema: olm.package
    message: nginx70050 has been deprecated. Please switch to nginx69986.
  - reference:
      schema: olm.channel
      name: candidate-v1.0
    message: channel "candidate-v1.0" has been deprecated. Please switch to a different one.
    message: channel "candidate-v0.0" has been deprecated. Please switch to a different one.
  - reference:
      schema: olm.bundle
      name: nginx70050.v1.0.1

`)

func testQeTestdataOpm70013CatalogInvalidIndexYamlBytes() ([]byte, error) {
	return _testQeTestdataOpm70013CatalogInvalidIndexYaml, nil
}

func testQeTestdataOpm70013CatalogInvalidIndexYaml() (*asset, error) {
	bytes, err := testQeTestdataOpm70013CatalogInvalidIndexYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/70013/catalog-invalid/index.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpm70013CatalogValidIndexYaml = []byte(`---
defaultChannel: candidate-v1.0
name: nginx70050
schema: olm.package
---
entries:
- name: nginx70050.v1.0.1
name: candidate-v1.0
package: nginx70050
schema: olm.channel
---
image: quay.io/olmqe/olmtest-operator-bundle:v1.0.1-nginxolm70050
name: nginx70050.v1.0.1
package: nginx70050
properties:
- type: olm.gvk
  value:
    group: cache.example.com
    kind: Nginxolm70050
    version: v1alpha1
- type: olm.package
  value:
    packageName: nginx70050
    version: 1.0.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "cache.example.com/v1alpha1",
            "kind": "Nginxolm70050",
            "metadata": {
              "labels": {
                "app.kubernetes.io/created-by": "nginx70050",
                "app.kubernetes.io/instance": "nginxolm70050-sample",
                "app.kubernetes.io/managed-by": "kustomize",
                "app.kubernetes.io/name": "nginxolm70050",
                "app.kubernetes.io/part-of": "nginx70050"
              },
              "name": "nginxolm70050-sample"
            },
            "spec": null
          }
        ]
      capabilities: Basic Install
      createdAt: "2023-12-15T08:14:59Z"
      operators.operatorframework.io/builder: operator-sdk-v1.32.0+git
      operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: Nginxolm70050
        name: nginxolm70050s.cache.example.com
        version: v1alpha1
    description: nginxolm70050
    displayName: nginxolm70050
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - nginxolm70050
    links:
    - name: Nginx70050
      url: https://nginx70050.domain
    maturity: alpha
    provider:
      name: nginxolm70050
      url: nginxolm70050
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
  name: ""
- image: quay.io/olmqe/olmtest-operator-base:nginxolm70050
  name: ""
- image: quay.io/olmqe/olmtest-operator-bundle:v1.0.1-nginxolm70050
  name: ""
schema: olm.bundle
---
schema: olm.deprecations
package: nginx70050
entries:
  - reference:
      schema: olm.package
    message: nginx70050 has been deprecated. Please switch to nginx69986.
  - reference:
      schema: olm.channel
      name: candidate-v1.0
    message: channel "candidate-v1.0" has been deprecated. Please switch to a different one.
    message: channel "candidate-v0.0" has been deprecated. Please switch to a different one.
  - reference:
      schema: olm.bundle
      name: nginx70050.v1.0.1
    message: bundle "nginx70050.v1.0.1" has been deprecated. Please switch to a different one.

`)

func testQeTestdataOpm70013CatalogValidIndexYamlBytes() ([]byte, error) {
	return _testQeTestdataOpm70013CatalogValidIndexYaml, nil
}

func testQeTestdataOpm70013CatalogValidIndexYaml() (*asset, error) {
	bytes, err := testQeTestdataOpm70013CatalogValidIndexYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/70013/catalog-valid/index.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cockroachdbs.charts.operatorhub.io
spec:
  group: charts.operatorhub.io
  names:
    kind: Cockroachdb
    listKind: CockroachdbList
    plural: cockroachdbs
    singular: cockroachdb
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cockroachdb is the Schema for the cockroachdbs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
`)

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/charts.operatorhub.io_cockroachdbs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml = []byte(`apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    control-plane: controller-manager
  name: cockroachdb-controller-manager-metrics-service
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
status:
  loadBalancer: {}
`)

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb-controller-manager-metrics-service_v1_service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cockroachdb-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
`)

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.operatorhub.io/v1alpha1",
          "kind": "Cockroachdb",
          "metadata": {
            "name": "cockroachdb-sample"
          },
          "spec": {
            "clusterDomain": "cluster.local",
            "conf": {
              "attrs": [],
              "cache": "25%",
              "cluster-name": "",
              "disable-cluster-name-verification": false,
              "http-port": 8080,
              "join": [],
              "locality": "",
              "logtostderr": "INFO",
              "max-sql-memory": "25%",
              "port": 26257,
              "single-node": false,
              "sql-audit-dir": ""
            },
            "image": {
              "credentials": {},
              "pullPolicy": "IfNotPresent",
              "repository": "cockroachdb/cockroach",
              "tag": "v20.2.3"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "labels": {},
              "paths": [
                "/"
              ],
              "tls": []
            },
            "init": {
              "affinity": {},
              "annotations": {},
              "labels": {
                "app.kubernetes.io/component": "init"
              },
              "nodeSelector": {},
              "resources": {},
              "tolerations": []
            },
            "labels": {},
            "networkPolicy": {
              "enabled": false,
              "ingress": {
                "grpc": [],
                "http": []
              }
            },
            "service": {
              "discovery": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                }
              },
              "ports": {
                "grpc": {
                  "external": {
                    "name": "grpc",
                    "port": 26257
                  },
                  "internal": {
                    "name": "grpc-internal",
                    "port": 26257
                  }
                },
                "http": {
                  "name": "http",
                  "port": 8080
                }
              },
              "public": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                },
                "type": "ClusterIP"
              }
            },
            "serviceMonitor": {
              "annotations": {},
              "enabled": false,
              "interval": "10s",
              "labels": {}
            },
            "statefulset": {
              "annotations": {},
              "args": [],
              "budget": {
                "maxUnavailable": 1
              },
              "env": [],
              "labels": {
                "app.kubernetes.io/component": "cockroachdb"
              },
              "nodeAffinity": {},
              "nodeSelector": {},
              "podAffinity": {},
              "podAntiAffinity": {
                "topologyKey": "kubernetes.io/hostname",
                "type": "soft",
                "weight": 100
              },
              "podManagementPolicy": "Parallel",
              "priorityClassName": "",
              "replicas": 3,
              "resources": {},
              "secretMounts": [],
              "tolerations": [],
              "topologySpreadConstraints": {
                "maxSkew": 1,
                "topologyKey": "topology.kubernetes.io/zone",
                "whenUnsatisfiable": "ScheduleAnyway"
              },
              "updateStrategy": {
                "type": "RollingUpdate"
              }
            },
            "storage": {
              "hostPath": "",
              "persistentVolume": {
                "annotations": {},
                "enabled": true,
                "labels": {},
                "size": "100Gi",
                "storageClass": ""
              }
            },
            "tls": {
              "certs": {
                "clientRootSecret": "cockroachdb-root",
                "nodeSecret": "cockroachdb-node",
                "provided": false,
                "tlsSecret": false
              },
              "enabled": false,
              "init": {
                "image": {
                  "credentials": {},
                  "pullPolicy": "IfNotPresent",
                  "repository": "cockroachdb/cockroach-k8s-request-cert",
                  "tag": "0.4"
                }
              },
              "serviceAccount": {
                "create": true,
                "name": ""
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Database
    certified: "false"
    containerImage: quay.io/helmoperators/cockroachdb:v5.0.3
    createdAt: 2021-01-23T10-00-00Z
    description: CockroachDB Operator based on the CockroachDB helm chart
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://github.com/dmesser/cockroachdb-operator
    support: dmesser
  name: cockroachdb.v5.0.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Represents a CockroachDB cluster
      displayName: CockroachDB
      kind: Cockroachdb
      name: cockroachdbs.charts.operatorhub.io
      resources:
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Service
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: apps/v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      - kind: Job
        name: ""
        version: batch/v1
      version: v1alpha1
  description: |
    CockroachDB is a scalable, survivable, strongly-consistent SQL database.
    ## About this Operator
    This Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.

    ## Core capabilities
    * **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet
    * **Expand Replicas** - Supports expanding the set of replicas by simply editing your object
    * **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.
    Review all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [` + "`" + `values.yaml` + "`" + `](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).
    ## Using the cluster
    The resulting cluster endpoint can be consumed from a ` + "`" + `Service` + "`" + ` that follows the pattern: ` + "`" + `<StatefulSet-name>-public` + "`" + `. For example to connect using the command line client, use something like the following to obtain the name of the service:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl get service -l chart=cockroachdb-3.0.7
    NAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             <none>        26257/TCP,8080/TCP   24m
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   <none>        26257/TCP,8080/TCP   24m
    ` + "`" + `` + "`" + `` + "`" + `
    Then you can use the CockroachDB command line client to connect to the database cluster:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    ## Before you start
    This Operator requires a cluster with PV support in order to run correctly.
    ## Supported configuration parameters
      | Parameter                                                 | Description                                                     | Default                                          |
      | ---------                                                 | -----------                                                     | -------                                          |
      | ` + "`" + `clusterDomain` + "`" + `                                           | Cluster's default DNS domain                                    | ` + "`" + `cluster.local` + "`" + `                                  |
      | ` + "`" + `conf.attrs` + "`" + `                                              | CockroachDB node attributes                                     | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `conf.cache` + "`" + `                                              | Size of CockroachDB's in-memory cache                           | ` + "`" + `25%` + "`" + `                                            |
      | ` + "`" + `conf.cluster-name` + "`" + `                                       | Name of CockroachDB cluster                                     | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `conf.disable-cluster-name-verification` + "`" + `                  | Disable CockroachDB cluster name verification                   | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `conf.join` + "`" + `                                               | List of already-existing CockroachDB instances                  | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `conf.max-disk-temp-storage` + "`" + `                              | Max storage capacity for temp data                              | ` + "`" + `0` + "`" + `                                              |
      | ` + "`" + `conf.max-offset` + "`" + `                                         | Max allowed clock offset for CockroachDB cluster                | ` + "`" + `500ms` + "`" + `                                          |
      | ` + "`" + `conf.max-sql-memory` + "`" + `                                     | Max memory to use processing SQL querie                         | ` + "`" + `25%` + "`" + `                                            |
      | ` + "`" + `conf.locality` + "`" + `                                           | Locality attribute for this deployment                          | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `conf.single-node` + "`" + `                                        | Disable CockroachDB clustering (standalone mode)                | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `conf.sql-audit-dir` + "`" + `                                      | Directory for SQL audit log                                     | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `conf.port` + "`" + `                                               | CockroachDB primary serving port in Pods                        | ` + "`" + `26257` + "`" + `                                          |
      | ` + "`" + `conf.http-port` + "`" + `                                          | CockroachDB HTTP port in Pods                                   | ` + "`" + `8080` + "`" + `                                           |
      | ` + "`" + `image.repository` + "`" + `                                        | Container image name                                            | ` + "`" + `cockroachdb/cockroach` + "`" + `                          |
      | ` + "`" + `image.tag` + "`" + `                                               | Container image tag                                             | ` + "`" + `v20.2.3` + "`" + `                                        |
      | ` + "`" + `image.pullPolicy` + "`" + `                                        | Container pull policy                                           | ` + "`" + `IfNotPresent` + "`" + `                                   |
      | ` + "`" + `image.credentials` + "`" + `                                       | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.replicas` + "`" + `                                    | StatefulSet replicas number                                     | ` + "`" + `3` + "`" + `                                              |
      | ` + "`" + `statefulset.updateStrategy` + "`" + `                              | Update strategy for StatefulSet Pods                            | ` + "`" + `{"type": "RollingUpdate"}` + "`" + `                      |
      | ` + "`" + `statefulset.podManagementPolicy` + "`" + `                         | ` + "`" + `OrderedReady` + "`" + `/` + "`" + `Parallel` + "`" + ` Pods creation/deletion order          | ` + "`" + `Parallel` + "`" + `                                       |
      | ` + "`" + `statefulset.budget.maxUnavailable` + "`" + `                       | k8s PodDisruptionBudget parameter                               | ` + "`" + `1` + "`" + `                                              |
      | ` + "`" + `statefulset.args` + "`" + `                                        | Extra command-line arguments                                    | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.env` + "`" + `                                         | Extra env vars                                                  | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.secretMounts` + "`" + `                                | Additional Secrets to mount at cluster members                  | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.labels` + "`" + `                                      | Additional labels of StatefulSet and its Pods                   | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
      | ` + "`" + `statefulset.annotations` + "`" + `                                 | Additional annotations of StatefulSet Pods                      | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.nodeAffinity` + "`" + `                                | [Node affinity rules][2] of StatefulSet Pods                    | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.podAffinity` + "`" + `                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.podAntiAffinity` + "`" + `                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |
      | ` + "`" + `statefulset.podAntiAffinity.topologyKey` + "`" + `                 | The topologyKey for auto [anti-affinity rules][1]               | ` + "`" + `kubernetes.io/hostname` + "`" + `                         |
      | ` + "`" + `statefulset.podAntiAffinity.type` + "`" + `                        | Type of auto [anti-affinity rules][1]                           | ` + "`" + `soft` + "`" + `                                           |
      | ` + "`" + `statefulset.podAntiAffinity.weight` + "`" + `                      | Weight for ` + "`" + `soft` + "`" + ` auto [anti-affinity rules][1]                 | ` + "`" + `100` + "`" + `                                            |
      | ` + "`" + `statefulset.nodeSelector` + "`" + `                                | Node labels for StatefulSet Pods assignment                     | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.priorityClassName` + "`" + `                           | [PriorityClassName][4] for StatefulSet Pods                     | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `statefulset.tolerations` + "`" + `                                 | Node taints to tolerate by StatefulSet Pods                     | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.topologySpreadConstraints` + "`" + `                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |
      | ` + "`" + `statefulset.topologySpreadConstraints.maxSkew` + "`" + `           | Degree to which Pods may be unevenly distributed                | ` + "`" + `1` + "`" + `                                              |
      | ` + "`" + `statefulset.topologySpreadConstraints.topologyKey` + "`" + `       | The key of node labels                                          | ` + "`" + `topology.kubernetes.io/zone` + "`" + `                    |
      | ` + "`" + `statefulset.topologySpreadConstraints.whenUnsatisfiable` + "`" + ` | ` + "`" + `ScheduleAnyway` + "`" + `/` + "`" + `DoNotSchedule` + "`" + ` for unsatisfiable constraints  | ` + "`" + `ScheduleAnyway` + "`" + `                                 |
      | ` + "`" + `statefulset.resources` + "`" + `                                   | Resource requests and limits for StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `service.ports.grpc.external.port` + "`" + `                        | CockroachDB primary serving port in Services                    | ` + "`" + `26257` + "`" + `                                          |
      | ` + "`" + `service.ports.grpc.external.name` + "`" + `                        | CockroachDB primary serving port name in Services               | ` + "`" + `grpc` + "`" + `                                           |
      | ` + "`" + `service.ports.grpc.internal.port` + "`" + `                        | CockroachDB inter-communication port in Services                | ` + "`" + `26257` + "`" + `                                          |
      | ` + "`" + `service.ports.grpc.internal.name` + "`" + `                        | CockroachDB inter-communication port name in Services           | ` + "`" + `grpc-internal` + "`" + `                                  |
      | ` + "`" + `service.ports.http.port` + "`" + `                                 | CockroachDB HTTP port in Services                               | ` + "`" + `8080` + "`" + `                                           |
      | ` + "`" + `service.ports.http.name` + "`" + `                                 | CockroachDB HTTP port name in Services                          | ` + "`" + `http` + "`" + `                                           |
      | ` + "`" + `service.public.type` + "`" + `                                     | Public Service type                                             | ` + "`" + `ClusterIP` + "`" + `                                      |
      | ` + "`" + `service.public.labels` + "`" + `                                   | Additional labels of public Service                             | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
      | ` + "`" + `service.public.annotations` + "`" + `                              | Additional annotations of public Service                        | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `service.discovery.labels` + "`" + `                                | Additional labels of discovery Service                          | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
      | ` + "`" + `service.discovery.annotations` + "`" + `                           | Additional annotations of discovery Service                     | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `ingress.enabled` + "`" + `                                         | Enable ingress resource for CockroachDB                         | ` + "`" + `false` + "`" + `                                          |
      | ` + "`" + `ingress.labels` + "`" + `                                          | Additional labels of Ingress                                    | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `ingress.annotations` + "`" + `                                     | Additional annotations of Ingress                               | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `ingress.paths` + "`" + `                                           | Paths for the default host                                      | ` + "`" + `[/]` + "`" + `                                            |
      | ` + "`" + `ingress.hosts` + "`" + `                                           | CockroachDB Ingress hostnames                                   | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `ingress.tls[0].hosts` + "`" + `                                    | CockroachDB Ingress tls hostnames                               | ` + "`" + `nil` + "`" + `                                            |
      | ` + "`" + `ingress.tls[0].secretName` + "`" + `                               | CockroachDB Ingress tls secret name                             | ` + "`" + `nil` + "`" + `                                            |
      | ` + "`" + `serviceMonitor.enabled` + "`" + `                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | ` + "`" + `false` + "`" + `                                             |
      | ` + "`" + `serviceMonitor.labels` + "`" + `                                   | Additional labels of ServiceMonitor                             | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `serviceMonitor.annotations` + "`" + `                              | Additional annotations of ServiceMonitor                        | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `serviceMonitor.interval` + "`" + `                                 | ServiceMonitor scrape metrics interval                          | ` + "`" + `10s` + "`" + `                                            |
      | ` + "`" + `serviceMonitor.scrapeTimeout` + "`" + `                            | ServiceMonitor scrape timeout                                   | ` + "`" + `nil` + "`" + `                                            |
      | ` + "`" + `storage.hostPath` + "`" + `                                        | Absolute path on host to store data                             | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `storage.persistentVolume.enabled` + "`" + `                        | Whether to use PersistentVolume to store data                   | ` + "`" + `yes` + "`" + `                                            |
      | ` + "`" + `storage.persistentVolume.size` + "`" + `                           | PersistentVolume size                                           | ` + "`" + `100Gi` + "`" + `                                          |
      | ` + "`" + `storage.persistentVolume.storageClass` + "`" + `                   | PersistentVolume class                                          | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `storage.persistentVolume.labels` + "`" + `                         | Additional labels of PersistentVolumeClaim                      | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `storage.persistentVolume.annotations` + "`" + `                    | Additional annotations of PersistentVolumeClaim                 | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.labels` + "`" + `                                             | Additional labels of init Job and its Pod                       | ` + "`" + `{"app.kubernetes.io/component": "init"}` + "`" + `        |
      | ` + "`" + `init.annotations` + "`" + `                                        | Additional labels of the Pod of init Job                        | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.affinity` + "`" + `                                           | [Affinity rules][2] of init Job Pod                             | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.nodeSelector` + "`" + `                                       | Node labels for init Job Pod assignment                         | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.tolerations` + "`" + `                                        | Node taints to tolerate by init Job Pod                         | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `init.resources` + "`" + `                                          | Resource requests and limits for the Pod of init Job            | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `tls.enabled` + "`" + `                                             | Whether to run securely using TLS certificates                  | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `tls.serviceAccount.create` + "`" + `                               | Whether to create a new RBAC service account                    | ` + "`" + `yes` + "`" + `                                            |
      | ` + "`" + `tls.serviceAccount.name` + "`" + `                                 | Name of RBAC service account to use                             | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `tls.certs.provided` + "`" + `                                      | Bring your own certs scenario, i.e certificates are provided    | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `tls.certs.clientRootSecret` + "`" + `                              | If certs are provided, secret name for client root cert         | ` + "`" + `cockroachdb-root` + "`" + `                               |
      | ` + "`" + `tls.certs.nodeSecret` + "`" + `                                    | If certs are provided, secret name for node cert                | ` + "`" + `cockroachdb-node` + "`" + `                               |
      | ` + "`" + `tls.certs.tlsSecret` + "`" + `                                     | Own certs are stored in TLS secret                              | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `tls.init.image.repository` + "`" + `                               | Image to use for requesting TLS certificates                    | ` + "`" + `cockroachdb/cockroach-k8s-request-cert` + "`" + `         |
      | ` + "`" + `tls.init.image.tag` + "`" + `                                      | Image tag to use for requesting TLS certificates                | ` + "`" + `0.4` + "`" + `                                            |
      | ` + "`" + `tls.init.image.pullPolicy` + "`" + `                               | Requesting TLS certificates container pull policy               | ` + "`" + `IfNotPresent` + "`" + `                                   |
      | ` + "`" + `tls.init.image.credentials` + "`" + `                              | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `networkPolicy.enabled` + "`" + `                                   | Enable NetworkPolicy for CockroachDB's Pods                     | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `networkPolicy.ingress.grpc` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `networkPolicy.ingress.http` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |
    ## Upgrading the cluster
    Assuming the name of the ` + "`" + `CockroachDB` + "`" + ` instance is ` + "`" + `example` + "`" + `, follow the steps below to update to a newer version (example used os v19.2.5->v19.2.7) of CockroachDB:
    Launch a temporary interactive pod and start the built-in SQL client:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=example-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    > If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.
    Set ` + "`" + `cluster.preserve_downgrade_option` + "`" + `, where ` + "`" + `$current_version` + "`" + ` is the CockroachDB version currently running (e.g., ` + "`" + `19.2` + "`" + `):
    ` + "`" + `` + "`" + `` + "`" + `sql
    > SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';
    ` + "`" + `` + "`" + `` + "`" + `
    Exit the shell and delete the temporary pod:
    ` + "`" + `` + "`" + `` + "`" + `sql
    > \q
    ` + "`" + `` + "`" + `` + "`" + `
    Kick off the upgrade process by changing the new Docker image, where ` + "`" + `$new_version` + "`" + ` is the CockroachDB version to which you are upgrading:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl delete job example-cockroachdb-init
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl patch cockroachdbs example -p '{"spec": {"image":{"tag":"v19.2.7"}}}' --type merge
    ` + "`" + `` + "`" + `` + "`" + `
    Kubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                READY     STATUS              RESTARTS   AGE
    example-cockroachdb-0            1/1       Running             0          2m
    example-cockroachdb-1            1/1       Running             0          3m
    example-cockroachdb-2            1/1       Running             0          3m
    example-cockroachdb-3            0/1       ContainerCreating   0          25s
    example-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods \
    -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[0].image}{"\n"}'
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `
    example-cockroachdb-0    cockroachdb/cockroach:v19.2.7
    example-cockroachdb-1    cockroachdb/cockroach:v19.2.7
    example-cockroachdb-2    cockroachdb/cockroach:v19.2.7
    ` + "`" + `` + "`" + `` + "`" + `
    Resume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=example-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `sql
    > RESET CLUSTER SETTING cluster.preserve_downgrade_option;
    > \q
    ` + "`" + `` + "`" + `` + "`" + `
  displayName: CockroachDB
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - clusterroles
          - rolebindings
          - clusterrolebindings
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: cockroachdb-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                - --leader-election-id=cockroachdb
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: cockroachdb
                image: quay.io/helmoperators/cockroachdb:v5.0.3
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 90Mi
                  requests:
                    cpu: 100m
                    memory: 60Mi
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - charts.operatorhub.io
          resources:
          - cockroachdbs
          - cockroachdbs/status
          - cockroachdbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          - pods
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - cockroach
  - cockroachdb
  links:
  - name: Helm Chart Source
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb
  - name: Configuration Options
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration
  - name: CockroachDB Source
    url: https://github.com/cockroachdb/cockroach
  maintainers:
  - email: dmesser@redhat.com
    name: Daniel Messer
  maturity: stable
  minKubeVersion: 1.8.0
  provider:
    name: Helm Community
    url: https://artifacthub.io/packages/helm/cockroachdb/cockroachdb
  version: 5.0.3
`)

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYaml = []byte(`properties:
- type: olm.type1
  value:
    testname1: testvalue1
    testname2: testvalue2
- type: olm.type2
  value:
    testname3: 
    testname4: 'testvalue4'
- type: olm.type3
  value: "type3_test"
- type: olm.type4
  value: 
- type: type5.type5
  value: '''
version is 5.0.3
'''

`)

func testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/metadata/properties.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cockroachdbs.charts.operatorhub.io
spec:
  group: charts.operatorhub.io
  names:
    kind: Cockroachdb
    listKind: CockroachdbList
    plural: cockroachdbs
    singular: cockroachdb
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cockroachdb is the Schema for the cockroachdbs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
`)

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/charts.operatorhub.io_cockroachdbs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml = []byte(`apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    control-plane: controller-manager
  name: cockroachdb-controller-manager-metrics-service
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
status:
  loadBalancer: {}
`)

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb-controller-manager-metrics-service_v1_service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cockroachdb-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
`)

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.operatorhub.io/v1alpha1",
          "kind": "Cockroachdb",
          "metadata": {
            "name": "cockroachdb-sample"
          },
          "spec": {
            "clusterDomain": "cluster.local",
            "conf": {
              "attrs": [],
              "cache": "25%",
              "cluster-name": "",
              "disable-cluster-name-verification": false,
              "http-port": 8080,
              "join": [],
              "locality": "",
              "logtostderr": "INFO",
              "max-sql-memory": "25%",
              "port": 26257,
              "single-node": false,
              "sql-audit-dir": ""
            },
            "image": {
              "credentials": {},
              "pullPolicy": "IfNotPresent",
              "repository": "cockroachdb/cockroach",
              "tag": "v20.2.4"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "labels": {},
              "paths": [
                "/"
              ],
              "tls": []
            },
            "init": {
              "affinity": {},
              "annotations": {},
              "labels": {
                "app.kubernetes.io/component": "init"
              },
              "nodeSelector": {},
              "resources": {},
              "tolerations": []
            },
            "labels": {},
            "networkPolicy": {
              "enabled": false,
              "ingress": {
                "grpc": [],
                "http": []
              }
            },
            "service": {
              "discovery": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                }
              },
              "ports": {
                "grpc": {
                  "external": {
                    "name": "grpc",
                    "port": 26257
                  },
                  "internal": {
                    "name": "grpc-internal",
                    "port": 26257
                  }
                },
                "http": {
                  "name": "http",
                  "port": 8080
                }
              },
              "public": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                },
                "type": "ClusterIP"
              }
            },
            "serviceMonitor": {
              "annotations": {},
              "enabled": false,
              "interval": "10s",
              "labels": {}
            },
            "statefulset": {
              "annotations": {},
              "args": [],
              "budget": {
                "maxUnavailable": 1
              },
              "env": [],
              "labels": {
                "app.kubernetes.io/component": "cockroachdb"
              },
              "nodeAffinity": {},
              "nodeSelector": {},
              "podAffinity": {},
              "podAntiAffinity": {
                "topologyKey": "kubernetes.io/hostname",
                "type": "soft",
                "weight": 100
              },
              "podManagementPolicy": "Parallel",
              "priorityClassName": "",
              "replicas": 3,
              "resources": {},
              "secretMounts": [],
              "tolerations": [],
              "topologySpreadConstraints": {
                "maxSkew": 1,
                "topologyKey": "topology.kubernetes.io/zone",
                "whenUnsatisfiable": "ScheduleAnyway"
              },
              "updateStrategy": {
                "type": "RollingUpdate"
              }
            },
            "storage": {
              "hostPath": "",
              "persistentVolume": {
                "annotations": {},
                "enabled": true,
                "labels": {},
                "size": "100Gi",
                "storageClass": ""
              }
            },
            "tls": {
              "certs": {
                "clientRootSecret": "cockroachdb-root",
                "nodeSecret": "cockroachdb-node",
                "provided": false,
                "tlsSecret": false
              },
              "enabled": false,
              "init": {
                "image": {
                  "credentials": {},
                  "pullPolicy": "IfNotPresent",
                  "repository": "cockroachdb/cockroach-k8s-request-cert",
                  "tag": "0.4"
                }
              },
              "serviceAccount": {
                "create": true,
                "name": ""
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Database
    certified: "false"
    containerImage: quay.io/helmoperators/cockroachdb:v5.0.4
    createdAt: 2021-01-23T10-00-00Z
    description: CockroachDB Operator based on the CockroachDB helm chart
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://github.com/dmesser/cockroachdb-operator
    support: dmesser
  name: cockroachdb.v5.0.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Represents a CockroachDB cluster
      displayName: CockroachDB
      kind: Cockroachdb
      name: cockroachdbs.charts.operatorhub.io
      resources:
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Service
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: apps/v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      - kind: Job
        name: ""
        version: batch/v1
      version: v1alpha1
  description: |
    CockroachDB is a scalable, survivable, strongly-consistent SQL database.
    ## About this Operator
    This Operator is based on a Helm chart for CockroachDB. It supports the same parameters like the official [CockroachDB Helm Chart](https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb).

    ## Core capabilities
    * **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet
    * **Expand Replicas** - Supports expanding the set of replicas by simply editing your object
    * **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.
    Review all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [` + "`" + `values.yaml` + "`" + `](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).
    ## Using the cluster
    The resulting cluster endpoint can be consumed from a ` + "`" + `Service` + "`" + ` that follows the pattern: ` + "`" + `<StatefulSet-name>-public` + "`" + `. For example to connect using the command line client, use something like the following to obtain the name of the service:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl get service -l chart=cockroachdb-5.0.4
    NAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             <none>        26257/TCP,8080/TCP   24m
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   <none>        26257/TCP,8080/TCP   24m
    ` + "`" + `` + "`" + `` + "`" + `
    Then you can use the CockroachDB command line client to connect to the database cluster:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    ## Before you start
    This Operator requires a cluster with PV support in order to run correctly.

    Note that for a production cluster, you will likely want to override the following parameters in [` + "`" + `values.yaml` + "`" + `](values.yaml) with your own values.

    - ` + "`" + `statefulset.resources.requests.memory` + "`" + ` and ` + "`" + `statefulset.resources.limits.memory` + "`" + ` allocate memory resources to CockroachDB pods in your cluster.
    - ` + "`" + `conf.cache` + "`" + ` and ` + "`" + `conf.max-sql-memory` + "`" + ` are memory limits that we recommend setting to 1/4 of the above resource allocation. When running CockroachDB, you must set these limits explicitly to avoid running out of memory.
    - ` + "`" + `storage.persistentVolume.size` + "`" + ` defaults to ` + "`" + `100Gi` + "`" + ` of disk space per pod, which you may increase or decrease for your use case.
    - ` + "`" + `storage.persistentVolume.storageClass` + "`" + ` uses the default storage class for your environment. We strongly recommend that you specify a storage class which uses an SSD.
    - ` + "`" + `tls.enabled` + "`" + ` must be set to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + ` to deploy in secure mode.

    For more information on overriding the ` + "`" + `values.yaml` + "`" + ` parameters, please see:
    > <https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-kubernetes.html#step-2-start-cockroachdb>

    If you are running in secure mode (with configuration parameter ` + "`" + `tls.enabled` + "`" + ` set to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `) and ` + "`" + `tls.certs.provided` + "`" + ` set to ` + "`" + `no` + "`" + `/` + "`" + `false` + "`" + `), then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running ` + "`" + `kubectl get csr` + "`" + `, and approve them by running ` + "`" + `kubectl certificate approve <csr-name>` + "`" + `. You'll have to approve one certificate for each CockroachDB node (e.g., ` + "`" + `default.node.my-release-cockroachdb-0` + "`" + ` and one client certificate for the job that initializes the cluster (e.g., ` + "`" + `default.node.root` + "`" + `).

    When ` + "`" + `tls.certs.provided` + "`" + ` is set to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `, this chart will use certificates created outside of Kubernetes. You may want to use this if you want to use a different certificate authority from the one being used by Kubernetes or if your Kubernetes cluster doesn't fully support certificate-signing requests. To use this, first set up your certificates and load them into your Kubernetes cluster as Secrets using the commands below:

    ` + "`" + `` + "`" + `` + "`" + `
    mkdir certs
    mkdir my-safe-directory
    cockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key
    cockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key
    kubectl create secret generic cockroachdb-root --from-file=certs
    cockroach cert create-node --certs-dir=certs --ca-key=my-safe-directory/ca.key localhost 127.0.0.1 eerie-horse-cockroachdb-public eerie-horse-cockroachdb-public.default eerie-horse-cockroachdb-public.default.svc.cluster.local *.eerie-horse-cockroachdb *.eerie-horse-cockroachdb.default *.eerie-horse-cockroachdb.default.svc.cluster.local
    kubectl create secret generic cockroachdb-node --from-file=certs
    ` + "`" + `` + "`" + `` + "`" + `

    Set ` + "`" + `tls.certs.tlsSecret` + "`" + ` to ` + "`" + `yes/true` + "`" + ` if you make use of [cert-manager][3] in your cluster.

    [cert-manager][3] stores generated certificates in dedicated TLS secrets. Thus, they are always named:

    * ` + "`" + `ca.crt` + "`" + `
    * ` + "`" + `tls.crt` + "`" + `
    * ` + "`" + `tls.key` + "`" + `

    On the other hand, CockroachDB also demands dedicated certificate filenames:

    * ` + "`" + `ca.crt` + "`" + `
    * ` + "`" + `node.crt` + "`" + `
    * ` + "`" + `node.key` + "`" + `
    * ` + "`" + `client.root.crt` + "`" + `
    * ` + "`" + `client.root.key` + "`" + `

    By activating ` + "`" + `tls.certs.tlsSecret` + "`" + ` we benefit from projected secrets and convert the TLS secret filenames to their according CockroachDB filenames.

    If you are running in secure mode, then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running ` + "`" + `kubectl get csr` + "`" + `, and approve them by running ` + "`" + `kubectl certificate approve <csr-name>` + "`" + `. You'll have to approve one certificate for each CockroachDB node (e.g., ` + "`" + `default.node.my-release-cockroachdb-0` + "`" + ` and one client certificate for the job that initializes the cluster (e.g., ` + "`" + `default.node.root` + "`" + `).

    Confirm that all pods are ` + "`" + `Running` + "`" + ` successfully and init has been completed:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                READY     STATUS      RESTARTS   AGE
    my-release-cockroachdb-0            1/1       Running     0          1m
    my-release-cockroachdb-1            1/1       Running     0          1m
    my-release-cockroachdb-2            1/1       Running     0          1m
    my-release-cockroachdb-init-k6jcr   0/1       Completed   0          1m
    ` + "`" + `` + "`" + `` + "`" + `

    Confirm that persistent volumes are created and claimed for each pod:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pv
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                      STORAGECLASS   REASON    AGE
    pvc-64878ebf-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-0   standard                 51s
    pvc-64945b4f-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-1   standard                 51s
    pvc-649d920d-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-2   standard                 51s
    ` + "`" + `` + "`" + `` + "`" + `

    ## Upgrading the cluster

    ### Chart version 3.0.0 and after

    Launch a temporary interactive pod and start the built-in SQL client:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=my-release-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `

    > If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.

    Set ` + "`" + `cluster.preserve_downgrade_option` + "`" + `, where ` + "`" + `$current_version` + "`" + ` is the CockroachDB version currently running (e.g., ` + "`" + `19.2` + "`" + `):

    ` + "`" + `` + "`" + `` + "`" + `sql
    > SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';
    ` + "`" + `` + "`" + `` + "`" + `

    Exit the shell and delete the temporary pod:

    ` + "`" + `` + "`" + `` + "`" + `sql
    > \q
    ` + "`" + `` + "`" + `` + "`" + `

    Kick off the upgrade process by changing the new Docker image, where ` + "`" + `$new_version` + "`" + ` is the CockroachDB version to which you are upgrading:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl delete job my-release-cockroachdb-init
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl patch cockroachdbs example -p '{"spec": {"image":{"tag":"<new version tag here>"}}}' --type merge
    ` + "`" + `` + "`" + `` + "`" + `

    Kubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                READY     STATUS              RESTARTS   AGE
    my-release-cockroachdb-0            1/1       Running             0          2m
    my-release-cockroachdb-1            1/1       Running             0          3m
    my-release-cockroachdb-2            1/1       Running             0          3m
    my-release-cockroachdb-3            0/1       ContainerCreating   0          25s
    my-release-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods \
    -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[0].image}{"\n"}'
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    my-release-cockroachdb-0    cockroachdb/cockroach:v20.2.4
    my-release-cockroachdb-1    cockroachdb/cockroach:v20.2.4
    my-release-cockroachdb-2    cockroachdb/cockroach:v20.2.4
    my-release-cockroachdb-3    cockroachdb/cockroach:v20.2.4
    ` + "`" + `` + "`" + `` + "`" + `

    Resume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=my-release-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `sql
    > RESET CLUSTER SETTING cluster.preserve_downgrade_option;
    > \q
    ` + "`" + `` + "`" + `` + "`" + `

    ## Configuration

    The following table lists the configurable parameters of the CockroachDB chart and their default values.
    For details see the [` + "`" + `values.yaml` + "`" + `](values.yaml) file.

    | Parameter                                                 | Description                                                     | Default                                          |
    | ---------                                                 | -----------                                                     | -------                                          |
    | ` + "`" + `clusterDomain` + "`" + `                                           | Cluster's default DNS domain                                    | ` + "`" + `cluster.local` + "`" + `                                  |
    | ` + "`" + `conf.attrs` + "`" + `                                              | CockroachDB node attributes                                     | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `conf.cache` + "`" + `                                              | Size of CockroachDB's in-memory cache                           | ` + "`" + `25%` + "`" + `                                            |
    | ` + "`" + `conf.cluster-name` + "`" + `                                       | Name of CockroachDB cluster                                     | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `conf.disable-cluster-name-verification` + "`" + `                  | Disable CockroachDB cluster name verification                   | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `conf.join` + "`" + `                                               | List of already-existing CockroachDB instances                  | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `conf.max-disk-temp-storage` + "`" + `                              | Max storage capacity for temp data                              | ` + "`" + `0` + "`" + `                                              |
    | ` + "`" + `conf.max-offset` + "`" + `                                         | Max allowed clock offset for CockroachDB cluster                | ` + "`" + `500ms` + "`" + `                                          |
    | ` + "`" + `conf.max-sql-memory` + "`" + `                                     | Max memory to use processing SQL querie                         | ` + "`" + `25%` + "`" + `                                            |
    | ` + "`" + `conf.locality` + "`" + `                                           | Locality attribute for this deployment                          | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `conf.single-node` + "`" + `                                        | Disable CockroachDB clustering (standalone mode)                | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `conf.sql-audit-dir` + "`" + `                                      | Directory for SQL audit log                                     | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `conf.port` + "`" + `                                               | CockroachDB primary serving port in Pods                        | ` + "`" + `26257` + "`" + `                                          |
    | ` + "`" + `conf.http-port` + "`" + `                                          | CockroachDB HTTP port in Pods                                   | ` + "`" + `8080` + "`" + `                                           |
    | ` + "`" + `image.repository` + "`" + `                                        | Container image name                                            | ` + "`" + `cockroachdb/cockroach` + "`" + `                          |
    | ` + "`" + `image.tag` + "`" + `                                               | Container image tag                                             | ` + "`" + `v20.2.4` + "`" + `                                        |
    | ` + "`" + `image.pullPolicy` + "`" + `                                        | Container pull policy                                           | ` + "`" + `IfNotPresent` + "`" + `                                   |
    | ` + "`" + `image.credentials` + "`" + `                                       | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.replicas` + "`" + `                                    | StatefulSet replicas number                                     | ` + "`" + `3` + "`" + `                                              |
    | ` + "`" + `statefulset.updateStrategy` + "`" + `                              | Update strategy for StatefulSet Pods                            | ` + "`" + `{"type": "RollingUpdate"}` + "`" + `                      |
    | ` + "`" + `statefulset.podManagementPolicy` + "`" + `                         | ` + "`" + `OrderedReady` + "`" + `/` + "`" + `Parallel` + "`" + ` Pods creation/deletion order          | ` + "`" + `Parallel` + "`" + `                                       |
    | ` + "`" + `statefulset.budget.maxUnavailable` + "`" + `                       | k8s PodDisruptionBudget parameter                               | ` + "`" + `1` + "`" + `                                              |
    | ` + "`" + `statefulset.args` + "`" + `                                        | Extra command-line arguments                                    | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.env` + "`" + `                                         | Extra env vars                                                  | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.secretMounts` + "`" + `                                | Additional Secrets to mount at cluster members                  | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.labels` + "`" + `                                      | Additional labels of StatefulSet and its Pods                   | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
    | ` + "`" + `statefulset.annotations` + "`" + `                                 | Additional annotations of StatefulSet Pods                      | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.nodeAffinity` + "`" + `                                | [Node affinity rules][2] of StatefulSet Pods                    | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.podAffinity` + "`" + `                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.podAntiAffinity` + "`" + `                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |
    | ` + "`" + `statefulset.podAntiAffinity.topologyKey` + "`" + `                 | The topologyKey for auto [anti-affinity rules][1]               | ` + "`" + `kubernetes.io/hostname` + "`" + `                         |
    | ` + "`" + `statefulset.podAntiAffinity.type` + "`" + `                        | Type of auto [anti-affinity rules][1]                           | ` + "`" + `soft` + "`" + `                                           |
    | ` + "`" + `statefulset.podAntiAffinity.weight` + "`" + `                      | Weight for ` + "`" + `soft` + "`" + ` auto [anti-affinity rules][1]                 | ` + "`" + `100` + "`" + `                                            |
    | ` + "`" + `statefulset.nodeSelector` + "`" + `                                | Node labels for StatefulSet Pods assignment                     | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.priorityClassName` + "`" + `                           | [PriorityClassName][4] for StatefulSet Pods                     | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `statefulset.tolerations` + "`" + `                                 | Node taints to tolerate by StatefulSet Pods                     | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.topologySpreadConstraints` + "`" + `                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |
    | ` + "`" + `statefulset.topologySpreadConstraints.maxSkew` + "`" + `           | Degree to which Pods may be unevenly distributed                | ` + "`" + `1` + "`" + `                                              |
    | ` + "`" + `statefulset.topologySpreadConstraints.topologyKey` + "`" + `       | The key of node labels                                          | ` + "`" + `topology.kubernetes.io/zone` + "`" + `                    |
    | ` + "`" + `statefulset.topologySpreadConstraints.whenUnsatisfiable` + "`" + ` | ` + "`" + `ScheduleAnyway` + "`" + `/` + "`" + `DoNotSchedule` + "`" + ` for unsatisfiable constraints  | ` + "`" + `ScheduleAnyway` + "`" + `                                 |
    | ` + "`" + `statefulset.resources` + "`" + `                                   | Resource requests and limits for StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `service.ports.grpc.external.port` + "`" + `                        | CockroachDB primary serving port in Services                    | ` + "`" + `26257` + "`" + `                                          |
    | ` + "`" + `service.ports.grpc.external.name` + "`" + `                        | CockroachDB primary serving port name in Services               | ` + "`" + `grpc` + "`" + `                                           |
    | ` + "`" + `service.ports.grpc.internal.port` + "`" + `                        | CockroachDB inter-communication port in Services                | ` + "`" + `26257` + "`" + `                                          |
    | ` + "`" + `service.ports.grpc.internal.name` + "`" + `                        | CockroachDB inter-communication port name in Services           | ` + "`" + `grpc-internal` + "`" + `                                  |
    | ` + "`" + `service.ports.http.port` + "`" + `                                 | CockroachDB HTTP port in Services                               | ` + "`" + `8080` + "`" + `                                           |
    | ` + "`" + `service.ports.http.name` + "`" + `                                 | CockroachDB HTTP port name in Services                          | ` + "`" + `http` + "`" + `                                           |
    | ` + "`" + `service.public.type` + "`" + `                                     | Public Service type                                             | ` + "`" + `ClusterIP` + "`" + `                                      |
    | ` + "`" + `service.public.labels` + "`" + `                                   | Additional labels of public Service                             | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
    | ` + "`" + `service.public.annotations` + "`" + `                              | Additional annotations of public Service                        | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `service.discovery.labels` + "`" + `                                | Additional labels of discovery Service                          | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
    | ` + "`" + `service.discovery.annotations` + "`" + `                           | Additional annotations of discovery Service                     | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `ingress.enabled` + "`" + `                                         | Enable ingress resource for CockroachDB                         | ` + "`" + `false` + "`" + `                                          |
    | ` + "`" + `ingress.labels` + "`" + `                                          | Additional labels of Ingress                                    | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `ingress.annotations` + "`" + `                                     | Additional annotations of Ingress                               | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `ingress.paths` + "`" + `                                           | Paths for the default host                                      | ` + "`" + `[/]` + "`" + `                                            |
    | ` + "`" + `ingress.hosts` + "`" + `                                           | CockroachDB Ingress hostnames                                   | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `ingress.tls[0].hosts` + "`" + `                                    | CockroachDB Ingress tls hostnames                               | ` + "`" + `nil` + "`" + `                                            |
    | ` + "`" + `ingress.tls[0].secretName` + "`" + `                               | CockroachDB Ingress tls secret name                             | ` + "`" + `nil` + "`" + `                                            |
    | ` + "`" + `serviceMonitor.enabled` + "`" + `                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | ` + "`" + `false` + "`" + `                                             |
    | ` + "`" + `serviceMonitor.labels` + "`" + `                                   | Additional labels of ServiceMonitor                             | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `serviceMonitor.annotations` + "`" + `                              | Additional annotations of ServiceMonitor                        | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `serviceMonitor.interval` + "`" + `                                 | ServiceMonitor scrape metrics interval                          | ` + "`" + `10s` + "`" + `                                            |
    | ` + "`" + `serviceMonitor.scrapeTimeout` + "`" + `                            | ServiceMonitor scrape timeout                                   | ` + "`" + `nil` + "`" + `                                            |
    | ` + "`" + `storage.hostPath` + "`" + `                                        | Absolute path on host to store data                             | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `storage.persistentVolume.enabled` + "`" + `                        | Whether to use PersistentVolume to store data                   | ` + "`" + `yes` + "`" + `                                            |
    | ` + "`" + `storage.persistentVolume.size` + "`" + `                           | PersistentVolume size                                           | ` + "`" + `100Gi` + "`" + `                                          |
    | ` + "`" + `storage.persistentVolume.storageClass` + "`" + `                   | PersistentVolume class                                          | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `storage.persistentVolume.labels` + "`" + `                         | Additional labels of PersistentVolumeClaim                      | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `storage.persistentVolume.annotations` + "`" + `                    | Additional annotations of PersistentVolumeClaim                 | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.labels` + "`" + `                                             | Additional labels of init Job and its Pod                       | ` + "`" + `{"app.kubernetes.io/component": "init"}` + "`" + `        |
    | ` + "`" + `init.annotations` + "`" + `                                        | Additional labels of the Pod of init Job                        | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.affinity` + "`" + `                                           | [Affinity rules][2] of init Job Pod                             | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.nodeSelector` + "`" + `                                       | Node labels for init Job Pod assignment                         | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.tolerations` + "`" + `                                        | Node taints to tolerate by init Job Pod                         | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `init.resources` + "`" + `                                          | Resource requests and limits for the Pod of init Job            | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `tls.enabled` + "`" + `                                             | Whether to run securely using TLS certificates                  | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `tls.serviceAccount.create` + "`" + `                               | Whether to create a new RBAC service account                    | ` + "`" + `yes` + "`" + `                                            |
    | ` + "`" + `tls.serviceAccount.name` + "`" + `                                 | Name of RBAC service account to use                             | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `tls.certs.provided` + "`" + `                                      | Bring your own certs scenario, i.e certificates are provided    | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `tls.certs.clientRootSecret` + "`" + `                              | If certs are provided, secret name for client root cert         | ` + "`" + `cockroachdb-root` + "`" + `                               |
    | ` + "`" + `tls.certs.nodeSecret` + "`" + `                                    | If certs are provided, secret name for node cert                | ` + "`" + `cockroachdb-node` + "`" + `                               |
    | ` + "`" + `tls.certs.tlsSecret` + "`" + `                                     | Own certs are stored in TLS secret                              | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `tls.init.image.repository` + "`" + `                               | Image to use for requesting TLS certificates                    | ` + "`" + `cockroachdb/cockroach-k8s-request-cert` + "`" + `         |
    | ` + "`" + `tls.init.image.tag` + "`" + `                                      | Image tag to use for requesting TLS certificates                | ` + "`" + `0.4` + "`" + `                                            |
    | ` + "`" + `tls.init.image.pullPolicy` + "`" + `                               | Requesting TLS certificates container pull policy               | ` + "`" + `IfNotPresent` + "`" + `                                   |
    | ` + "`" + `tls.init.image.credentials` + "`" + `                              | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `networkPolicy.enabled` + "`" + `                                   | Enable NetworkPolicy for CockroachDB's Pods                     | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `networkPolicy.ingress.grpc` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `networkPolicy.ingress.http` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |


    Override the default parameters using the ` + "`" + `CockroachDB` + "`" + ` custom resource.

    ## Deep dive

    ### Connecting to the CockroachDB cluster

    Once you've created the cluster, you can start talking to it by connecting to its ` + "`" + `-public` + "`" + ` Service. CockroachDB is PostgreSQL wire protocol compatible, so there's a [wide variety of supported clients](https://www.cockroachlabs.com/docs/install-client-drivers.html). As an example, we'll open up a SQL shell using CockroachDB's built-in shell and play around with it a bit, like this (likely needing to replace ` + "`" + `my-release-cockroachdb-public` + "`" + ` with the name of the ` + "`" + `-public` + "`" + ` Service that was created with your installed chart):

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroach-client --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host my-release-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    Waiting for pod default/cockroach-client to be running, status is Pending,
    pod ready: false
    If you don't see a command prompt, try pressing enter.
    root@my-release-cockroachdb-public:26257> SHOW DATABASES;
    +--------------------+
    |      Database      |
    +--------------------+
    | information_schema |
    | pg_catalog         |
    | system             |
    +--------------------+
    (3 rows)
    root@my-release-cockroachdb-public:26257> CREATE DATABASE bank;
    CREATE DATABASE
    root@my-release-cockroachdb-public:26257> CREATE TABLE bank.accounts (id INT
    PRIMARY KEY, balance DECIMAL);
    CREATE TABLE
    root@my-release-cockroachdb-public:26257> INSERT INTO bank.accounts VALUES
    (1234, 10000.50);
    INSERT 1
    root@my-release-cockroachdb-public:26257> SELECT * FROM bank.accounts;
    +------+---------+
    |  id  | balance |
    +------+---------+
    | 1234 | 10000.5 |
    +------+---------+
    (1 row)
    root@my-release-cockroachdb-public:26257> \q
    Waiting for pod default/cockroach-client to terminate, status is Running
    pod "cockroach-client" deleted
    ` + "`" + `` + "`" + `` + "`" + `

    > If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.

    ### Cluster health

    Because our pod spec includes regular health checks of the CockroachDB processes, simply running ` + "`" + `kubectl get pods` + "`" + ` and looking at the ` + "`" + `STATUS` + "`" + ` column is sufficient to determine the health of each instance in the cluster.

    If you want more detailed information about the cluster, the best place to look is the Admin UI.

    ### Accessing the Admin UI

    If you want to see information about how the cluster is doing, you can try pulling up the CockroachDB Admin UI by port-forwarding from your local machine to one of the pods (replacing ` + "`" + `my-release-cockroachdb-0` + "`" + ` with the name of one of your pods:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl port-forward my-release-cockroachdb-0 8080
    ` + "`" + `` + "`" + `` + "`" + `

    You should then be able to access the Admin UI by visiting <http://localhost:8080/> in your web browser.

    ### Failover

    If any CockroachDB member fails, it is restarted or recreated automatically by the Kubernetes infrastructure, and will re-join the cluster automatically when it comes back up. You can test this scenario by killing any of the CockroachDB pods:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl delete pod my-release-cockroachdb-1
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods -l "app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb"
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                      READY     STATUS        RESTARTS   AGE
    my-release-cockroachdb-0  1/1       Running       0          5m
    my-release-cockroachdb-2  1/1       Running       0          5m
    ` + "`" + `` + "`" + `` + "`" + `

    After a while:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods -l "app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb"
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                      READY     STATUS        RESTARTS   AGE
    my-release-cockroachdb-0  1/1       Running       0          5m
    my-release-cockroachdb-1  1/1       Running       0          20s
    my-release-cockroachdb-2  1/1       Running       0          5m
    ` + "`" + `` + "`" + `` + "`" + `

    You can check the state of re-joining from the new pod's logs:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl logs my-release-cockroachdb-1
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    [...]
    I161028 19:32:09.754026 1 server/node.go:586  [n1] node connected via gossip and
    verified as part of cluster {"35ecbc27-3f67-4e7d-9b8f-27c31aae17d6"}
    [...]
    cockroachdb-0.my-release-cockroachdb.default.svc.cluster.local:26257
    build:      beta-20161027-55-gd2d3c7f @ 2016/10/28 19:27:25 (go1.7.3)
    admin:      http://0.0.0.0:8080
    sql:
    postgresql://root@my-release-cockroachdb-1.my-release-cockroachdb.default.svc.cluster.local:26257?sslmode=disable
    logs:       cockroach-data/logs
    store[0]:   path=cockroach-data
    status:     restarted pre-existing node
    clusterID:  {35ecbc27-3f67-4e7d-9b8f-27c31aae17d6}
    nodeID:     2
    [...]
    ` + "`" + `` + "`" + `` + "`" + `

    ### NetworkPolicy

    To enable NetworkPolicy for CockroachDB, install [a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin), and set ` + "`" + `networkPolicy.enabled` + "`" + ` to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `.

    For Kubernetes v1.5 & v1.6, you must also turn on NetworkPolicy by setting the ` + "`" + `DefaultDeny` + "`" + ` Namespace annotation. Note: this will enforce policy for _all_ pods in the Namespace:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl annotate namespace default "net.beta.kubernetes.io/network-policy={\"ingress\":{\"isolation\":\"DefaultDeny\"}}"
    ` + "`" + `` + "`" + `` + "`" + `

    For more precise policy, set ` + "`" + `networkPolicy.ingress.grpc` + "`" + ` and ` + "`" + `networkPolicy.ingress.http` + "`" + ` rules. This will only allow pods that match the provided rules to connect to CockroachDB.

    ### Scaling

    Scaling should be managed via the ` + "`" + `helm upgrade` + "`" + ` command. After resizing your cluster on your cloud environment (e.g., GKE or EKS), run the following command to add a pod. This assumes you scaled from 3 to 4 nodes:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl patch cockroachdbs example -p '{"spec": {"statefulset":{"replicas":"4"}}}' --type merge
    ` + "`" + `` + "`" + `` + "`" + `

    Note, that if you are running in secure mode (` + "`" + `tls.enabled` + "`" + ` is ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `) and increase the size of your cluster, you will also have to approve the CSR (certificate-signing request) of each new node (using ` + "`" + `kubectl get csr` + "`" + ` and ` + "`" + `kubectl certificate approve` + "`" + `).

    [1]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    [2]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
    [3]: https://cert-manager.io/
    [4]: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
    [5]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  displayName: CockroachDB Helm Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - clusterroles
          - rolebindings
          - clusterrolebindings
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: cockroachdb-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                - --leader-election-id=cockroachdb
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: cockroachdb
                image: quay.io/helmoperators/cockroachdb:v5.0.4
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 90Mi
                  requests:
                    cpu: 100m
                    memory: 60Mi
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - charts.operatorhub.io
          resources:
          - cockroachdbs
          - cockroachdbs/status
          - cockroachdbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          - pods
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - cockroach
  - cockroachdb
  links:
  - name: Helm Chart Source
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb
  - name: Configuration Options
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration
  - name: CockroachDB Source
    url: https://github.com/cockroachdb/cockroach
  maintainers:
  - email: dmesser@redhat.com
    name: Daniel Messer
  maturity: stable
  minKubeVersion: 1.8.0
  provider:
    name: Helm Community
    url: https://artifacthub.io/packages/helm/cockroachdb/cockroachdb
  version: 5.0.4
  replaces: cockroachdb.v5.0.3
`)

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYaml = []byte(`properties:
- type: olm.type1
  value:
    testname1: testvalue1
    testname2: testvalue2
- type: olm.type2
  value:
    testname3: 
    testname4: 'testvalue4'
- type: olm.type3
  value: "type3_test"
- type: olm.type4
  value: 
- type: type5.type5
  value: '''
version is 5.0.4
'''

`)

func testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYaml, nil
}

func testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/metadata/properties.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cockroachdbs.charts.operatorhub.io
spec:
  group: charts.operatorhub.io
  names:
    kind: Cockroachdb
    listKind: CockroachdbList
    plural: cockroachdbs
    singular: cockroachdb
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cockroachdb is the Schema for the cockroachdbs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
`)

func testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/charts.operatorhub.io_cockroachdbs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYaml = []byte(`apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    control-plane: controller-manager
  name: cockroachdb-controller-manager-metrics-service
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
status:
  loadBalancer: {}
`)

func testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb-controller-manager-metrics-service_v1_service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cockroachdb-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
`)

func testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.operatorhub.io/v1alpha1",
          "kind": "Cockroachdb",
          "metadata": {
            "name": "cockroachdb-sample"
          },
          "spec": {
            "clusterDomain": "cluster.local",
            "conf": {
              "attrs": [],
              "cache": "25%",
              "cluster-name": "",
              "disable-cluster-name-verification": false,
              "http-port": 8080,
              "join": [],
              "locality": "",
              "logtostderr": "INFO",
              "max-sql-memory": "25%",
              "port": 26257,
              "single-node": false,
              "sql-audit-dir": ""
            },
            "image": {
              "credentials": {},
              "pullPolicy": "IfNotPresent",
              "repository": "cockroachdb/cockroach",
              "tag": "v20.2.3"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "labels": {},
              "paths": [
                "/"
              ],
              "tls": []
            },
            "init": {
              "affinity": {},
              "annotations": {},
              "labels": {
                "app.kubernetes.io/component": "init"
              },
              "nodeSelector": {},
              "resources": {},
              "tolerations": []
            },
            "labels": {},
            "networkPolicy": {
              "enabled": false,
              "ingress": {
                "grpc": [],
                "http": []
              }
            },
            "service": {
              "discovery": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                }
              },
              "ports": {
                "grpc": {
                  "external": {
                    "name": "grpc",
                    "port": 26257
                  },
                  "internal": {
                    "name": "grpc-internal",
                    "port": 26257
                  }
                },
                "http": {
                  "name": "http",
                  "port": 8080
                }
              },
              "public": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                },
                "type": "ClusterIP"
              }
            },
            "serviceMonitor": {
              "annotations": {},
              "enabled": false,
              "interval": "10s",
              "labels": {}
            },
            "statefulset": {
              "annotations": {},
              "args": [],
              "budget": {
                "maxUnavailable": 1
              },
              "env": [],
              "labels": {
                "app.kubernetes.io/component": "cockroachdb"
              },
              "nodeAffinity": {},
              "nodeSelector": {},
              "podAffinity": {},
              "podAntiAffinity": {
                "topologyKey": "kubernetes.io/hostname",
                "type": "soft",
                "weight": 100
              },
              "podManagementPolicy": "Parallel",
              "priorityClassName": "",
              "replicas": 3,
              "resources": {},
              "secretMounts": [],
              "tolerations": [],
              "topologySpreadConstraints": {
                "maxSkew": 1,
                "topologyKey": "topology.kubernetes.io/zone",
                "whenUnsatisfiable": "ScheduleAnyway"
              },
              "updateStrategy": {
                "type": "RollingUpdate"
              }
            },
            "storage": {
              "hostPath": "",
              "persistentVolume": {
                "annotations": {},
                "enabled": true,
                "labels": {},
                "size": "100Gi",
                "storageClass": ""
              }
            },
            "tls": {
              "certs": {
                "clientRootSecret": "cockroachdb-root",
                "nodeSecret": "cockroachdb-node",
                "provided": false,
                "tlsSecret": false
              },
              "enabled": false,
              "init": {
                "image": {
                  "credentials": {},
                  "pullPolicy": "IfNotPresent",
                  "repository": "cockroachdb/cockroach-k8s-request-cert",
                  "tag": "0.4"
                }
              },
              "serviceAccount": {
                "create": true,
                "name": ""
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Database
    certified: "false"
    containerImage: quay.io/helmoperators/cockroachdb:v5.0.3
    createdAt: 2021-01-23T10-00-00Z
    description: CockroachDB Operator based on the CockroachDB helm chart
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://github.com/dmesser/cockroachdb-operator
    support: dmesser
  name: cockroachdb.v5.0.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Represents a CockroachDB cluster
      displayName: CockroachDB
      kind: Cockroachdb
      name: cockroachdbs.charts.operatorhub.io
      resources:
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Service
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: apps/v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      - kind: Job
        name: ""
        version: batch/v1
      version: v1alpha1
  description: |
    CockroachDB is a scalable, survivable, strongly-consistent SQL database.
    ## About this Operator
    This Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.

    ## Core capabilities
    * **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet
    * **Expand Replicas** - Supports expanding the set of replicas by simply editing your object
    * **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.
    Review all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [` + "`" + `values.yaml` + "`" + `](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).
    ## Using the cluster
    The resulting cluster endpoint can be consumed from a ` + "`" + `Service` + "`" + ` that follows the pattern: ` + "`" + `<StatefulSet-name>-public` + "`" + `. For example to connect using the command line client, use something like the following to obtain the name of the service:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl get service -l chart=cockroachdb-3.0.7
    NAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             <none>        26257/TCP,8080/TCP   24m
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   <none>        26257/TCP,8080/TCP   24m
    ` + "`" + `` + "`" + `` + "`" + `
    Then you can use the CockroachDB command line client to connect to the database cluster:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    ## Before you start
    This Operator requires a cluster with PV support in order to run correctly.
    ## Supported configuration parameters
      | Parameter                                                 | Description                                                     | Default                                          |
      | ---------                                                 | -----------                                                     | -------                                          |
      | ` + "`" + `clusterDomain` + "`" + `                                           | Cluster's default DNS domain                                    | ` + "`" + `cluster.local` + "`" + `                                  |
      | ` + "`" + `conf.attrs` + "`" + `                                              | CockroachDB node attributes                                     | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `conf.cache` + "`" + `                                              | Size of CockroachDB's in-memory cache                           | ` + "`" + `25%` + "`" + `                                            |
      | ` + "`" + `conf.cluster-name` + "`" + `                                       | Name of CockroachDB cluster                                     | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `conf.disable-cluster-name-verification` + "`" + `                  | Disable CockroachDB cluster name verification                   | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `conf.join` + "`" + `                                               | List of already-existing CockroachDB instances                  | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `conf.max-disk-temp-storage` + "`" + `                              | Max storage capacity for temp data                              | ` + "`" + `0` + "`" + `                                              |
      | ` + "`" + `conf.max-offset` + "`" + `                                         | Max allowed clock offset for CockroachDB cluster                | ` + "`" + `500ms` + "`" + `                                          |
      | ` + "`" + `conf.max-sql-memory` + "`" + `                                     | Max memory to use processing SQL querie                         | ` + "`" + `25%` + "`" + `                                            |
      | ` + "`" + `conf.locality` + "`" + `                                           | Locality attribute for this deployment                          | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `conf.single-node` + "`" + `                                        | Disable CockroachDB clustering (standalone mode)                | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `conf.sql-audit-dir` + "`" + `                                      | Directory for SQL audit log                                     | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `conf.port` + "`" + `                                               | CockroachDB primary serving port in Pods                        | ` + "`" + `26257` + "`" + `                                          |
      | ` + "`" + `conf.http-port` + "`" + `                                          | CockroachDB HTTP port in Pods                                   | ` + "`" + `8080` + "`" + `                                           |
      | ` + "`" + `image.repository` + "`" + `                                        | Container image name                                            | ` + "`" + `cockroachdb/cockroach` + "`" + `                          |
      | ` + "`" + `image.tag` + "`" + `                                               | Container image tag                                             | ` + "`" + `v20.2.3` + "`" + `                                        |
      | ` + "`" + `image.pullPolicy` + "`" + `                                        | Container pull policy                                           | ` + "`" + `IfNotPresent` + "`" + `                                   |
      | ` + "`" + `image.credentials` + "`" + `                                       | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.replicas` + "`" + `                                    | StatefulSet replicas number                                     | ` + "`" + `3` + "`" + `                                              |
      | ` + "`" + `statefulset.updateStrategy` + "`" + `                              | Update strategy for StatefulSet Pods                            | ` + "`" + `{"type": "RollingUpdate"}` + "`" + `                      |
      | ` + "`" + `statefulset.podManagementPolicy` + "`" + `                         | ` + "`" + `OrderedReady` + "`" + `/` + "`" + `Parallel` + "`" + ` Pods creation/deletion order          | ` + "`" + `Parallel` + "`" + `                                       |
      | ` + "`" + `statefulset.budget.maxUnavailable` + "`" + `                       | k8s PodDisruptionBudget parameter                               | ` + "`" + `1` + "`" + `                                              |
      | ` + "`" + `statefulset.args` + "`" + `                                        | Extra command-line arguments                                    | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.env` + "`" + `                                         | Extra env vars                                                  | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.secretMounts` + "`" + `                                | Additional Secrets to mount at cluster members                  | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.labels` + "`" + `                                      | Additional labels of StatefulSet and its Pods                   | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
      | ` + "`" + `statefulset.annotations` + "`" + `                                 | Additional annotations of StatefulSet Pods                      | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.nodeAffinity` + "`" + `                                | [Node affinity rules][2] of StatefulSet Pods                    | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.podAffinity` + "`" + `                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.podAntiAffinity` + "`" + `                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |
      | ` + "`" + `statefulset.podAntiAffinity.topologyKey` + "`" + `                 | The topologyKey for auto [anti-affinity rules][1]               | ` + "`" + `kubernetes.io/hostname` + "`" + `                         |
      | ` + "`" + `statefulset.podAntiAffinity.type` + "`" + `                        | Type of auto [anti-affinity rules][1]                           | ` + "`" + `soft` + "`" + `                                           |
      | ` + "`" + `statefulset.podAntiAffinity.weight` + "`" + `                      | Weight for ` + "`" + `soft` + "`" + ` auto [anti-affinity rules][1]                 | ` + "`" + `100` + "`" + `                                            |
      | ` + "`" + `statefulset.nodeSelector` + "`" + `                                | Node labels for StatefulSet Pods assignment                     | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `statefulset.priorityClassName` + "`" + `                           | [PriorityClassName][4] for StatefulSet Pods                     | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `statefulset.tolerations` + "`" + `                                 | Node taints to tolerate by StatefulSet Pods                     | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `statefulset.topologySpreadConstraints` + "`" + `                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |
      | ` + "`" + `statefulset.topologySpreadConstraints.maxSkew` + "`" + `           | Degree to which Pods may be unevenly distributed                | ` + "`" + `1` + "`" + `                                              |
      | ` + "`" + `statefulset.topologySpreadConstraints.topologyKey` + "`" + `       | The key of node labels                                          | ` + "`" + `topology.kubernetes.io/zone` + "`" + `                    |
      | ` + "`" + `statefulset.topologySpreadConstraints.whenUnsatisfiable` + "`" + ` | ` + "`" + `ScheduleAnyway` + "`" + `/` + "`" + `DoNotSchedule` + "`" + ` for unsatisfiable constraints  | ` + "`" + `ScheduleAnyway` + "`" + `                                 |
      | ` + "`" + `statefulset.resources` + "`" + `                                   | Resource requests and limits for StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `service.ports.grpc.external.port` + "`" + `                        | CockroachDB primary serving port in Services                    | ` + "`" + `26257` + "`" + `                                          |
      | ` + "`" + `service.ports.grpc.external.name` + "`" + `                        | CockroachDB primary serving port name in Services               | ` + "`" + `grpc` + "`" + `                                           |
      | ` + "`" + `service.ports.grpc.internal.port` + "`" + `                        | CockroachDB inter-communication port in Services                | ` + "`" + `26257` + "`" + `                                          |
      | ` + "`" + `service.ports.grpc.internal.name` + "`" + `                        | CockroachDB inter-communication port name in Services           | ` + "`" + `grpc-internal` + "`" + `                                  |
      | ` + "`" + `service.ports.http.port` + "`" + `                                 | CockroachDB HTTP port in Services                               | ` + "`" + `8080` + "`" + `                                           |
      | ` + "`" + `service.ports.http.name` + "`" + `                                 | CockroachDB HTTP port name in Services                          | ` + "`" + `http` + "`" + `                                           |
      | ` + "`" + `service.public.type` + "`" + `                                     | Public Service type                                             | ` + "`" + `ClusterIP` + "`" + `                                      |
      | ` + "`" + `service.public.labels` + "`" + `                                   | Additional labels of public Service                             | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
      | ` + "`" + `service.public.annotations` + "`" + `                              | Additional annotations of public Service                        | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `service.discovery.labels` + "`" + `                                | Additional labels of discovery Service                          | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
      | ` + "`" + `service.discovery.annotations` + "`" + `                           | Additional annotations of discovery Service                     | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `ingress.enabled` + "`" + `                                         | Enable ingress resource for CockroachDB                         | ` + "`" + `false` + "`" + `                                          |
      | ` + "`" + `ingress.labels` + "`" + `                                          | Additional labels of Ingress                                    | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `ingress.annotations` + "`" + `                                     | Additional annotations of Ingress                               | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `ingress.paths` + "`" + `                                           | Paths for the default host                                      | ` + "`" + `[/]` + "`" + `                                            |
      | ` + "`" + `ingress.hosts` + "`" + `                                           | CockroachDB Ingress hostnames                                   | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `ingress.tls[0].hosts` + "`" + `                                    | CockroachDB Ingress tls hostnames                               | ` + "`" + `nil` + "`" + `                                            |
      | ` + "`" + `ingress.tls[0].secretName` + "`" + `                               | CockroachDB Ingress tls secret name                             | ` + "`" + `nil` + "`" + `                                            |
      | ` + "`" + `serviceMonitor.enabled` + "`" + `                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | ` + "`" + `false` + "`" + `                                             |
      | ` + "`" + `serviceMonitor.labels` + "`" + `                                   | Additional labels of ServiceMonitor                             | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `serviceMonitor.annotations` + "`" + `                              | Additional annotations of ServiceMonitor                        | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `serviceMonitor.interval` + "`" + `                                 | ServiceMonitor scrape metrics interval                          | ` + "`" + `10s` + "`" + `                                            |
      | ` + "`" + `serviceMonitor.scrapeTimeout` + "`" + `                            | ServiceMonitor scrape timeout                                   | ` + "`" + `nil` + "`" + `                                            |
      | ` + "`" + `storage.hostPath` + "`" + `                                        | Absolute path on host to store data                             | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `storage.persistentVolume.enabled` + "`" + `                        | Whether to use PersistentVolume to store data                   | ` + "`" + `yes` + "`" + `                                            |
      | ` + "`" + `storage.persistentVolume.size` + "`" + `                           | PersistentVolume size                                           | ` + "`" + `100Gi` + "`" + `                                          |
      | ` + "`" + `storage.persistentVolume.storageClass` + "`" + `                   | PersistentVolume class                                          | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `storage.persistentVolume.labels` + "`" + `                         | Additional labels of PersistentVolumeClaim                      | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `storage.persistentVolume.annotations` + "`" + `                    | Additional annotations of PersistentVolumeClaim                 | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.labels` + "`" + `                                             | Additional labels of init Job and its Pod                       | ` + "`" + `{"app.kubernetes.io/component": "init"}` + "`" + `        |
      | ` + "`" + `init.annotations` + "`" + `                                        | Additional labels of the Pod of init Job                        | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.affinity` + "`" + `                                           | [Affinity rules][2] of init Job Pod                             | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.nodeSelector` + "`" + `                                       | Node labels for init Job Pod assignment                         | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `init.tolerations` + "`" + `                                        | Node taints to tolerate by init Job Pod                         | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `init.resources` + "`" + `                                          | Resource requests and limits for the Pod of init Job            | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `tls.enabled` + "`" + `                                             | Whether to run securely using TLS certificates                  | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `tls.serviceAccount.create` + "`" + `                               | Whether to create a new RBAC service account                    | ` + "`" + `yes` + "`" + `                                            |
      | ` + "`" + `tls.serviceAccount.name` + "`" + `                                 | Name of RBAC service account to use                             | ` + "`" + `""` + "`" + `                                             |
      | ` + "`" + `tls.certs.provided` + "`" + `                                      | Bring your own certs scenario, i.e certificates are provided    | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `tls.certs.clientRootSecret` + "`" + `                              | If certs are provided, secret name for client root cert         | ` + "`" + `cockroachdb-root` + "`" + `                               |
      | ` + "`" + `tls.certs.nodeSecret` + "`" + `                                    | If certs are provided, secret name for node cert                | ` + "`" + `cockroachdb-node` + "`" + `                               |
      | ` + "`" + `tls.certs.tlsSecret` + "`" + `                                     | Own certs are stored in TLS secret                              | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `tls.init.image.repository` + "`" + `                               | Image to use for requesting TLS certificates                    | ` + "`" + `cockroachdb/cockroach-k8s-request-cert` + "`" + `         |
      | ` + "`" + `tls.init.image.tag` + "`" + `                                      | Image tag to use for requesting TLS certificates                | ` + "`" + `0.4` + "`" + `                                            |
      | ` + "`" + `tls.init.image.pullPolicy` + "`" + `                               | Requesting TLS certificates container pull policy               | ` + "`" + `IfNotPresent` + "`" + `                                   |
      | ` + "`" + `tls.init.image.credentials` + "`" + `                              | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
      | ` + "`" + `networkPolicy.enabled` + "`" + `                                   | Enable NetworkPolicy for CockroachDB's Pods                     | ` + "`" + `no` + "`" + `                                             |
      | ` + "`" + `networkPolicy.ingress.grpc` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |
      | ` + "`" + `networkPolicy.ingress.http` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |
    ## Upgrading the cluster
    Assuming the name of the ` + "`" + `CockroachDB` + "`" + ` instance is ` + "`" + `example` + "`" + `, follow the steps below to update to a newer version (example used os v19.2.5->v19.2.7) of CockroachDB:
    Launch a temporary interactive pod and start the built-in SQL client:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=example-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    > If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.
    Set ` + "`" + `cluster.preserve_downgrade_option` + "`" + `, where ` + "`" + `$current_version` + "`" + ` is the CockroachDB version currently running (e.g., ` + "`" + `19.2` + "`" + `):
    ` + "`" + `` + "`" + `` + "`" + `sql
    > SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';
    ` + "`" + `` + "`" + `` + "`" + `
    Exit the shell and delete the temporary pod:
    ` + "`" + `` + "`" + `` + "`" + `sql
    > \q
    ` + "`" + `` + "`" + `` + "`" + `
    Kick off the upgrade process by changing the new Docker image, where ` + "`" + `$new_version` + "`" + ` is the CockroachDB version to which you are upgrading:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl delete job example-cockroachdb-init
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl patch cockroachdbs example -p '{"spec": {"image":{"tag":"v19.2.7"}}}' --type merge
    ` + "`" + `` + "`" + `` + "`" + `
    Kubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                READY     STATUS              RESTARTS   AGE
    example-cockroachdb-0            1/1       Running             0          2m
    example-cockroachdb-1            1/1       Running             0          3m
    example-cockroachdb-2            1/1       Running             0          3m
    example-cockroachdb-3            0/1       ContainerCreating   0          25s
    example-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods \
    -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[0].image}{"\n"}'
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `
    example-cockroachdb-0    cockroachdb/cockroach:v19.2.7
    example-cockroachdb-1    cockroachdb/cockroach:v19.2.7
    example-cockroachdb-2    cockroachdb/cockroach:v19.2.7
    ` + "`" + `` + "`" + `` + "`" + `
    Resume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:
    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=example-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    ` + "`" + `` + "`" + `` + "`" + `sql
    > RESET CLUSTER SETTING cluster.preserve_downgrade_option;
    > \q
    ` + "`" + `` + "`" + `` + "`" + `
  displayName: CockroachDB
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - clusterroles
          - rolebindings
          - clusterrolebindings
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: cockroachdb-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                - --leader-election-id=cockroachdb
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: cockroachdb
                image: quay.io/helmoperators/cockroachdb:v5.0.3
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 90Mi
                  requests:
                    cpu: 100m
                    memory: 60Mi
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - charts.operatorhub.io
          resources:
          - cockroachdbs
          - cockroachdbs/status
          - cockroachdbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          - pods
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - cockroach
  - cockroachdb
  links:
  - name: Helm Chart Source
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb
  - name: Configuration Options
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration
  - name: CockroachDB Source
    url: https://github.com/cockroachdb/cockroach
  maintainers:
  - email: dmesser@redhat.com
    name: Daniel Messer
  maturity: stable
  minKubeVersion: 1.8.0
  provider:
    name: Helm Community
    url: https://artifacthub.io/packages/helm/cockroachdb/cockroachdb
  version: 5.0.3
`)

func testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cockroachdbs.charts.operatorhub.io
spec:
  group: charts.operatorhub.io
  names:
    kind: Cockroachdb
    listKind: CockroachdbList
    plural: cockroachdbs
    singular: cockroachdb
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cockroachdb is the Schema for the cockroachdbs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Cockroachdb
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
`)

func testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/charts.operatorhub.io_cockroachdbs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYaml = []byte(`apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    control-plane: controller-manager
  name: cockroachdb-controller-manager-metrics-service
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
status:
  loadBalancer: {}
`)

func testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb-controller-manager-metrics-service_v1_service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml = []byte(`apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cockroachdb-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
`)

func testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.operatorhub.io/v1alpha1",
          "kind": "Cockroachdb",
          "metadata": {
            "name": "cockroachdb-sample"
          },
          "spec": {
            "clusterDomain": "cluster.local",
            "conf": {
              "attrs": [],
              "cache": "25%",
              "cluster-name": "",
              "disable-cluster-name-verification": false,
              "http-port": 8080,
              "join": [],
              "locality": "",
              "logtostderr": "INFO",
              "max-sql-memory": "25%",
              "port": 26257,
              "single-node": false,
              "sql-audit-dir": ""
            },
            "image": {
              "credentials": {},
              "pullPolicy": "IfNotPresent",
              "repository": "cockroachdb/cockroach",
              "tag": "v20.2.4"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "labels": {},
              "paths": [
                "/"
              ],
              "tls": []
            },
            "init": {
              "affinity": {},
              "annotations": {},
              "labels": {
                "app.kubernetes.io/component": "init"
              },
              "nodeSelector": {},
              "resources": {},
              "tolerations": []
            },
            "labels": {},
            "networkPolicy": {
              "enabled": false,
              "ingress": {
                "grpc": [],
                "http": []
              }
            },
            "service": {
              "discovery": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                }
              },
              "ports": {
                "grpc": {
                  "external": {
                    "name": "grpc",
                    "port": 26257
                  },
                  "internal": {
                    "name": "grpc-internal",
                    "port": 26257
                  }
                },
                "http": {
                  "name": "http",
                  "port": 8080
                }
              },
              "public": {
                "annotations": {},
                "labels": {
                  "app.kubernetes.io/component": "cockroachdb"
                },
                "type": "ClusterIP"
              }
            },
            "serviceMonitor": {
              "annotations": {},
              "enabled": false,
              "interval": "10s",
              "labels": {}
            },
            "statefulset": {
              "annotations": {},
              "args": [],
              "budget": {
                "maxUnavailable": 1
              },
              "env": [],
              "labels": {
                "app.kubernetes.io/component": "cockroachdb"
              },
              "nodeAffinity": {},
              "nodeSelector": {},
              "podAffinity": {},
              "podAntiAffinity": {
                "topologyKey": "kubernetes.io/hostname",
                "type": "soft",
                "weight": 100
              },
              "podManagementPolicy": "Parallel",
              "priorityClassName": "",
              "replicas": 3,
              "resources": {},
              "secretMounts": [],
              "tolerations": [],
              "topologySpreadConstraints": {
                "maxSkew": 1,
                "topologyKey": "topology.kubernetes.io/zone",
                "whenUnsatisfiable": "ScheduleAnyway"
              },
              "updateStrategy": {
                "type": "RollingUpdate"
              }
            },
            "storage": {
              "hostPath": "",
              "persistentVolume": {
                "annotations": {},
                "enabled": true,
                "labels": {},
                "size": "100Gi",
                "storageClass": ""
              }
            },
            "tls": {
              "certs": {
                "clientRootSecret": "cockroachdb-root",
                "nodeSecret": "cockroachdb-node",
                "provided": false,
                "tlsSecret": false
              },
              "enabled": false,
              "init": {
                "image": {
                  "credentials": {},
                  "pullPolicy": "IfNotPresent",
                  "repository": "cockroachdb/cockroach-k8s-request-cert",
                  "tag": "0.4"
                }
              },
              "serviceAccount": {
                "create": true,
                "name": ""
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: Database
    certified: "false"
    containerImage: quay.io/helmoperators/cockroachdb:v5.0.4
    createdAt: 2021-01-23T10-00-00Z
    description: CockroachDB Operator based on the CockroachDB helm chart
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    repository: https://github.com/dmesser/cockroachdb-operator
    support: dmesser
  name: cockroachdb.v5.0.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Represents a CockroachDB cluster
      displayName: CockroachDB
      kind: Cockroachdb
      name: cockroachdbs.charts.operatorhub.io
      resources:
      - kind: Deployment
        name: ""
        version: apps/v1
      - kind: Service
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: apps/v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: apps/v1
      - kind: Job
        name: ""
        version: batch/v1
      version: v1alpha1
  description: |
    CockroachDB is a scalable, survivable, strongly-consistent SQL database.
    ## About this Operator
    This Operator is based on a Helm chart for CockroachDB. It supports the same parameters like the official [CockroachDB Helm Chart](https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb).

    ## Core capabilities
    * **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet
    * **Expand Replicas** - Supports expanding the set of replicas by simply editing your object
    * **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.
    Review all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [` + "`" + `values.yaml` + "`" + `](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).
    ## Using the cluster
    The resulting cluster endpoint can be consumed from a ` + "`" + `Service` + "`" + ` that follows the pattern: ` + "`" + `<StatefulSet-name>-public` + "`" + `. For example to connect using the command line client, use something like the following to obtain the name of the service:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl get service -l chart=cockroachdb-5.0.4
    NAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             <none>        26257/TCP,8080/TCP   24m
    example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   <none>        26257/TCP,8080/TCP   24m
    ` + "`" + `` + "`" + `` + "`" + `
    Then you can use the CockroachDB command line client to connect to the database cluster:
    ` + "`" + `` + "`" + `` + "`" + `
    kubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public
    ` + "`" + `` + "`" + `` + "`" + `
    ## Before you start
    This Operator requires a cluster with PV support in order to run correctly.

    Note that for a production cluster, you will likely want to override the following parameters in [` + "`" + `values.yaml` + "`" + `](values.yaml) with your own values.

    - ` + "`" + `statefulset.resources.requests.memory` + "`" + ` and ` + "`" + `statefulset.resources.limits.memory` + "`" + ` allocate memory resources to CockroachDB pods in your cluster.
    - ` + "`" + `conf.cache` + "`" + ` and ` + "`" + `conf.max-sql-memory` + "`" + ` are memory limits that we recommend setting to 1/4 of the above resource allocation. When running CockroachDB, you must set these limits explicitly to avoid running out of memory.
    - ` + "`" + `storage.persistentVolume.size` + "`" + ` defaults to ` + "`" + `100Gi` + "`" + ` of disk space per pod, which you may increase or decrease for your use case.
    - ` + "`" + `storage.persistentVolume.storageClass` + "`" + ` uses the default storage class for your environment. We strongly recommend that you specify a storage class which uses an SSD.
    - ` + "`" + `tls.enabled` + "`" + ` must be set to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + ` to deploy in secure mode.

    For more information on overriding the ` + "`" + `values.yaml` + "`" + ` parameters, please see:
    > <https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-kubernetes.html#step-2-start-cockroachdb>

    If you are running in secure mode (with configuration parameter ` + "`" + `tls.enabled` + "`" + ` set to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `) and ` + "`" + `tls.certs.provided` + "`" + ` set to ` + "`" + `no` + "`" + `/` + "`" + `false` + "`" + `), then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running ` + "`" + `kubectl get csr` + "`" + `, and approve them by running ` + "`" + `kubectl certificate approve <csr-name>` + "`" + `. You'll have to approve one certificate for each CockroachDB node (e.g., ` + "`" + `default.node.my-release-cockroachdb-0` + "`" + ` and one client certificate for the job that initializes the cluster (e.g., ` + "`" + `default.node.root` + "`" + `).

    When ` + "`" + `tls.certs.provided` + "`" + ` is set to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `, this chart will use certificates created outside of Kubernetes. You may want to use this if you want to use a different certificate authority from the one being used by Kubernetes or if your Kubernetes cluster doesn't fully support certificate-signing requests. To use this, first set up your certificates and load them into your Kubernetes cluster as Secrets using the commands below:

    ` + "`" + `` + "`" + `` + "`" + `
    mkdir certs
    mkdir my-safe-directory
    cockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key
    cockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key
    kubectl create secret generic cockroachdb-root --from-file=certs
    cockroach cert create-node --certs-dir=certs --ca-key=my-safe-directory/ca.key localhost 127.0.0.1 eerie-horse-cockroachdb-public eerie-horse-cockroachdb-public.default eerie-horse-cockroachdb-public.default.svc.cluster.local *.eerie-horse-cockroachdb *.eerie-horse-cockroachdb.default *.eerie-horse-cockroachdb.default.svc.cluster.local
    kubectl create secret generic cockroachdb-node --from-file=certs
    ` + "`" + `` + "`" + `` + "`" + `

    Set ` + "`" + `tls.certs.tlsSecret` + "`" + ` to ` + "`" + `yes/true` + "`" + ` if you make use of [cert-manager][3] in your cluster.

    [cert-manager][3] stores generated certificates in dedicated TLS secrets. Thus, they are always named:

    * ` + "`" + `ca.crt` + "`" + `
    * ` + "`" + `tls.crt` + "`" + `
    * ` + "`" + `tls.key` + "`" + `

    On the other hand, CockroachDB also demands dedicated certificate filenames:

    * ` + "`" + `ca.crt` + "`" + `
    * ` + "`" + `node.crt` + "`" + `
    * ` + "`" + `node.key` + "`" + `
    * ` + "`" + `client.root.crt` + "`" + `
    * ` + "`" + `client.root.key` + "`" + `

    By activating ` + "`" + `tls.certs.tlsSecret` + "`" + ` we benefit from projected secrets and convert the TLS secret filenames to their according CockroachDB filenames.

    If you are running in secure mode, then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running ` + "`" + `kubectl get csr` + "`" + `, and approve them by running ` + "`" + `kubectl certificate approve <csr-name>` + "`" + `. You'll have to approve one certificate for each CockroachDB node (e.g., ` + "`" + `default.node.my-release-cockroachdb-0` + "`" + ` and one client certificate for the job that initializes the cluster (e.g., ` + "`" + `default.node.root` + "`" + `).

    Confirm that all pods are ` + "`" + `Running` + "`" + ` successfully and init has been completed:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                READY     STATUS      RESTARTS   AGE
    my-release-cockroachdb-0            1/1       Running     0          1m
    my-release-cockroachdb-1            1/1       Running     0          1m
    my-release-cockroachdb-2            1/1       Running     0          1m
    my-release-cockroachdb-init-k6jcr   0/1       Completed   0          1m
    ` + "`" + `` + "`" + `` + "`" + `

    Confirm that persistent volumes are created and claimed for each pod:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pv
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                      STORAGECLASS   REASON    AGE
    pvc-64878ebf-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-0   standard                 51s
    pvc-64945b4f-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-1   standard                 51s
    pvc-649d920d-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-2   standard                 51s
    ` + "`" + `` + "`" + `` + "`" + `

    ## Upgrading the cluster

    ### Chart version 3.0.0 and after

    Launch a temporary interactive pod and start the built-in SQL client:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=my-release-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `

    > If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.

    Set ` + "`" + `cluster.preserve_downgrade_option` + "`" + `, where ` + "`" + `$current_version` + "`" + ` is the CockroachDB version currently running (e.g., ` + "`" + `19.2` + "`" + `):

    ` + "`" + `` + "`" + `` + "`" + `sql
    > SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';
    ` + "`" + `` + "`" + `` + "`" + `

    Exit the shell and delete the temporary pod:

    ` + "`" + `` + "`" + `` + "`" + `sql
    > \q
    ` + "`" + `` + "`" + `` + "`" + `

    Kick off the upgrade process by changing the new Docker image, where ` + "`" + `$new_version` + "`" + ` is the CockroachDB version to which you are upgrading:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl delete job my-release-cockroachdb-init
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl patch cockroachdbs example -p '{"spec": {"image":{"tag":"<new version tag here>"}}}' --type merge
    ` + "`" + `` + "`" + `` + "`" + `

    Kubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                                READY     STATUS              RESTARTS   AGE
    my-release-cockroachdb-0            1/1       Running             0          2m
    my-release-cockroachdb-1            1/1       Running             0          3m
    my-release-cockroachdb-2            1/1       Running             0          3m
    my-release-cockroachdb-3            0/1       ContainerCreating   0          25s
    my-release-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods \
    -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[0].image}{"\n"}'
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    my-release-cockroachdb-0    cockroachdb/cockroach:v20.2.4
    my-release-cockroachdb-1    cockroachdb/cockroach:v20.2.4
    my-release-cockroachdb-2    cockroachdb/cockroach:v20.2.4
    my-release-cockroachdb-3    cockroachdb/cockroach:v20.2.4
    ` + "`" + `` + "`" + `` + "`" + `

    Resume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroachdb --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host=my-release-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `sql
    > RESET CLUSTER SETTING cluster.preserve_downgrade_option;
    > \q
    ` + "`" + `` + "`" + `` + "`" + `

    ## Configuration

    The following table lists the configurable parameters of the CockroachDB chart and their default values.
    For details see the [` + "`" + `values.yaml` + "`" + `](values.yaml) file.

    | Parameter                                                 | Description                                                     | Default                                          |
    | ---------                                                 | -----------                                                     | -------                                          |
    | ` + "`" + `clusterDomain` + "`" + `                                           | Cluster's default DNS domain                                    | ` + "`" + `cluster.local` + "`" + `                                  |
    | ` + "`" + `conf.attrs` + "`" + `                                              | CockroachDB node attributes                                     | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `conf.cache` + "`" + `                                              | Size of CockroachDB's in-memory cache                           | ` + "`" + `25%` + "`" + `                                            |
    | ` + "`" + `conf.cluster-name` + "`" + `                                       | Name of CockroachDB cluster                                     | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `conf.disable-cluster-name-verification` + "`" + `                  | Disable CockroachDB cluster name verification                   | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `conf.join` + "`" + `                                               | List of already-existing CockroachDB instances                  | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `conf.max-disk-temp-storage` + "`" + `                              | Max storage capacity for temp data                              | ` + "`" + `0` + "`" + `                                              |
    | ` + "`" + `conf.max-offset` + "`" + `                                         | Max allowed clock offset for CockroachDB cluster                | ` + "`" + `500ms` + "`" + `                                          |
    | ` + "`" + `conf.max-sql-memory` + "`" + `                                     | Max memory to use processing SQL querie                         | ` + "`" + `25%` + "`" + `                                            |
    | ` + "`" + `conf.locality` + "`" + `                                           | Locality attribute for this deployment                          | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `conf.single-node` + "`" + `                                        | Disable CockroachDB clustering (standalone mode)                | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `conf.sql-audit-dir` + "`" + `                                      | Directory for SQL audit log                                     | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `conf.port` + "`" + `                                               | CockroachDB primary serving port in Pods                        | ` + "`" + `26257` + "`" + `                                          |
    | ` + "`" + `conf.http-port` + "`" + `                                          | CockroachDB HTTP port in Pods                                   | ` + "`" + `8080` + "`" + `                                           |
    | ` + "`" + `image.repository` + "`" + `                                        | Container image name                                            | ` + "`" + `cockroachdb/cockroach` + "`" + `                          |
    | ` + "`" + `image.tag` + "`" + `                                               | Container image tag                                             | ` + "`" + `v20.2.4` + "`" + `                                        |
    | ` + "`" + `image.pullPolicy` + "`" + `                                        | Container pull policy                                           | ` + "`" + `IfNotPresent` + "`" + `                                   |
    | ` + "`" + `image.credentials` + "`" + `                                       | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.replicas` + "`" + `                                    | StatefulSet replicas number                                     | ` + "`" + `3` + "`" + `                                              |
    | ` + "`" + `statefulset.updateStrategy` + "`" + `                              | Update strategy for StatefulSet Pods                            | ` + "`" + `{"type": "RollingUpdate"}` + "`" + `                      |
    | ` + "`" + `statefulset.podManagementPolicy` + "`" + `                         | ` + "`" + `OrderedReady` + "`" + `/` + "`" + `Parallel` + "`" + ` Pods creation/deletion order          | ` + "`" + `Parallel` + "`" + `                                       |
    | ` + "`" + `statefulset.budget.maxUnavailable` + "`" + `                       | k8s PodDisruptionBudget parameter                               | ` + "`" + `1` + "`" + `                                              |
    | ` + "`" + `statefulset.args` + "`" + `                                        | Extra command-line arguments                                    | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.env` + "`" + `                                         | Extra env vars                                                  | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.secretMounts` + "`" + `                                | Additional Secrets to mount at cluster members                  | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.labels` + "`" + `                                      | Additional labels of StatefulSet and its Pods                   | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
    | ` + "`" + `statefulset.annotations` + "`" + `                                 | Additional annotations of StatefulSet Pods                      | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.nodeAffinity` + "`" + `                                | [Node affinity rules][2] of StatefulSet Pods                    | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.podAffinity` + "`" + `                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.podAntiAffinity` + "`" + `                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |
    | ` + "`" + `statefulset.podAntiAffinity.topologyKey` + "`" + `                 | The topologyKey for auto [anti-affinity rules][1]               | ` + "`" + `kubernetes.io/hostname` + "`" + `                         |
    | ` + "`" + `statefulset.podAntiAffinity.type` + "`" + `                        | Type of auto [anti-affinity rules][1]                           | ` + "`" + `soft` + "`" + `                                           |
    | ` + "`" + `statefulset.podAntiAffinity.weight` + "`" + `                      | Weight for ` + "`" + `soft` + "`" + ` auto [anti-affinity rules][1]                 | ` + "`" + `100` + "`" + `                                            |
    | ` + "`" + `statefulset.nodeSelector` + "`" + `                                | Node labels for StatefulSet Pods assignment                     | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `statefulset.priorityClassName` + "`" + `                           | [PriorityClassName][4] for StatefulSet Pods                     | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `statefulset.tolerations` + "`" + `                                 | Node taints to tolerate by StatefulSet Pods                     | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `statefulset.topologySpreadConstraints` + "`" + `                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |
    | ` + "`" + `statefulset.topologySpreadConstraints.maxSkew` + "`" + `           | Degree to which Pods may be unevenly distributed                | ` + "`" + `1` + "`" + `                                              |
    | ` + "`" + `statefulset.topologySpreadConstraints.topologyKey` + "`" + `       | The key of node labels                                          | ` + "`" + `topology.kubernetes.io/zone` + "`" + `                    |
    | ` + "`" + `statefulset.topologySpreadConstraints.whenUnsatisfiable` + "`" + ` | ` + "`" + `ScheduleAnyway` + "`" + `/` + "`" + `DoNotSchedule` + "`" + ` for unsatisfiable constraints  | ` + "`" + `ScheduleAnyway` + "`" + `                                 |
    | ` + "`" + `statefulset.resources` + "`" + `                                   | Resource requests and limits for StatefulSet Pods               | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `service.ports.grpc.external.port` + "`" + `                        | CockroachDB primary serving port in Services                    | ` + "`" + `26257` + "`" + `                                          |
    | ` + "`" + `service.ports.grpc.external.name` + "`" + `                        | CockroachDB primary serving port name in Services               | ` + "`" + `grpc` + "`" + `                                           |
    | ` + "`" + `service.ports.grpc.internal.port` + "`" + `                        | CockroachDB inter-communication port in Services                | ` + "`" + `26257` + "`" + `                                          |
    | ` + "`" + `service.ports.grpc.internal.name` + "`" + `                        | CockroachDB inter-communication port name in Services           | ` + "`" + `grpc-internal` + "`" + `                                  |
    | ` + "`" + `service.ports.http.port` + "`" + `                                 | CockroachDB HTTP port in Services                               | ` + "`" + `8080` + "`" + `                                           |
    | ` + "`" + `service.ports.http.name` + "`" + `                                 | CockroachDB HTTP port name in Services                          | ` + "`" + `http` + "`" + `                                           |
    | ` + "`" + `service.public.type` + "`" + `                                     | Public Service type                                             | ` + "`" + `ClusterIP` + "`" + `                                      |
    | ` + "`" + `service.public.labels` + "`" + `                                   | Additional labels of public Service                             | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
    | ` + "`" + `service.public.annotations` + "`" + `                              | Additional annotations of public Service                        | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `service.discovery.labels` + "`" + `                                | Additional labels of discovery Service                          | ` + "`" + `{"app.kubernetes.io/component": "cockroachdb"}` + "`" + ` |
    | ` + "`" + `service.discovery.annotations` + "`" + `                           | Additional annotations of discovery Service                     | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `ingress.enabled` + "`" + `                                         | Enable ingress resource for CockroachDB                         | ` + "`" + `false` + "`" + `                                          |
    | ` + "`" + `ingress.labels` + "`" + `                                          | Additional labels of Ingress                                    | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `ingress.annotations` + "`" + `                                     | Additional annotations of Ingress                               | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `ingress.paths` + "`" + `                                           | Paths for the default host                                      | ` + "`" + `[/]` + "`" + `                                            |
    | ` + "`" + `ingress.hosts` + "`" + `                                           | CockroachDB Ingress hostnames                                   | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `ingress.tls[0].hosts` + "`" + `                                    | CockroachDB Ingress tls hostnames                               | ` + "`" + `nil` + "`" + `                                            |
    | ` + "`" + `ingress.tls[0].secretName` + "`" + `                               | CockroachDB Ingress tls secret name                             | ` + "`" + `nil` + "`" + `                                            |
    | ` + "`" + `serviceMonitor.enabled` + "`" + `                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | ` + "`" + `false` + "`" + `                                             |
    | ` + "`" + `serviceMonitor.labels` + "`" + `                                   | Additional labels of ServiceMonitor                             | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `serviceMonitor.annotations` + "`" + `                              | Additional annotations of ServiceMonitor                        | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `serviceMonitor.interval` + "`" + `                                 | ServiceMonitor scrape metrics interval                          | ` + "`" + `10s` + "`" + `                                            |
    | ` + "`" + `serviceMonitor.scrapeTimeout` + "`" + `                            | ServiceMonitor scrape timeout                                   | ` + "`" + `nil` + "`" + `                                            |
    | ` + "`" + `storage.hostPath` + "`" + `                                        | Absolute path on host to store data                             | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `storage.persistentVolume.enabled` + "`" + `                        | Whether to use PersistentVolume to store data                   | ` + "`" + `yes` + "`" + `                                            |
    | ` + "`" + `storage.persistentVolume.size` + "`" + `                           | PersistentVolume size                                           | ` + "`" + `100Gi` + "`" + `                                          |
    | ` + "`" + `storage.persistentVolume.storageClass` + "`" + `                   | PersistentVolume class                                          | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `storage.persistentVolume.labels` + "`" + `                         | Additional labels of PersistentVolumeClaim                      | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `storage.persistentVolume.annotations` + "`" + `                    | Additional annotations of PersistentVolumeClaim                 | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.labels` + "`" + `                                             | Additional labels of init Job and its Pod                       | ` + "`" + `{"app.kubernetes.io/component": "init"}` + "`" + `        |
    | ` + "`" + `init.annotations` + "`" + `                                        | Additional labels of the Pod of init Job                        | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.affinity` + "`" + `                                           | [Affinity rules][2] of init Job Pod                             | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.nodeSelector` + "`" + `                                       | Node labels for init Job Pod assignment                         | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `init.tolerations` + "`" + `                                        | Node taints to tolerate by init Job Pod                         | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `init.resources` + "`" + `                                          | Resource requests and limits for the Pod of init Job            | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `tls.enabled` + "`" + `                                             | Whether to run securely using TLS certificates                  | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `tls.serviceAccount.create` + "`" + `                               | Whether to create a new RBAC service account                    | ` + "`" + `yes` + "`" + `                                            |
    | ` + "`" + `tls.serviceAccount.name` + "`" + `                                 | Name of RBAC service account to use                             | ` + "`" + `""` + "`" + `                                             |
    | ` + "`" + `tls.certs.provided` + "`" + `                                      | Bring your own certs scenario, i.e certificates are provided    | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `tls.certs.clientRootSecret` + "`" + `                              | If certs are provided, secret name for client root cert         | ` + "`" + `cockroachdb-root` + "`" + `                               |
    | ` + "`" + `tls.certs.nodeSecret` + "`" + `                                    | If certs are provided, secret name for node cert                | ` + "`" + `cockroachdb-node` + "`" + `                               |
    | ` + "`" + `tls.certs.tlsSecret` + "`" + `                                     | Own certs are stored in TLS secret                              | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `tls.init.image.repository` + "`" + `                               | Image to use for requesting TLS certificates                    | ` + "`" + `cockroachdb/cockroach-k8s-request-cert` + "`" + `         |
    | ` + "`" + `tls.init.image.tag` + "`" + `                                      | Image tag to use for requesting TLS certificates                | ` + "`" + `0.4` + "`" + `                                            |
    | ` + "`" + `tls.init.image.pullPolicy` + "`" + `                               | Requesting TLS certificates container pull policy               | ` + "`" + `IfNotPresent` + "`" + `                                   |
    | ` + "`" + `tls.init.image.credentials` + "`" + `                              | ` + "`" + `registry` + "`" + `, ` + "`" + `user` + "`" + ` and ` + "`" + `pass` + "`" + ` credentials to pull private image | ` + "`" + `{}` + "`" + `                                             |
    | ` + "`" + `networkPolicy.enabled` + "`" + `                                   | Enable NetworkPolicy for CockroachDB's Pods                     | ` + "`" + `no` + "`" + `                                             |
    | ` + "`" + `networkPolicy.ingress.grpc` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |
    | ` + "`" + `networkPolicy.ingress.http` + "`" + `                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | ` + "`" + `[]` + "`" + `                                             |


    Override the default parameters using the ` + "`" + `CockroachDB` + "`" + ` custom resource.

    ## Deep dive

    ### Connecting to the CockroachDB cluster

    Once you've created the cluster, you can start talking to it by connecting to its ` + "`" + `-public` + "`" + ` Service. CockroachDB is PostgreSQL wire protocol compatible, so there's a [wide variety of supported clients](https://www.cockroachlabs.com/docs/install-client-drivers.html). As an example, we'll open up a SQL shell using CockroachDB's built-in shell and play around with it a bit, like this (likely needing to replace ` + "`" + `my-release-cockroachdb-public` + "`" + ` with the name of the ` + "`" + `-public` + "`" + ` Service that was created with your installed chart):

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl run cockroach-client --rm -it \
    --image=cockroachdb/cockroach \
    --restart=Never \
    -- sql --insecure --host my-release-cockroachdb-public
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    Waiting for pod default/cockroach-client to be running, status is Pending,
    pod ready: false
    If you don't see a command prompt, try pressing enter.
    root@my-release-cockroachdb-public:26257> SHOW DATABASES;
    +--------------------+
    |      Database      |
    +--------------------+
    | information_schema |
    | pg_catalog         |
    | system             |
    +--------------------+
    (3 rows)
    root@my-release-cockroachdb-public:26257> CREATE DATABASE bank;
    CREATE DATABASE
    root@my-release-cockroachdb-public:26257> CREATE TABLE bank.accounts (id INT
    PRIMARY KEY, balance DECIMAL);
    CREATE TABLE
    root@my-release-cockroachdb-public:26257> INSERT INTO bank.accounts VALUES
    (1234, 10000.50);
    INSERT 1
    root@my-release-cockroachdb-public:26257> SELECT * FROM bank.accounts;
    +------+---------+
    |  id  | balance |
    +------+---------+
    | 1234 | 10000.5 |
    +------+---------+
    (1 row)
    root@my-release-cockroachdb-public:26257> \q
    Waiting for pod default/cockroach-client to terminate, status is Running
    pod "cockroach-client" deleted
    ` + "`" + `` + "`" + `` + "`" + `

    > If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.

    ### Cluster health

    Because our pod spec includes regular health checks of the CockroachDB processes, simply running ` + "`" + `kubectl get pods` + "`" + ` and looking at the ` + "`" + `STATUS` + "`" + ` column is sufficient to determine the health of each instance in the cluster.

    If you want more detailed information about the cluster, the best place to look is the Admin UI.

    ### Accessing the Admin UI

    If you want to see information about how the cluster is doing, you can try pulling up the CockroachDB Admin UI by port-forwarding from your local machine to one of the pods (replacing ` + "`" + `my-release-cockroachdb-0` + "`" + ` with the name of one of your pods:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl port-forward my-release-cockroachdb-0 8080
    ` + "`" + `` + "`" + `` + "`" + `

    You should then be able to access the Admin UI by visiting <http://localhost:8080/> in your web browser.

    ### Failover

    If any CockroachDB member fails, it is restarted or recreated automatically by the Kubernetes infrastructure, and will re-join the cluster automatically when it comes back up. You can test this scenario by killing any of the CockroachDB pods:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl delete pod my-release-cockroachdb-1
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods -l "app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb"
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                      READY     STATUS        RESTARTS   AGE
    my-release-cockroachdb-0  1/1       Running       0          5m
    my-release-cockroachdb-2  1/1       Running       0          5m
    ` + "`" + `` + "`" + `` + "`" + `

    After a while:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl get pods -l "app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb"
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    NAME                      READY     STATUS        RESTARTS   AGE
    my-release-cockroachdb-0  1/1       Running       0          5m
    my-release-cockroachdb-1  1/1       Running       0          20s
    my-release-cockroachdb-2  1/1       Running       0          5m
    ` + "`" + `` + "`" + `` + "`" + `

    You can check the state of re-joining from the new pod's logs:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl logs my-release-cockroachdb-1
    ` + "`" + `` + "`" + `` + "`" + `

    ` + "`" + `` + "`" + `` + "`" + `
    [...]
    I161028 19:32:09.754026 1 server/node.go:586  [n1] node connected via gossip and
    verified as part of cluster {"35ecbc27-3f67-4e7d-9b8f-27c31aae17d6"}
    [...]
    cockroachdb-0.my-release-cockroachdb.default.svc.cluster.local:26257
    build:      beta-20161027-55-gd2d3c7f @ 2016/10/28 19:27:25 (go1.7.3)
    admin:      http://0.0.0.0:8080
    sql:
    postgresql://root@my-release-cockroachdb-1.my-release-cockroachdb.default.svc.cluster.local:26257?sslmode=disable
    logs:       cockroach-data/logs
    store[0]:   path=cockroach-data
    status:     restarted pre-existing node
    clusterID:  {35ecbc27-3f67-4e7d-9b8f-27c31aae17d6}
    nodeID:     2
    [...]
    ` + "`" + `` + "`" + `` + "`" + `

    ### NetworkPolicy

    To enable NetworkPolicy for CockroachDB, install [a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin), and set ` + "`" + `networkPolicy.enabled` + "`" + ` to ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `.

    For Kubernetes v1.5 & v1.6, you must also turn on NetworkPolicy by setting the ` + "`" + `DefaultDeny` + "`" + ` Namespace annotation. Note: this will enforce policy for _all_ pods in the Namespace:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl annotate namespace default "net.beta.kubernetes.io/network-policy={\"ingress\":{\"isolation\":\"DefaultDeny\"}}"
    ` + "`" + `` + "`" + `` + "`" + `

    For more precise policy, set ` + "`" + `networkPolicy.ingress.grpc` + "`" + ` and ` + "`" + `networkPolicy.ingress.http` + "`" + ` rules. This will only allow pods that match the provided rules to connect to CockroachDB.

    ### Scaling

    Scaling should be managed via the ` + "`" + `helm upgrade` + "`" + ` command. After resizing your cluster on your cloud environment (e.g., GKE or EKS), run the following command to add a pod. This assumes you scaled from 3 to 4 nodes:

    ` + "`" + `` + "`" + `` + "`" + `shell
    kubectl patch cockroachdbs example -p '{"spec": {"statefulset":{"replicas":"4"}}}' --type merge
    ` + "`" + `` + "`" + `` + "`" + `

    Note, that if you are running in secure mode (` + "`" + `tls.enabled` + "`" + ` is ` + "`" + `yes` + "`" + `/` + "`" + `true` + "`" + `) and increase the size of your cluster, you will also have to approve the CSR (certificate-signing request) of each new node (using ` + "`" + `kubectl get csr` + "`" + ` and ` + "`" + `kubectl certificate approve` + "`" + `).

    [1]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    [2]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
    [3]: https://cert-manager.io/
    [4]: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
    [5]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  displayName: CockroachDB Helm Operator
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - clusterroles
          - rolebindings
          - clusterrolebindings
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: default
      deployments:
      - name: cockroachdb-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                - --leader-election-id=cockroachdb
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: cockroachdb
                image: quay.io/helmoperators/cockroachdb:v5.0.4
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 90Mi
                  requests:
                    cpu: 100m
                    memory: 60Mi
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - charts.operatorhub.io
          resources:
          - cockroachdbs
          - cockroachdbs/status
          - cockroachdbs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - services
          - pods
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        serviceAccountName: default
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - cockroach
  - cockroachdb
  links:
  - name: Helm Chart Source
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb
  - name: Configuration Options
    url: https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration
  - name: CockroachDB Source
    url: https://github.com/cockroachdb/cockroach
  maintainers:
  - email: dmesser@redhat.com
    name: Daniel Messer
  maturity: stable
  minKubeVersion: 1.8.0
  provider:
    name: Helm Community
    url: https://artifacthub.io/packages/helm/cockroachdb/cockroachdb
  version: 5.0.4
  replaces: 
`)

func testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYaml, nil
}

func testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYaml = []byte(`#
#  Copyright (c) 2019-2021 Red Hat, Inc.
#    This program and the accompanying materials are made
#    available under the terms of the Eclipse Public License 2.0
#    which is available at https://www.eclipse.org/legal/epl-2.0/
#
#  SPDX-License-Identifier: EPL-2.0
#
#  Contributors:
#    Red Hat, Inc. - initial API and implementation
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: checlusters.org.eclipse.che
spec:
  group: org.eclipse.che
  names:
    kind: CheCluster
    listKind: CheClusterList
    plural: checlusters
    singular: checluster
  preserveUnknownFields: false
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: The ` + "`" + `CheCluster` + "`" + ` custom resource allows defining and managing
            a Che server installation
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired configuration of the Che installation. Based on
                these settings, the  Operator automatically creates and maintains
                several ConfigMaps that will contain the appropriate environment variables
                the various components of the Che installation. These generated ConfigMaps
                must NOT be updated manually.
              properties:
                auth:
                  description: Configuration settings related to the Authentication
                    used by the Che installation.
                  properties:
                    externalIdentityProvider:
                      description: 'Instructs the Operator on whether or not to deploy
                        a dedicated Identity Provider (Keycloak or RH SSO instance).
                        Instructs the Operator on whether to deploy a dedicated Identity
                        Provider (Keycloak or RH-SSO instance). By default, a dedicated
                        Identity Provider server is deployed as part of the Che installation.
                        When ` + "`" + `externalIdentityProvider` + "`" + ` is ` + "`" + `true` + "`" + `, no dedicated identity
                        provider will be deployed by the Operator and you will need
                        to provide details about the external identity provider you
                        are about to use. See also all the other fields starting with:
                        ` + "`" + `identityProvider` + "`" + `.'
                      type: boolean
                    identityProviderAdminUserName:
                      description: Overrides the name of the Identity Provider administrator
                        user. Defaults to ` + "`" + `admin` + "`" + `.
                      type: string
                    identityProviderClientId:
                      description: Name of a Identity provider, Keycloak or RH-SSO,
                        ` + "`" + `client-id` + "`" + ` that is used for Che. Override this when an external
                        Identity Provider is in use. See the ` + "`" + `externalIdentityProvider` + "`" + `
                        field. When omitted or left blank, it is set to the value
                        of the ` + "`" + `flavour` + "`" + ` field suffixed with ` + "`" + `-public` + "`" + `.
                      type: string
                    identityProviderContainerResources:
                      description: Identity provider container custom settings.
                      properties:
                        limits:
                          description: Limits describes the maximum amount of compute
                            resources allowed.
                          properties:
                            cpu:
                              description: CPU, in cores. (500m = .5 cores)
                              type: string
                            memory:
                              description: Memory, in bytes. (500Gi = 500GiB = 500
                                * 1024 * 1024 * 1024)
                              type: string
                          type: object
                        request:
                          description: Requests describes the minimum amount of compute
                            resources required.
                          properties:
                            cpu:
                              description: CPU, in cores. (500m = .5 cores)
                              type: string
                            memory:
                              description: Memory, in bytes. (500Gi = 500GiB = 500
                                * 1024 * 1024 * 1024)
                              type: string
                          type: object
                      type: object
                    identityProviderImage:
                      description: Overrides the container image used in the Identity
                        Provider, Keycloak or RH-SSO, deployment. This includes the
                        image tag. Omit it or leave it empty to use the default container
                        image provided by the Operator.
                      type: string
                    identityProviderImagePullPolicy:
                      description: Overrides the image pull policy used in the Identity
                        Provider, Keycloak or RH-SSO, deployment. Default value is
                        ` + "`" + `Always` + "`" + ` for ` + "`" + `nightly` + "`" + ` or ` + "`" + `latest` + "`" + ` images, and ` + "`" + `IfNotPresent` + "`" + `
                        in other cases.
                      type: string
                    identityProviderIngress:
                      description: Ingress custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    identityProviderPassword:
                      description: Overrides the password of Keycloak administrator
                        user. Override this when an external Identity Provider is
                        in use. See the ` + "`" + `externalIdentityProvider` + "`" + ` field. When omitted
                        or left blank, it is set to an auto-generated password.
                      type: string
                    identityProviderPostgresPassword:
                      description: Password for a Identity Provider, Keycloak or RH-SSO,
                        to connect to the database. Override this when an external
                        Identity Provider is in use. See the ` + "`" + `externalIdentityProvider` + "`" + `
                        field. When omitted or left blank, it is set to an auto-generated
                        password.
                      type: string
                    identityProviderPostgresSecret:
                      description: 'The secret that contains ` + "`" + `password` + "`" + ` for the Identity
                        Provider, Keycloak or RH-SSO, to connect to the database.
                        When the secret is defined, the ` + "`" + `identityProviderPostgresPassword` + "`" + `
                        is ignored. When the value is omitted or left blank, the one
                        of following scenarios applies: 1. ` + "`" + `identityProviderPostgresPassword` + "`" + `
                        is defined, then it will be used to connect to the database.
                        2. ` + "`" + `identityProviderPostgresPassword` + "`" + ` is not defined, then
                        a new secret with the name ` + "`" + `che-identity-postgres-secret` + "`" + `
                        will be created with an auto-generated value for ` + "`" + `password` + "`" + `.'
                      type: string
                    identityProviderRealm:
                      description: Name of a Identity provider, Keycloak or RH-SSO,
                        realm that is used for Che. Override this when an external
                        Identity Provider is in use. See the ` + "`" + `externalIdentityProvider` + "`" + `
                        field. When omitted or left blank, it is set to the value
                        of the ` + "`" + `flavour` + "`" + ` field.
                      type: string
                    identityProviderRoute:
                      description: Route custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        domain:
                          description: 'Operator uses the domain to generate a hostname
                            for a route. In a conjunction with labels it creates a
                            route, which is served by a non-default Ingress controller.
                            The generated host name will follow this pattern: ` + "`" + `<route-name>-<route-namespace>.<domain>` + "`" + `.'
                          type: string
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    identityProviderSecret:
                      description: 'The secret that contains ` + "`" + `user` + "`" + ` and ` + "`" + `password` + "`" + `
                        for Identity Provider. When the secret is defined, the ` + "`" + `identityProviderAdminUserName` + "`" + `
                        and ` + "`" + `identityProviderPassword` + "`" + ` are ignored. When the value
                        is omitted or left blank, the one of following scenarios applies:
                        1. ` + "`" + `identityProviderAdminUserName` + "`" + ` and ` + "`" + `identityProviderPassword` + "`" + `
                        are defined, then they will be used. 2. ` + "`" + `identityProviderAdminUserName` + "`" + `
                        or ` + "`" + `identityProviderPassword` + "`" + ` are not defined, then a new
                        secret with the name ` + "`" + `che-identity-secret` + "`" + ` will be created
                        with default value ` + "`" + `admin` + "`" + ` for ` + "`" + `user` + "`" + ` and with an auto-generated
                        value for ` + "`" + `password` + "`" + `.'
                      type: string
                    identityProviderURL:
                      description: Public URL of the Identity Provider server (Keycloak
                        / RH-SSO server). Set this ONLY when a use of an external
                        Identity Provider is needed. See the ` + "`" + `externalIdentityProvider` + "`" + `
                        field. By default, this will be automatically calculated and
                        set by the Operator.
                      type: string
                    initialOpenShiftOAuthUser:
                      description: For operating with the OpenShift OAuth authentication,
                        create a new user account since the kubeadmin can not be used.
                        If the value is true, then a new OpenShift OAuth user will
                        be created for the HTPasswd identity provider. If the value
                        is false and the user has already been created, then it will
                        be removed. If value is an empty, then do nothing. The user's
                        credentials are stored in the ` + "`" + `openshift-oauth-user-credentials` + "`" + `
                        secret in 'openshift-config' namespace by Operator. Note that
                        this solution is Openshift 4 platform-specific.
                      type: boolean
                    oAuthClientName:
                      description: Name of the OpenShift ` + "`" + `OAuthClient` + "`" + ` resource used
                        to setup identity federation on the OpenShift side. Auto-generated
                        when left blank. See also the ` + "`" + `OpenShiftoAuth` + "`" + ` field.
                      type: string
                    oAuthSecret:
                      description: Name of the secret set in the OpenShift ` + "`" + `OAuthClient` + "`" + `
                        resource used to setup identity federation on the OpenShift
                        side. Auto-generated when left blank. See also the ` + "`" + `OAuthClientName` + "`" + `
                        field.
                      type: string
                    openShiftoAuth:
                      description: 'Enables the integration of the identity provider
                        (Keycloak / RHSSO) with OpenShift OAuth. Empty value on OpenShift
                        by default. This will allow users to directly login with their
                        OpenShift user through the OpenShift login, and have their
                        workspaces created under personal OpenShift namespaces. WARNING:
                        the ` + "`" + `kubeadmin` + "`" + ` user is NOT supported, and logging through
                        it will NOT allow accessing the Che Dashboard.'
                      type: boolean
                    updateAdminPassword:
                      description: Forces the default ` + "`" + `admin` + "`" + ` Che user to update password
                        on first login. Defaults to ` + "`" + `false` + "`" + `.
                      type: boolean
                  type: object
                database:
                  description: Configuration settings related to the database used
                    by the Che installation.
                  properties:
                    chePostgresContainerResources:
                      description: PostgreSQL container custom settings
                      properties:
                        limits:
                          description: Limits describes the maximum amount of compute
                            resources allowed.
                          properties:
                            cpu:
                              description: CPU, in cores. (500m = .5 cores)
                              type: string
                            memory:
                              description: Memory, in bytes. (500Gi = 500GiB = 500
                                * 1024 * 1024 * 1024)
                              type: string
                          type: object
                        request:
                          description: Requests describes the minimum amount of compute
                            resources required.
                          properties:
                            cpu:
                              description: CPU, in cores. (500m = .5 cores)
                              type: string
                            memory:
                              description: Memory, in bytes. (500Gi = 500GiB = 500
                                * 1024 * 1024 * 1024)
                              type: string
                          type: object
                      type: object
                    chePostgresDb:
                      description: PostgreSQL database name that the Che server uses
                        to connect to the DB. Defaults to ` + "`" + `dbche` + "`" + `.
                      type: string
                    chePostgresHostName:
                      description: PostgreSQL Database host name that the Che server
                        uses to connect to. Defaults is ` + "`" + `postgres` + "`" + `. Override this
                        value ONLY when using an external database. See field ` + "`" + `externalDb` + "`" + `.
                        In the default case it will be automatically set by the Operator.
                      type: string
                    chePostgresPassword:
                      description: PostgreSQL password that the Che server uses to
                        connect to the DB. When omitted or left blank, it will be
                        set to an automatically generated value.
                      type: string
                    chePostgresPort:
                      description: PostgreSQL Database port that the Che server uses
                        to connect to. Defaults to 5432. Override this value ONLY
                        when using an external database. See field ` + "`" + `externalDb` + "`" + `. In
                        the default case it will be automatically set by the Operator.
                      type: string
                    chePostgresSecret:
                      description: 'The secret that contains PostgreSQL` + "`" + `user` + "`" + ` and
                        ` + "`" + `password` + "`" + ` that the Che server uses to connect to the DB.
                        When the secret is defined, the ` + "`" + `chePostgresUser` + "`" + ` and ` + "`" + `chePostgresPassword` + "`" + `
                        are ignored. When the value is omitted or left blank, the
                        one of following scenarios applies: 1. ` + "`" + `chePostgresUser` + "`" + ` and
                        ` + "`" + `chePostgresPassword` + "`" + ` are defined, then they will be used
                        to connect to the DB. 2. ` + "`" + `chePostgresUser` + "`" + ` or ` + "`" + `chePostgresPassword` + "`" + `
                        are not defined, then a new secret with the name ` + "`" + `che-postgres-secret` + "`" + `
                        will be created with default value of ` + "`" + `pgche` + "`" + ` for ` + "`" + `user` + "`" + ` and
                        with an auto-generated value for ` + "`" + `password` + "`" + `.'
                      type: string
                    chePostgresUser:
                      description: PostgreSQL user that the Che server uses to connect
                        to the DB. Defaults to ` + "`" + `pgche` + "`" + `.
                      type: string
                    externalDb:
                      description: 'Instructs the Operator on whether to deploy a
                        dedicated database. By default, a dedicated PostgreSQL database
                        is deployed as part of the Che installation. When ` + "`" + `externalDb` + "`" + `
                        is ` + "`" + `true` + "`" + `, no dedicated database will be deployed by the Operator
                        and you will need to provide connection details to the external
                        DB you are about to use. See also all the fields starting
                        with: ` + "`" + `chePostgres` + "`" + `.'
                      type: boolean
                    postgresImage:
                      description: Overrides the container image used in the PostgreSQL
                        database deployment. This includes the image tag. Omit it
                        or leave it empty to use the default container image provided
                        by the Operator.
                      type: string
                    postgresImagePullPolicy:
                      description: Overrides the image pull policy used in the PostgreSQL
                        database deployment. Default value is ` + "`" + `Always` + "`" + ` for ` + "`" + `nightly` + "`" + `
                        or ` + "`" + `latest` + "`" + ` images, and ` + "`" + `IfNotPresent` + "`" + ` in other cases.
                      type: string
                  type: object
                devWorkspace:
                  description: Dev Workspace operator configuration
                  properties:
                    controllerImage:
                      description: Overrides the container image used in the DevWorkspace
                        controller deployment. This includes the image tag. Omit it
                        or leave it empty to use the default container image provided
                        by the Operator.
                      type: string
                    enable:
                      description: Deploys the DevWorkspace Operator in the cluster.
                        Does nothing when a matching version of the Operator is already
                        installed. Fails when a non-matching version of the Operator
                        is already installed.
                      type: boolean
                  required:
                    - enable
                  type: object
                imagePuller:
                  description: Kubernetes Image Puller configuration
                  properties:
                    enable:
                      description: "Install and configure the Community Supported\
                        \ Kubernetes Image Puller Operator. When set to ` + "`" + `true` + "`" + ` and\
                        \ no spec is provided, it will create a default KubernetesImagePuller\
                        \ object to be managed by the Operator. When set to ` + "`" + `false` + "`" + `,\
                        \ the KubernetesImagePuller object will be deleted, and the\
                        \ Operator will be uninstalled, regardless of whether a spec\
                        \ is provided. Note that while this the Operator and its behavior\
                        \ is community-supported, its payload may be commercially-supported\
                        \ for pulling commercially-supported images."
                      type: boolean
                    spec:
                      description: A KubernetesImagePullerSpec to configure the image
                        puller in the CheCluster
                      properties:
                        cachingCPULimit:
                          type: string
                        cachingCPURequest:
                          type: string
                        cachingIntervalHours:
                          type: string
                        cachingMemoryLimit:
                          type: string
                        cachingMemoryRequest:
                          type: string
                        configMapName:
                          type: string
                        daemonsetName:
                          type: string
                        deploymentName:
                          type: string
                        images:
                          type: string
                        nodeSelector:
                          type: string
                      type: object
                  required:
                    - enable
                  type: object
                k8s:
                  description: Configuration settings specific to Che installations
                    made on upstream Kubernetes.
                  properties:
                    ingressClass:
                      description: 'Ingress class that will define the which controller
                        will manage ingresses. Defaults to ` + "`" + `nginx` + "`" + `. NB: This drives
                        the ` + "`" + `kubernetes.io/ingress.class` + "`" + ` annotation on Che-related
                        ingresses.'
                      type: string
                    ingressDomain:
                      description: 'Global ingress domain for a Kubernetes cluster.
                        This MUST be explicitly specified: there are no defaults.'
                      type: string
                    ingressStrategy:
                      description: 'Strategy for ingress creation. Options are: ` + "`" + `multi-host` + "`" + `
                        (host is explicitly provided in ingress), ` + "`" + `single-host` + "`" + ` (host
                        is provided, path-based rules) and ` + "`" + `default-host` + "`" + ` (no host
                        is provided, path-based rules). Defaults to ` + "`" + `multi-host` + "`" + ` Deprecated
                        in favor of ` + "`" + `serverExposureStrategy` + "`" + ` in the ` + "`" + `server` + "`" + ` section,
                        which defines this regardless of the cluster type. When both
                        are defined, the ` + "`" + `serverExposureStrategy` + "`" + ` option takes precedence.'
                      type: string
                    securityContextFsGroup:
                      description: The FSGroup in which the Che Pod and workspace
                        Pods containers runs in. Default value is ` + "`" + `1724` + "`" + `.
                      type: string
                    securityContextRunAsUser:
                      description: ID of the user the Che Pod and workspace Pods containers
                        run as. Default value is ` + "`" + `1724` + "`" + `.
                      type: string
                    singleHostExposureType:
                      description: When the serverExposureStrategy is set to ` + "`" + `single-host` + "`" + `,
                        the way the server, registries and workspaces are exposed
                        is further configured by this property. The possible values
                        are ` + "`" + `native` + "`" + `, which means that the server and workspaces are
                        exposed using ingresses on K8s or ` + "`" + `gateway` + "`" + ` where the server
                        and workspaces are exposed using a custom gateway based on
                        link:https://doc.traefik.io/traefik/[Traefik]. All the endpoints
                        whether backed by the ingress or gateway ` + "`" + `route` + "`" + ` always point
                        to the subpaths on the same domain. Defaults to ` + "`" + `native` + "`" + `.
                      type: string
                    tlsSecretName:
                      description: Name of a secret that will be used to setup ingress
                        TLS termination when TLS is enabled. When the field is empty
                        string, the default cluster certificate will be used. See
                        also the ` + "`" + `tlsSupport` + "`" + ` field.
                      type: string
                  type: object
                metrics:
                  description: Configuration settings related to the metrics collection
                    used by the Che installation.
                  properties:
                    enable:
                      description: Enables ` + "`" + `metrics` + "`" + ` the Che server endpoint. Default
                        to ` + "`" + `true` + "`" + `.
                      type: boolean
                  type: object
                server:
                  description: General configuration settings related to the Che server
                    and the plugin and devfile registries
                  properties:
                    airGapContainerRegistryHostname:
                      description: Optional host name, or URL, to an alternate container
                        registry to pull images from. This value overrides the container
                        registry host name defined in all the default container images
                        involved in a Che deployment. This is particularly useful
                        to install Che in a restricted environment.
                      type: string
                    airGapContainerRegistryOrganization:
                      description: Optional repository name of an alternate container
                        registry to pull images from. This value overrides the container
                        registry organization defined in all the default container
                        images involved in a Che deployment. This is particularly
                        useful to install Eclipse Che in a restricted environment.
                      type: string
                    allowUserDefinedWorkspaceNamespaces:
                      description: Deprecated. The value of this flag is ignored.
                        Defines that a user is allowed to specify a Kubernetes namespace,
                        or an OpenShift project, which differs from the default. It's
                        NOT RECOMMENDED to set to ` + "`" + `true` + "`" + ` without OpenShift OAuth configured.
                        The OpenShift infrastructure also uses this property.
                      type: boolean
                    cheClusterRoles:
                      description: A comma-separated list of ClusterRoles that will
                        be assigned to Che ServiceAccount. Be aware that the Che Operator
                        has to already have all permissions in these ClusterRoles
                        to grant them.
                      type: string
                    cheDebug:
                      description: Enables the debug mode for Che server. Defaults
                        to ` + "`" + `false` + "`" + `.
                      type: string
                    cheFlavor:
                      description: Specifies a variation of the installation. The
                        options are ` + "`" + `che` + "`" + ` for upstream Che installations, or ` + "`" + `codeready` + "`" + `
                        for link:https://developers.redhat.com/products/codeready-workspaces/overview[CodeReady
                        Workspaces] installation. Override the default value only
                        on necessary occasions.
                      type: string
                    cheHost:
                      description: Public host name of the installed Che server. When
                        value is omitted, the value it will be automatically set by
                        the Operator. See the ` + "`" + `cheHostTLSSecret` + "`" + ` field.
                      type: string
                    cheHostTLSSecret:
                      description: Name of a secret containing certificates to secure
                        ingress or route for the custom host name of the installed
                        Che server. See the ` + "`" + `cheHost` + "`" + ` field.
                      type: string
                    cheImage:
                      description: Overrides the container image used in Che deployment.
                        This does NOT include the container image tag. Omit it or
                        leave it empty to use the default container image provided
                        by the Operator.
                      type: string
                    cheImagePullPolicy:
                      description: Overrides the image pull policy used in Che deployment.
                        Default value is ` + "`" + `Always` + "`" + ` for ` + "`" + `nightly` + "`" + ` or ` + "`" + `latest` + "`" + ` images,
                        and ` + "`" + `IfNotPresent` + "`" + ` in other cases.
                      type: string
                    cheImageTag:
                      description: Overrides the tag of the container image used in
                        Che deployment. Omit it or leave it empty to use the default
                        image tag provided by the Operator.
                      type: string
                    cheLogLevel:
                      description: 'Log level for the Che server: ` + "`" + `INFO` + "`" + ` or ` + "`" + `DEBUG` + "`" + `.
                        Defaults to ` + "`" + `INFO` + "`" + `.'
                      type: string
                    cheServerIngress:
                      description: The Che server ingress custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    cheServerRoute:
                      description: The Che server route custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        domain:
                          description: 'Operator uses the domain to generate a hostname
                            for a route. In a conjunction with labels it creates a
                            route, which is served by a non-default Ingress controller.
                            The generated host name will follow this pattern: ` + "`" + `<route-name>-<route-namespace>.<domain>` + "`" + `.'
                          type: string
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    cheWorkspaceClusterRole:
                      description: Custom cluster role bound to the user for the Che
                        workspaces. The default roles are used when omitted or left
                        blank.
                      type: string
                    customCheProperties:
                      additionalProperties:
                        type: string
                      description: Map of additional environment variables that will
                        be applied in the generated ` + "`" + `che` + "`" + ` ConfigMap to be used by
                        the Che server, in addition to the values already generated
                        from other fields of the ` + "`" + `CheCluster` + "`" + ` custom resource (CR).
                        When ` + "`" + `customCheProperties` + "`" + ` contains a property that would
                        be normally generated in ` + "`" + `che` + "`" + ` ConfigMap from other CR fields,
                        the value defined in the ` + "`" + `customCheProperties` + "`" + ` is used instead.
                      type: object
                    dashboardCpuLimit:
                      description: Overrides the CPU limit used in the dashboard deployment.
                        In cores. (500m = .5 cores). Default to 500m.
                      type: string
                    dashboardCpuRequest:
                      description: Overrides the CPU request used in the dashboard
                        deployment. In cores. (500m = .5 cores). Default to 100m.
                      type: string
                    dashboardImage:
                      description: Overrides the container image used in the dashboard
                        deployment. This includes the image tag. Omit it or leave
                        it empty to use the default container image provided by the
                        Operator.
                      type: string
                    dashboardImagePullPolicy:
                      description: Overrides the image pull policy used in the dashboard
                        deployment. Default value is ` + "`" + `Always` + "`" + ` for ` + "`" + `nightly` + "`" + ` or ` + "`" + `latest` + "`" + `
                        images, and ` + "`" + `IfNotPresent` + "`" + ` in other cases.
                      type: string
                    dashboardIngress:
                      description: Dashboard ingress custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    dashboardMemoryLimit:
                      description: Overrides the memory limit used in the dashboard
                        deployment. Defaults to 256Mi.
                      type: string
                    dashboardMemoryRequest:
                      description: Overrides the memory request used in the dashboard
                        deployment. Defaults to 16Mi.
                      type: string
                    dashboardRoute:
                      description: Dashboard route custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        domain:
                          description: 'Operator uses the domain to generate a hostname
                            for a route. In a conjunction with labels it creates a
                            route, which is served by a non-default Ingress controller.
                            The generated host name will follow this pattern: ` + "`" + `<route-name>-<route-namespace>.<domain>` + "`" + `.'
                          type: string
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    devfileRegistryCpuLimit:
                      description: Overrides the CPU limit used in the devfile registry
                        deployment. In cores. (500m = .5 cores). Default to 500m.
                      type: string
                    devfileRegistryCpuRequest:
                      description: Overrides the CPU request used in the devfile registry
                        deployment. In cores. (500m = .5 cores). Default to 100m.
                      type: string
                    devfileRegistryImage:
                      description: Overrides the container image used in the devfile
                        registry deployment. This includes the image tag. Omit it
                        or leave it empty to use the default container image provided
                        by the Operator.
                      type: string
                    devfileRegistryIngress:
                      description: The devfile registry ingress custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    devfileRegistryMemoryLimit:
                      description: Overrides the memory limit used in the devfile
                        registry deployment. Defaults to 256Mi.
                      type: string
                    devfileRegistryMemoryRequest:
                      description: Overrides the memory request used in the devfile
                        registry deployment. Defaults to 16Mi.
                      type: string
                    devfileRegistryPullPolicy:
                      description: Overrides the image pull policy used in the devfile
                        registry deployment. Default value is ` + "`" + `Always` + "`" + ` for ` + "`" + `nightly` + "`" + `
                        or ` + "`" + `latest` + "`" + ` images, and ` + "`" + `IfNotPresent` + "`" + ` in other cases.
                      type: string
                    devfileRegistryRoute:
                      description: The devfile registry route custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        domain:
                          description: 'Operator uses the domain to generate a hostname
                            for a route. In a conjunction with labels it creates a
                            route, which is served by a non-default Ingress controller.
                            The generated host name will follow this pattern: ` + "`" + `<route-name>-<route-namespace>.<domain>` + "`" + `.'
                          type: string
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    devfileRegistryUrl:
                      description: Deprecated in favor of ` + "`" + `externalDevfileRegistries` + "`" + `
                        fields.
                      type: string
                    externalDevfileRegistries:
                      description: External devfile registries, that serves sample,
                        ready-to-use devfiles. Configure this in addition to a dedicated
                        devfile registry (when ` + "`" + `externalDevfileRegistry` + "`" + ` is ` + "`" + `false` + "`" + `)
                        or instead of it (when ` + "`" + `externalDevfileRegistry` + "`" + ` is ` + "`" + `true` + "`" + `)
                      items:
                        description: Settings for a configuration of the external
                          devfile registries.
                        properties:
                          url:
                            description: Public URL of the devfile registry.
                            type: string
                        type: object
                      type: array
                    externalDevfileRegistry:
                      description: Instructs the Operator on whether to deploy a dedicated
                        devfile registry server. By default, a dedicated devfile registry
                        server is started. When ` + "`" + `externalDevfileRegistry` + "`" + ` is ` + "`" + `true` + "`" + `,
                        no such dedicated server will be started by the Operator and
                        configure at least one devfile registry with ` + "`" + `externalDevfileRegistries` + "`" + `
                        field.
                      type: boolean
                    externalPluginRegistry:
                      description: Instructs the Operator on whether to deploy a dedicated
                        plugin registry server. By default, a dedicated plugin registry
                        server is started. When ` + "`" + `externalPluginRegistry` + "`" + ` is ` + "`" + `true` + "`" + `,
                        no such dedicated server will be started by the Operator and
                        you will have to manually set the ` + "`" + `pluginRegistryUrl` + "`" + ` field.
                      type: boolean
                    gitSelfSignedCert:
                      description: When enabled, the certificate from ` + "`" + `che-git-self-signed-cert` + "`" + `
                        ConfigMap will be propagated to the Che components and provide
                        particular configuration for Git.
                      type: boolean
                    nonProxyHosts:
                      description: 'List of hosts that will be reached directly, bypassing
                        the proxy. Specify wild card domain use the following form
                        ` + "`" + `.<DOMAIN>` + "`" + ` and ` + "`" + `|` + "`" + ` as delimiter, for example: ` + "`" + `localhost|.my.host.com|123.42.12.32` + "`" + `
                        Only use when configuring a proxy is required. Operator respects
                        OpenShift cluster wide proxy configuration and no additional
                        configuration is required, but defining ` + "`" + `nonProxyHosts` + "`" + ` in
                        a custom resource leads to merging non proxy hosts lists from
                        the cluster proxy configuration and ones defined in the custom
                        resources. See the doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html.
                        See also the ` + "`" + `proxyURL` + "`" + ` fields.'
                      type: string
                    pluginRegistryCpuLimit:
                      description: Overrides the CPU limit used in the plugin registry
                        deployment. In cores. (500m = .5 cores). Default to 500m.
                      type: string
                    pluginRegistryCpuRequest:
                      description: Overrides the CPU request used in the plugin registry
                        deployment. In cores. (500m = .5 cores). Default to 100m.
                      type: string
                    pluginRegistryImage:
                      description: Overrides the container image used in the plugin
                        registry deployment. This includes the image tag. Omit it
                        or leave it empty to use the default container image provided
                        by the Operator.
                      type: string
                    pluginRegistryIngress:
                      description: Plugin registry ingress custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    pluginRegistryMemoryLimit:
                      description: Overrides the memory limit used in the plugin registry
                        deployment. Defaults to 256Mi.
                      type: string
                    pluginRegistryMemoryRequest:
                      description: Overrides the memory request used in the plugin
                        registry deployment. Defaults to 16Mi.
                      type: string
                    pluginRegistryPullPolicy:
                      description: Overrides the image pull policy used in the plugin
                        registry deployment. Default value is ` + "`" + `Always` + "`" + ` for ` + "`" + `nightly` + "`" + `
                        or ` + "`" + `latest` + "`" + ` images, and ` + "`" + `IfNotPresent` + "`" + ` in other cases.
                      type: string
                    pluginRegistryRoute:
                      description: Plugin registry route custom settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Unstructured key value map stored with a resource
                            that may be set by external tools to store and retrieve
                            arbitrary metadata.
                          type: object
                        domain:
                          description: 'Operator uses the domain to generate a hostname
                            for a route. In a conjunction with labels it creates a
                            route, which is served by a non-default Ingress controller.
                            The generated host name will follow this pattern: ` + "`" + `<route-name>-<route-namespace>.<domain>` + "`" + `.'
                          type: string
                        labels:
                          description: Comma separated list of labels that can be
                            used to organize and categorize objects by scoping and
                            selecting.
                          type: string
                      type: object
                    pluginRegistryUrl:
                      description: Public URL of the plugin registry that serves sample
                        ready-to-use devfiles. Set this ONLY when a use of an external
                        devfile registry is needed. See the ` + "`" + `externalPluginRegistry` + "`" + `
                        field. By default, this will be automatically calculated by
                        the Operator.
                      type: string
                    proxyPassword:
                      description: Password of the proxy server. Only use when proxy
                        configuration is required. See the ` + "`" + `proxyURL` + "`" + `, ` + "`" + `proxyUser` + "`" + `
                        and ` + "`" + `proxySecret` + "`" + ` fields.
                      type: string
                    proxyPort:
                      description: Port of the proxy server. Only use when configuring
                        a proxy is required. See also the ` + "`" + `proxyURL` + "`" + ` and ` + "`" + `nonProxyHosts` + "`" + `
                        fields.
                      type: string
                    proxySecret:
                      description: The secret that contains ` + "`" + `user` + "`" + ` and ` + "`" + `password` + "`" + `
                        for a proxy server. When the secret is defined, the ` + "`" + `proxyUser` + "`" + `
                        and ` + "`" + `proxyPassword` + "`" + ` are ignored.
                      type: string
                    proxyURL:
                      description: URL (protocol+host name) of the proxy server. This
                        drives the appropriate changes in the ` + "`" + `JAVA_OPTS` + "`" + ` and ` + "`" + `https(s)_proxy` + "`" + `
                        variables in the Che server and workspaces containers. Only
                        use when configuring a proxy is required. Operator respects
                        OpenShift cluster wide proxy configuration and no additional
                        configuration is required, but defining ` + "`" + `proxyUrl` + "`" + ` in a custom
                        resource leads to overrides the cluster proxy configuration
                        with fields ` + "`" + `proxyUrl` + "`" + `, ` + "`" + `proxyPort` + "`" + `, ` + "`" + `proxyUser` + "`" + ` and ` + "`" + `proxyPassword` + "`" + `
                        from the custom resource. See the doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html.
                        See also the ` + "`" + `proxyPort` + "`" + ` and ` + "`" + `nonProxyHosts` + "`" + ` fields.
                      type: string
                    proxyUser:
                      description: User name of the proxy server. Only use when configuring
                        a proxy is required. See also the ` + "`" + `proxyURL` + "`" + `, ` + "`" + `proxyPassword` + "`" + `
                        and ` + "`" + `proxySecret` + "`" + ` fields.
                      type: string
                    selfSignedCert:
                      description: Deprecated. The value of this flag is ignored.
                        The Che Operator will automatically detect whether the router
                        certificate is self-signed and propagate it to other components,
                        such as the Che server.
                      type: boolean
                    serverCpuLimit:
                      description: Overrides the CPU limit used in the Che server
                        deployment In cores. (500m = .5 cores). Default to 1.
                      type: string
                    serverCpuRequest:
                      description: Overrides the CPU request used in the Che server
                        deployment In cores. (500m = .5 cores). Default to 100m.
                      type: string
                    serverExposureStrategy:
                      description: Sets the server and workspaces exposure type. Possible
                        values are ` + "`" + `multi-host` + "`" + `, ` + "`" + `single-host` + "`" + `, ` + "`" + `default-host` + "`" + `. Defaults
                        to ` + "`" + `multi-host` + "`" + `, which creates a separate ingress, or OpenShift
                        routes, for every required endpoint. ` + "`" + `single-host` + "`" + ` makes Che
                        exposed on a single host name with workspaces exposed on subpaths.
                        Read the docs to learn about the limitations of this approach.
                        Also consult the ` + "`" + `singleHostExposureType` + "`" + ` property to further
                        configure how the Operator and the Che server make that happen
                        on Kubernetes. ` + "`" + `default-host` + "`" + ` exposes the Che server on the
                        host of the cluster. Read the docs to learn about the limitations
                        of this approach.
                      type: string
                    serverMemoryLimit:
                      description: Overrides the memory limit used in the Che server
                        deployment. Defaults to 1Gi.
                      type: string
                    serverMemoryRequest:
                      description: Overrides the memory request used in the Che server
                        deployment. Defaults to 512Mi.
                      type: string
                    serverTrustStoreConfigMapName:
                      description: Name of the ConfigMap with public certificates
                        to add to Java trust store of the Che server. This is often
                        required when adding the OpenShift OAuth provider, which has
                        HTTPS endpoint signed with self-signed cert. The Che server
                        must be aware of its CA cert to be able to request it. This
                        is disabled by default.
                      type: string
                    singleHostGatewayConfigMapLabels:
                      additionalProperties:
                        type: string
                      description: The labels that need to be present in the ConfigMaps
                        representing the gateway configuration.
                      type: object
                    singleHostGatewayConfigSidecarImage:
                      description: The image used for the gateway sidecar that provides
                        configuration to the gateway. Omit it or leave it empty to
                        use the default container image provided by the Operator.
                      type: string
                    singleHostGatewayImage:
                      description: The image used for the gateway in the single host
                        mode. Omit it or leave it empty to use the default container
                        image provided by the Operator.
                      type: string
                    tlsSupport:
                      description: Deprecated. Instructs the Operator to deploy Che
                        in TLS mode. This is enabled by default. Disabling TLS sometimes
                        cause malfunction of some Che components.
                      type: boolean
                    useInternalClusterSVCNames:
                      description: Use internal cluster SVC names to communicate between
                        components to speed up the traffic and avoid proxy issues.
                        The default value is ` + "`" + `true` + "`" + `.
                      type: boolean
                    workspaceNamespaceDefault:
                      description: Defines Kubernetes default namespace in which user's
                        workspaces are created for a case when a user does not override
                        it. It's possible to use ` + "`" + `<username>` + "`" + `, ` + "`" + `<userid>` + "`" + ` and ` + "`" + `<workspaceid>` + "`" + `
                        placeholders, such as che-workspace-<username>. In that case,
                        a new namespace will be created for each user or workspace.
                      type: string
                  type: object
                storage:
                  description: Configuration settings related to the persistent storage
                    used by the Che installation.
                  properties:
                    postgresPVCStorageClassName:
                      description: Storage class for the Persistent Volume Claim dedicated
                        to the PostgreSQL database. When omitted or left blank, a
                        default storage class is used.
                      type: string
                    preCreateSubPaths:
                      description: Instructs the Che server to start a special Pod
                        to pre-create a sub-path in the Persistent Volumes. Defaults
                        to ` + "`" + `false` + "`" + `, however it will need to enable it according to
                        the configuration of your Kubernetes cluster.
                      type: boolean
                    pvcClaimSize:
                      description: Size of the persistent volume claim for workspaces.
                        Defaults to ` + "`" + `1Gi` + "`" + `.
                      type: string
                    pvcJobsImage:
                      description: Overrides the container image used to create sub-paths
                        in the Persistent Volumes. This includes the image tag. Omit
                        it or leave it empty to use the default container image provided
                        by the Operator. See also the ` + "`" + `preCreateSubPaths` + "`" + ` field.
                      type: string
                    pvcStrategy:
                      description: Persistent volume claim strategy for the Che server.
                        This Can be:` + "`" + `common` + "`" + ` (all workspaces PVCs in one volume),
                        ` + "`" + `per-workspace` + "`" + ` (one PVC per workspace for all declared volumes)
                        and ` + "`" + `unique` + "`" + ` (one PVC per declared volume). Defaults to ` + "`" + `common` + "`" + `.
                      type: string
                    workspacePVCStorageClassName:
                      description: Storage class for the Persistent Volume Claims
                        dedicated to the Che workspaces. When omitted or left blank,
                        a default storage class is used.
                      type: string
                  type: object
              type: object
            status:
              description: CheClusterStatus defines the observed state of Che installation
              properties:
                cheClusterRunning:
                  description: Status of a Che installation. Can be ` + "`" + `Available` + "`" + `, ` + "`" + `Unavailable` + "`" + `,
                    or ` + "`" + `Available, Rolling Update in Progress` + "`" + `.
                  type: string
                cheURL:
                  description: Public URL to the Che server.
                  type: string
                cheVersion:
                  description: Current installed Che version.
                  type: string
                dbProvisioned:
                  description: Indicates that a PostgreSQL instance has been correctly
                    provisioned or not.
                  type: boolean
                devfileRegistryURL:
                  description: Public URL to the devfile registry.
                  type: string
                devworkspaceStatus:
                  description: The status of the Devworkspace subsystem
                  properties:
                    gatewayHost:
                      description: GatewayHost is the resolved host of the ingress/route.
                        This is equal to the Host in the spec on Kubernetes but contains
                        the actual host name of the route if Host is unspecified on
                        OpenShift.
                      type: string
                    gatewayPhase:
                      description: GatewayPhase specifies the phase in which the gateway
                        deployment currently is. If the gateway is disabled, the phase
                        is "Inactive".
                      type: string
                    message:
                      description: Message contains further human-readable info for
                        why the Che cluster is in the phase it currently is.
                      type: string
                    phase:
                      description: Phase is the phase in which the Che cluster as
                        a whole finds itself in.
                      type: string
                    reason:
                      description: A brief CamelCase message indicating details about
                        why the Che cluster is in this state.
                      type: string
                    workspaceBaseDomain:
                      description: The resolved workspace base domain. This is either
                        the copy of the explicitly defined property of the same name
                        in the spec or, if it is undefined in the spec and we're running
                        on OpenShift, the automatically resolved basedomain for routes.
                      type: string
                  type: object
                gitHubOAuthProvisioned:
                  description: Indicates whether an Identity Provider instance, Keycloak
                    or RH-SSO, has been configured to integrate with the GitHub OAuth.
                  type: boolean
                helpLink:
                  description: A URL that points to some URL where to find help related
                    to the current Operator status.
                  type: string
                keycloakProvisioned:
                  description: Indicates whether an Identity Provider instance, Keycloak
                    or RH-SSO, has been provisioned with realm, client and user.
                  type: boolean
                keycloakURL:
                  description: Public URL to the Identity Provider server, Keycloak
                    or RH-SSO,.
                  type: string
                message:
                  description: A human readable message indicating details about why
                    the Pod is in this condition.
                  type: string
                openShiftOAuthUserCredentialsSecret:
                  description: OpenShift OAuth secret in ` + "`" + `openshift-config` + "`" + ` namespace
                    that contains user credentials for HTPasswd identity provider.
                  type: string
                openShiftoAuthProvisioned:
                  description: Indicates whether an Identity Provider instance, Keycloak
                    or RH-SSO, has been configured to integrate with the OpenShift
                    OAuth.
                  type: boolean
                pluginRegistryURL:
                  description: Public URL to the plugin registry.
                  type: string
                reason:
                  description: A brief CamelCase message indicating details about
                    why the Pod is in this state.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
`)

func testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYaml, nil
}

func testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/eclipse-che/7.32.2/checlusters.org.eclipse.che.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "org.eclipse.che/v1",
          "kind": "CheCluster",
          "metadata": {
            "name": "eclipse-che"
          },
          "spec": {
            "auth": {
              "externalIdentityProvider": false,
              "identityProviderAdminUserName": "",
              "identityProviderClientId": "",
              "identityProviderPassword": "",
              "identityProviderRealm": "",
              "identityProviderURL": "",
              "initialOpenShiftOAuthUser": true,
              "oAuthClientName": "",
              "oAuthSecret": ""
            },
            "database": {
              "chePostgresDb": "",
              "chePostgresHostName": "",
              "chePostgresPassword": "",
              "chePostgresPort": "",
              "chePostgresUser": "",
              "externalDb": false
            },
            "devWorkspace": {
              "enable": false
            },
            "metrics": {
              "enable": true
            },
            "server": {
              "allowUserDefinedWorkspaceNamespaces": false,
              "cheClusterRoles": "",
              "cheFlavor": "",
              "cheWorkspaceClusterRole": "",
              "gitSelfSignedCert": false,
              "nonProxyHosts": "",
              "proxyPassword": "",
              "proxyPort": "",
              "proxyURL": "",
              "proxyUser": "",
              "serverExposureStrategy": "",
              "serverTrustStoreConfigMapName": "",
              "tlsSupport": true,
              "useInternalClusterSVCNames": true,
              "workspaceNamespaceDefault": "<username>-che"
            },
            "storage": {
              "postgresPVCStorageClassName": "",
              "preCreateSubPaths": true,
              "pvcClaimSize": "10Gi",
              "pvcStrategy": "common",
              "workspacePVCStorageClassName": ""
            }
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Developer Tools, OpenShift Optional
    certified: "false"
    containerImage: quay.io/eclipse/che-operator@sha256:03c59c6f668194bcb08b61c3a4ed4e9e1effa66b5c01ac1c3dae5fe1363a5d58
    createdAt: "2021-06-30T16:07:03Z"
    description: A Kube-native development solution that delivers portable and collaborative
      developer workspaces in OpenShift.
    operatorframework.io/suggested-namespace: eclipse-che
    repository: https://github.com/eclipse-che/che-operator
    support: Eclipse Foundation
  name: eclipse-che.v7.32.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: The ` + "`" + `CheCluster` + "`" + ` custom resource allows defining and managing
          a Che server installation
        displayName: Eclipse Che Cluster
        kind: CheCluster
        name: checlusters.org.eclipse.che
        statusDescriptors:
          - description: Status of a Che installation. Can be ` + "`" + `Available` + "`" + `, ` + "`" + `Unavailable` + "`" + `,
              or ` + "`" + `Available, Rolling Update in Progress` + "`" + `.
            displayName: Status
            path: cheClusterRunning
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes.phase
          - description: Public URL to the Che server.
            displayName: Eclipse Che URL
            path: cheURL
            x-descriptors:
              - urn:alm:descriptor:org.w3:link
          - description: Current installed Che version.
            displayName: 'displayName: Eclipse Che version'
            path: cheVersion
            x-descriptors:
              - urn:alm:descriptor:org.w3:link
          - description: Public URL to the devfile registry.
            displayName: Devfile registry URL
            path: devfileRegistryURL
            x-descriptors:
              - urn:alm:descriptor:org.w3:link
          - description: A URL that points to some URL where to find help related
              to the current Operator status.
            displayName: Help link
            path: helpLink
            x-descriptors:
              - urn:alm:descriptor:org.w3:link
          - description: Public URL to the Identity Provider server, Keycloak or RH-SSO,.
            displayName: Keycloak Admin Console URL
            path: keycloakURL
            x-descriptors:
              - urn:alm:descriptor:org.w3:link
          - description: A human readable message indicating details about why the
              Pod is in this condition.
            displayName: Message
            path: message
            x-descriptors:
              - urn:alm:descriptor:text
          - description: OpenShift OAuth secret in ` + "`" + `openshift-config` + "`" + ` namespace that
              contains user credentials for HTPasswd identity provider.
            displayName: OpenShift OAuth secret in ` + "`" + `openshift-config` + "`" + ` namespace that
              contains user credentials for HTPasswd identity provider.
            path: openShiftOAuthUserCredentialsSecret
            x-descriptors:
              - urn:alm:descriptor:text
          - description: Public URL to the plugin registry.
            displayName: Plugin registry URL
            path: pluginRegistryURL
            x-descriptors:
              - urn:alm:descriptor:org.w3:link
          - description: A brief CamelCase message indicating details about why the
              Pod is in this state.
            displayName: Reason
            path: reason
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes.phase:reason
              - urn:alm:descriptor:text
        version: v1
  description: |
    A collaborative Kubernetes-native development solution that delivers OpenShift workspaces and in-browser IDE for rapid cloud application development.
    This operator installs PostgreSQL, Keycloak, and the Eclipse Che server, as well as configures all three services.

    ## How to Install

    Press the **Install** button, choose the upgrade strategy, and wait for the **Installed** Operator status.

    When the operator is installed, create a new CR of Kind CheCluster (click the **Create New** button).
    The CR spec contains all defaults (see below).

    You can start using Eclipse Che when the CR status is set to **Available**, and you see a URL to Eclipse Che.

    ## Defaults

    By default, the operator deploys Eclipse Che with:

    * Bundled PostgreSQL and Keycloak

    * Per-Workspace PVC strategy

    * Auto-generated passwords

    * TLS mode (secure routes)

    * Regular login extended with OpenShift OAuth authentication

    ## Installation Options

    Eclipse Che operator installation options include:

    * Connection to external database and Keycloak

    * Configuration of default passwords and object names

    * PVC strategy (once shared PVC for all workspaces, PVC per workspace, or PVC per volume)

    * Authentication options

    ### External Database and Keycloak

    To instruct the operator to skip deploying PostgreSQL and Keycloak and connect to an existing DB and Keycloak instead:

    * set respective fields to ` + "`" + `true` + "`" + ` in a custom resource spec

    * provide the operator with connection and authentication details:



      ` + "`" + `externalDb: true` + "`" + `


      ` + "`" + `chePostgresHostname: 'yourPostgresHost'` + "`" + `


      ` + "`" + `chePostgresPort: '5432'` + "`" + `


      ` + "`" + `chePostgresUser: 'myuser'` + "`" + `


      ` + "`" + `chePostgresPassword: 'mypass'` + "`" + `


      ` + "`" + `chePostgresDb: 'mydb'` + "`" + `


      ` + "`" + `externalIdentityProvider: true` + "`" + `


      ` + "`" + `identityProviderURL: 'https://my-keycloak.com'` + "`" + `


      ` + "`" + `identityProviderRealm: 'myrealm'` + "`" + `


      ` + "`" + `identityProviderClientId: 'myClient'` + "`" + `


    #### Self-signed Certificates

    Eclipse Che uses self-signed certificates by default.

    You can also manually create a secret:



    ` + "`" + `` + "`" + `` + "`" + `
    oc create secret generic self-signed-certificate  --from-file=/path/to/certificate/ca.crt -n=$codeReadyNamespace
    ` + "`" + `` + "`" + `` + "`" + `
  displayName: Eclipse Che
  icon:
    - base64data: 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
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - oauth.openshift.io
              resources:
                - oauthclients
              verbs:
                - create
                - get
                - delete
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - config.openshift.io
              resources:
                - oauths
              verbs:
                - get
                - list
                - watch
                - patch
            - apiGroups:
                - config.openshift.io
              resources:
                - infrastructures
                - proxies
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - user.openshift.io
              resources:
                - users
              verbs:
                - list
                - delete
            - apiGroups:
                - user.openshift.io
              resources:
                - identities
              verbs:
                - delete
            - apiGroups:
                - console.openshift.io
              resources:
                - consolelinks
              verbs:
                - get
                - list
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
              verbs:
                - list
                - create
                - watch
                - update
                - get
                - delete
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterroles
              verbs:
                - list
                - create
                - watch
                - update
                - get
                - delete
            - apiGroups:
                - authorization.openshift.io
              resources:
                - roles
              verbs:
                - get
                - create
                - delete
            - apiGroups:
                - authorization.openshift.io
              resources:
                - rolebindings
              verbs:
                - get
                - create
                - update
                - delete
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
              verbs:
                - get
                - create
                - delete
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
              verbs:
                - get
                - create
                - update
                - delete
            - apiGroups:
                - org.eclipse.che
              resources:
                - checlusters
                - checlusters/finalizers
              verbs:
                - '*'
            - apiGroups:
                - project.openshift.io
              resources:
                - projectrequests
              verbs:
                - create
                - update
            - apiGroups:
                - project.openshift.io
              resources:
                - projects
              verbs:
                - get
                - list
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
                - list
                - create
                - update
            - apiGroups:
                - ""
              resources:
                - serviceaccounts
              verbs:
                - get
                - create
                - watch
            - apiGroups:
                - ""
              resources:
                - pods/exec
              verbs:
                - create
            - apiGroups:
                - apps
              resources:
                - secrets
              verbs:
                - list
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - list
                - get
                - create
                - delete
            - apiGroups:
                - ""
              resources:
                - persistentvolumeclaims
              verbs:
                - create
                - get
                - list
                - watch
                - delete
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - list
                - create
                - watch
                - delete
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - get
                - list
                - create
                - patch
                - watch
                - delete
            - apiGroups:
                - ""
              resources:
                - services
              verbs:
                - list
                - create
                - delete
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - create
                - delete
                - list
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - list
                - create
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - watch
            - apiGroups:
                - apps
              resources:
                - replicasets
              verbs:
                - list
                - get
                - patch
                - delete
            - apiGroups:
                - extensions
              resources:
                - ingresses
              verbs:
                - list
                - create
                - watch
                - get
                - delete
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - get
                - create
                - update
            - apiGroups:
                - operators.coreos.com
              resources:
                - subscriptions
              verbs:
                - get
            - apiGroups:
                - workspace.devfile.io
              resources:
                - devworkspaces
                - devworkspacetemplates
              verbs:
                - create
                - delete
                - deletecollection
                - patch
                - update
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings
                - components
              verbs:
                - create
                - delete
                - deletecollection
                - patch
                - update
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
            - apiGroups:
                - ""
              resources:
                - configmaps
                - persistentvolumeclaims
                - pods
                - secrets
                - serviceaccounts
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - metrics.k8s.io
              resources:
                - pods
                - nodes
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - batch
                - ""
              resources:
                - pods/exec
              verbs:
                - create
            - apiGroups:
                - ""
              resources:
                - services
              verbs:
                - '*'
            - apiGroups:
                - admissionregistration.k8s.io
              resources:
                - mutatingwebhookconfigurations
                - validatingwebhookconfigurations
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resourceNames:
                - devworkspace-controller
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - apps
                - extensions
              resources:
                - deployments
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - apps
                - extensions
              resources:
                - deployments
                - replicasets
              verbs:
                - '*'
            - apiGroups:
                - apps
                - extensions
              resources:
                - replicasets
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - batch
              resources:
                - jobs
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - controller.devfile.io
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings
              verbs:
                - '*'
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - extensions
              resources:
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - create
                - get
            - apiGroups:
                - oauth.openshift.io
              resources:
                - oauthclients
              verbs:
                - create
                - delete
                - deletecollection
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - clusterroles
                - rolebindings
                - roles
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes/custom-host
              verbs:
                - create
            - apiGroups:
                - workspace.devfile.io
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - workspace.devfile.io
              resources:
                - devworkspaces
                - devworkspacetemplates
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings
                - components
              verbs:
                - get
                - list
                - watch
            - nonResourceURLs:
                - /metrics
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - configmaps/status
              verbs:
                - get
                - update
                - patch
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
            - apiGroups:
                - ""
              resources:
                - configmaps
                - persistentvolumeclaims
                - pods
                - secrets
                - serviceaccounts
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - pods/exec
              verbs:
                - create
            - apiGroups:
                - ""
              resources:
                - services
              verbs:
                - '*'
            - apiGroups:
                - apps
              resourceNames:
                - devworkspace-che-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - apps
                - extensions
              resources:
                - deployments
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - apps
                - extensions
              resources:
                - deployments
                - replicasets
              verbs:
                - '*'
            - apiGroups:
                - apps
                - extensions
              resources:
                - replicasets
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - batch
              resources:
                - jobs
              verbs:
                - create
                - delete
                - get
                - update
                - watch
            - apiGroups:
                - che.eclipse.org
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - che.eclipse.org
              resources:
                - chemanagers
              verbs:
                - '*'
            - apiGroups:
                - che.eclipse.org
              resources:
                - chemanagers/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - che.eclipse.org
              resources:
                - chemanagers/finalizers
              verbs:
                - update
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings
              verbs:
                - '*'
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings/finalizers
              verbs:
                - update
            - apiGroups:
                - controller.devfile.io
              resources:
                - devworkspaceroutings/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - ""
              resources:
                - configmap
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - extensions
              resources:
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - create
                - get
            - apiGroups:
                - oauth.openshift.io
              resources:
                - oauthclients
              verbs:
                - create
                - delete
                - deletecollection
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - clusterroles
                - rolebindings
                - roles
              verbs:
                - create
                - get
                - list
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes/custom-host
              verbs:
                - create
          serviceAccountName: che-operator
      deployments:
        - name: che-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: che-operator
            strategy:
              type: RollingUpdate
            template:
              metadata:
                labels:
                  app: che-operator
                  app.kubernetes.io/component: che-operator
                  app.kubernetes.io/instance: che
                  app.kubernetes.io/managed-by: olm
                  app.kubernetes.io/name: che
              spec:
                containers:
                  - command:
                      - /usr/local/bin/che-operator
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: che-operator
                      - name: CHE_VERSION
                        value: 7.32.2
                      - name: RELATED_IMAGE_che_server
                        value: quay.io/eclipse/che-server@sha256:1582a12aa8c895fd7c5c78dba8d71fc49db7970ec1e79dab9b236e20f47087b7
                      - name: RELATED_IMAGE_dashboard
                        value: quay.io/eclipse/che-dashboard@sha256:28fe113359d64456eace0d40a573a4a7aa277243b9ae54b76f5ac6bc3dfe082f
                      - name: RELATED_IMAGE_plugin_registry
                        value: quay.io/eclipse/che-plugin-registry@sha256:f97201e45c362a48a043f7513dd420ed46be428fa7ec063f1b89971fddac6e43
                      - name: RELATED_IMAGE_devfile_registry
                        value: quay.io/eclipse/che-devfile-registry@sha256:60919b12fcdcfe94865644064079097c1fca209e74763934fae1e9432a6e8451
                      - name: RELATED_IMAGE_pvc_jobs
                        value: registry.access.redhat.com/ubi8-minimal@sha256:fa95fe99ae271240513a91c17fd2869936286eae5c18eded1149a1005f8db383
                      - name: RELATED_IMAGE_postgres
                        value: quay.io/eclipse/che--centos--postgresql-96-centos7@sha256:b681d78125361519180a6ac05242c296f8906c11eab7e207b5ca9a89b6344392
                      - name: RELATED_IMAGE_keycloak
                        value: quay.io/eclipse/che-keycloak@sha256:fe88b8a6c59b3819258294a290e5d306c3b342895bbb8b149654a2d003f2c211
                      - name: RELATED_IMAGE_che_workspace_plugin_broker_metadata
                        value: quay.io/eclipse/che-plugin-metadata-broker@sha256:df1ea2eadb28dbc97761adf4ea984af5ca941025a67b39c6abe373816a84bba9
                      - name: RELATED_IMAGE_che_workspace_plugin_broker_artifacts
                        value: quay.io/eclipse/che-plugin-artifacts-broker@sha256:4891a6e19be9eae59372f4b31144653f9bd1284e0301ecfe896a099ca6a12b58
                      - name: RELATED_IMAGE_che_server_secure_exposer_jwt_proxy_image
                        value: quay.io/eclipse/che-jwtproxy@sha256:881d1c91e7f5840314f25104ef5c0acee59ed484a5f9ef39daf3008725ea1033
                      - name: RELATED_IMAGE_single_host_gateway
                        value: quay.io/eclipse/che--traefik@sha256:6e6d4dc5a19afe06778ca092cdbbb98e31cb9f9c313edafa23f81a0e6ddf8a23
                      - name: RELATED_IMAGE_single_host_gateway_config_sidecar
                        value: quay.io/che-incubator/configbump@sha256:175ff2ba1bd74429de192c0a9facf39da5699c6da9f151bd461b3dc8624dd532
                      - name: RELATED_IMAGE_devworkspace_che_operator
                        value: quay.io/che-incubator/devworkspace-che-operator@sha256:697343dd56a9dad2f9a5e4215d7fa820dcfb59cc15cb53a5649b154d3bd8e23a
                      - name: RELATED_IMAGE_devworkspace_controller
                        value: quay.io/devfile/devworkspace-controller@sha256:077d48c0f5b849a66161610c9ead556b321f7eb5a3a896a2ee58b0db1387ba6f
                      - name: CHE_FLAVOR
                        value: che
                      - name: CONSOLE_LINK_NAME
                        value: che
                      - name: CONSOLE_LINK_DISPLAY_NAME
                        value: Eclipse Che
                      - name: CONSOLE_LINK_SECTION
                        value: Red Hat Applications
                      - name: CONSOLE_LINK_IMAGE
                        value: /dashboard/assets/branding/loader.svg
                      - name: CHE_IDENTITY_SECRET
                        value: che-identity-secret
                      - name: CHE_IDENTITY_POSTGRES_SECRET
                        value: che-identity-postgres-secret
                      - name: CHE_POSTGRES_SECRET
                        value: che-postgres-secret
                      - name: CHE_SERVER_TRUST_STORE_CONFIGMAP_NAME
                        value: ca-certs
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNDCMNSTEZJTHFTGKZJWMI4WKNDBHBRDIZJYGY4DCMZYGBRWKMRUGYZDMNZUGU4TOYJUHBRDQMLDGEZTCY3CMJTDANJVMRSDKZBQMMZQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:4bce2e39fee6b9e4a8b4e8681380ce2462674597a48b81c131cbbf055dd5d0c3
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUN3DMY3GMMBQMQZWMMTEMFTDANBWG42TMMJYMM2DAODFGA4GMMBRHFTDENLCHEYWKYZQHBSDENZZGA4TIZTEMRRDAMLGGU2TSNJQGJRA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:7cf6f00d3f2daf04675618c408e08f019f25b91ec08d279094fddb01f559502b
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUMTFGJRDGNLGMIZTGYZXHA3TGOBTGY4DIMRXMIYGEMJUME2DMNJZMI3GEMBTGEYTGZBYHA3TINZSMM2DINLBMU3DCNLEHE3TMMLEGM4Q____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:2e2b35fb33c78738368427b0b14a4659b6b03113d887472c445ae615d9761d39
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUYLFGUYTENDFGMYTSODBMM3DSNZXMNQTSNZTMFQWMNBYHA2WCMJUMU4DAMDEGY2DOYZZGZQTEM3EGE2WCMTCGZRGCYTCMU4GMZLGGJQQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:ae5124e3198ac6977ca973aaf4885a14e800d647c96a23d15a2b6babbe8fef2a
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUMTFGQ4WMYLGMI4WCYJWGUYTSZTDGYZTAMJZME3TEYJUGUZDMMRSGJRDMOJQGVSWIMBRMRRTIOBUMMZWKOLGGUYTGMLBMUYDAYRVGQ3A____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:2e49fafb9aa6519fc63019a72a4526222b6905ed01dc484c3e9f5131ae00b546
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNZZGE4WIOJWGVQTON3GGFSWGOJWHFSTANZTMEYWGYZYGY3DQNTGHEZGKOJZMZRTKM3BGBRDAYZYMQZGKYRRGNQWKYJWGFRTMMZUGY3Q____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:7919d965a77f1ec969e073a1cc86686f92e99fc53a0b0c8d2eb13aea61c63467
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUZBVGY2WEOJYMYYTCMDFMZSTIMRUGZTGKMLGGI2WKZJWGJSDONDEG4YGMNDGHE4TSZJUGY3TSZJYMY3TAOBVMYYTQYRRG4YTCZRXGZSA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:d565b98f110efe4246fe1f25ee62d74d70f4f999e4679e8f7085f18b1711f76d
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUOBWGE2WCMRZGQZTKYRQGI2TMYTGMZQWMOBVMFRDEY3GHEZTEN3CGA2TSZRRGRSWCYJWGYYTIMZUGZSGMZBVGFSTGYJWMRSDSZRQGQYQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:8615a29435b0256bffaf85ab2cf9327b059f14eaa6614346dfd51e3a6dd9f041
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNJVG4YDGYLFGVTGCZLCMVSGKZJVGZTGIY3FGM4DOOLGMEZDEOBRMNRTENRQGQ4DQZBYME2DQODGMY3TOZLEGNSDIMDGG43TQZDEMY3Q____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:55703ae5faebedee56fdce3879fa2281cc260488d8a488ff77ed3d40f778ddf7
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNRZHFQTQZTEME3DOYTBMJRWGMLGMFSWIY3GGJSTIYLCGIZGMNTDMYYGGZRWMFSDAODDGQYWGMRZGM4TQM3CHAYTMOJRMM2TSYLFGRSA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:699a8fda67babcc1faedcf2e4ab22f6cf0cf6ad08c41c293983b81691c59ae4d
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUOJXGRSGIMDBGVQWEN3FGA3TKZBXMQZTINDBMYZGKODFGJQTEZRYGBQTANRZMU4GCNLBGRRTSZTGMMZGCNJXMU2DEMLCGYZGCYJRG5QQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:974dd0a5ab7e075d7d344af2e8e2a2f80a069e8a5a4c9ffc2a57e421b62aa17a
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUOBSHE3WMYRRG4ZTEZBYG5SDKNTBGBQWCNDDGY4TCMBVMU3WEY3GGRRDKMBQMU2DAYTCGE3DINBWMQ3DEOBWMMYDOYRYHA2GKYRXGNSA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:8297fb1732d87d56a0aa4c69105e7bcf4b500e40bb16446d6286c07b884eb73d
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUMBZGVRTENBQGU2TAMZTMUZDCOLEGVQTSZRWMZSTSOBTGVRDOOLDGVSDGNBRGZTDAZDGMJRDEMRYMQZDSNJXGEZWKOBRMQZDOYZWGYYQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:095c24055033e219d5a9f6fe9835b79c5d3416f0dfbb228d295713e81d27c661
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNJWMU3TSNRQHA2TOOBYGZQTANLGMM2DKOLFMQ3GKNZTMEYGCMZYGZTDCNBVMEZDINZUMMZDEODDGJRDOY3DMI4TOYJRMQYTQYRUMRTA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:56e7960857886a05fc459ed6e73a0a386f145a2474c228c2b7ccb97a1d18b4df
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUZDCHA3GGOJSGQYTQYRZMY2DAYRSGY2TIYRYMZRTINZTGA3TGNJWHFSTAZDDHBQTAMLEG5QWIYZTGFRTSOJSGVSTKNBWHFSDEYRRGE2A____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:db86c92418b9f40b2654b8fc473073569e0dc8a01d7adc31c9925e5469d2b114
                      - name: RELATED_IMAGE_mta_vscode_extension_plugin_registry_image_IBZWQYJSGU3DUNBVGEZWIMZYGIZDAYZWGVRGINJUHE2DIOBWME4WIMBRG44TEODFHBTDCZRVMUYWCMRVMU3TMYZUGFSDGYRRGI4TOM3FMYYDQODCMI4A____
                        value: quay.io/windupeng/mta-vscode-extension@sha256:4513d38220c65bd5494486a9d017928e8f1f5e1a25e76c41d3b12973ef088bb8
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNJQGJQWEY3GGY2TSOLGMRQWIYLCMVTDEOBZMRRWCZDDGVRTGMTDME3DEMTGMEYDEYRXGNQTOMTCGEYTGY3BGFSTKZJVMIYTOOJTG42Q____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:502abcf6599fdadabef289dcadc5c32ca622fa02b73a72b113ca1e5e5b179375
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUZRTHE4GKM3GMZSDKMRQGBRTKNTCMY2TMYJWMY3WMOLFHBSGENDBMEZWMNRTHFQTMMJSGU4DKMDGGE3DSNBRGQ2TEOBSGYYGIY3FHBQQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:f398e3ffd5200c56bf56a6f7f9e8db4aa3f639a6125850f169414528260dce8a
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUZJTG42GKYZTGY3TINBXMFTGKYJZMIYTEZRVME4GMNRWHEYGCNTGHE4TGNJSGY2DAODBGM3TGMLGGUZDEYJVGNSTKZBQMJTGGMRYG5TA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:e374ec367447afea9b12f5a8f6690a6f993526408a3731f522a53e5d0bfc287f
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUMTDMI2GMNZQMVSGEY3EMFRDGYRSG44WIYLFGUZWENTBG42TGZBWGNTGKZJQGNRGGYLFGNSDEYJTHA2WKMRUMYZDKZJWHE2WGMBTMRTA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:2cb4f70edbcdab3b279dae53b6a753d63fee03bcae3d2a385e24f25e695c03df
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNDGMRRDANBQGI3GGYTFMRSGEZTFGUZTCOBUMFTGGZBWMZRTKY3CGYYTGMTBGIZGEZJVHAYTAYRRGNSDGODBGEZDKYLGMQYDQMZSGIYQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:4fdb04026cbeddbfe53184afcd6fc5cb6132a22be5810b13d38a125afd083221
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNBZGFRTMMTBGNQWGNZXGVSDKNBSGZSDOMTBGU4WCYZRHBRGIZBVGBTDKZRVMQ3DCZBQG5TGEZTCGM2GKMDDMQ3WMZLEGNSDIZDBGIYQ____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:491c62a3ac775d5426d72a59ac18bdd50f5f5d61d07fbfb34e0cd7fed3d4da21
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNJZG5QTGMDDHFRTGZTDG5SGEYTGMI4WKMBYMIYWEYRSGE3TSZBYMVRDANRSMFSDCNBYGQ4DAZTGGMZDIOBZMI2GMMBRMVRTMNZVMY2A____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:597a30c9c3fc7dbbfb9e08b1bb2179d8eb062ad148480ff32489b4f01ec675f4
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUNTEGBRTINBQME3WIYZWGQ4DQMJWMZRWINBYHA2WEOLDMM4DKZRQMVRDAZRTHEYTMNJZMJRDSZTDHBQTSMJSGMYDONLCMVQTONJRGY2Q____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:6d0c440a7dc648816fcd4885b9cc85f0eb0f391659bb9fc8a9123075bea75165
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUOLDGU3WINTGMM4DCYJZHE3WEMDEGZSTSYLDMMZTEZLCGUZGGOLEGIYGIMRWGUZTANBYMRRGCZJQMVSTSYJZME3GKODEMNSWKYZZMQZA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:9c57d6fc81a997b0d6e9acc32eb52c9d20d2653048dbae0ee9a9a6e8dceec9d2
                      - name: RELATED_IMAGE_che_plugin_sidecar_plugin_registry_image_IBZWQYJSGU3DUYTCGQYDIZTGMFQTCMRVGY2WEZLCGEZGENDDMQ4DCNRQMNTGCM3GMYZWKZRTMJSTIMRQGQZTAYJWGU3DEZRRMZSTIOBWGM4WGYTGGFTA____
                        value: quay.io/eclipse/che-plugin-sidecar@sha256:bb404ffaa12565beb12b4cd8160cfa3ff3ef3be420430a6562f1fe48639cbf1f
                      - name: RELATED_IMAGE_che_machine_exec_plugin_registry_image_NZSXQ5A_
                        value: quay.io/eclipse/che-machine-exec@sha256:1b20c764e5a3fc8482a080ec36c2a5797a25dee2437e8509a3a47d6485989fda
                      - name: RELATED_IMAGE_che_theia_plugin_registry_image_IBZWQYJSGU3DUMJVGBQTSM3DGEZTMMTDMJRTMOBTG5STMYLFMVRDMNBUME4TCYJXGBQTKZTCGYZTAMZRMUZDGNJVGJTDAMLEHEZTMYJSMIZTCMTFMQ3Q____
                        value: quay.io/eclipse/che-theia@sha256:150a93c1362cbc6837e6aeeb644a91a70a5fb63031e23552f01d936a2b312ed7
                      - name: RELATED_IMAGE_che_machine_exec_plugin_registry_image_IBZWQYJSGU3DUYJVGQ2TCMZWHFRWINRXMMYTIZDDMRSTIMLBMJSTEYJXMFSDQNBZHFRTCMDEGFTDKMZUGNQTKNZZMQ3TMMBRHBRWMNTDMJSWIN3DMY4Q____
                        value: quay.io/eclipse/che-machine-exec@sha256:a5451369cd67c14dcde41abe2a7ad8499c10d1f5343a579d76018cf6cbed7cf9
                      - name: RELATED_IMAGE_che_theia_endpoint_runtime_binary_plugin_registry_image_IBZWQYJSGU3DUZLEGBRGGMTBGNRDCYJZMNSWMNRXMQ4DIYRQGUZGKZBSGQ4GMZBUHBTGIYZZGNRDGOBUMY4DAYLGHAYDINBWMQ2TENTCMU2GKNBXGUYQ____
                        value: quay.io/eclipse/che-theia-endpoint-runtime-binary@sha256:ed0bc2a3b1a9cef67d84b052ed248fd48fdc93b384f80af80446d526be4e4751
                      - name: RELATED_IMAGE_che_editor_jupyter_plugin_registry_image_IBZWQYJSGU3DUOBTGQZTSYLFHFSWIY3BMEZWCOJXGUZTMNZUGIZTCNLBG44TCMTGHEZWKNBZHFTDIOJYGQ3WIYJQHE2GGNBYGAYDGMLFMFSTIYTBGQ3Q____
                        value: index.docker.io/ksmster/che-editor-jupyter@sha256:83439ae9edcaa3a97536742315a7912f93e499f49847da094c480031eae4ba47
                      - name: RELATED_IMAGE_dirigible_openshift_plugin_registry_image_IBZWQYJSGU3DUMZTGY2TMMZVMQYWKMBUGAZTMOJXMRSWCMBWG42GEYTCMRRTONBZMM2GEZJSMRRDEOJYGE4GCOJTMI4GKMLFGUZWGM3DGUYTINBRGEZQ____
                        value: index.docker.io/dirigiblelabs/dirigible-openshift@sha256:3365635d1e0403697dea0674bbbdc749c4be2db29818a93b8e1e53c3c5144113
                      - name: RELATED_IMAGE_che_editor_intellij_community_plugin_registry_image_IBZWQYJSGU3DUMRZGAZDKZDCHA2TSMRWHBTDKZDDMYZDCYTBGZSWENDFGI4DINZUGRRDKM3DHEZGINTEGIZTKMJUMU2TMNLBGAZDCMJWGA3GMNRYGYZQ____
                        value: quay.io/che-incubator/che-editor-intellij-community@sha256:29025db859268f5dcf21ba6eb4e284744b53c92d6d23514e565a0211606f6863
                      - name: RELATED_IMAGE_eclipse_broadway_plugin_registry_image_IBZWQYJSGU3DUNJXMM4DEY3EHAYDMYJVGZTDMOLBME4DMNRTMY3DQNBQGVSDANZXHBRDMMRYMEZDSYJWGRTGEMJWHA4DCYRRGFRWKOLGGQ4DIZDEME3Q____
                        value: index.docker.io/wsskeleton/eclipse-broadway@sha256:57c82cd806a56f69aa8663f68405d0778b628a29a64fb16881b11ce9f484dda7
                      - name: RELATED_IMAGE_code_server_plugin_registry_image_IBZWQYJSGU3DUZLGGA3TEOBRGAYDIOJQHFRGEMTDGIZDQNBSGJSGMMTFHE4WCNLCME2WKNBVGBTGGZJXGU2DMYRYMZQTCOBWHA2TEZRSGNRGMNRXGUYQ____
                        value: index.docker.io/codercom/code-server@sha256:ef07281004909bb2c228422df2e99a5ba5e450fce7546b8fa186852f23bf6751
                      - name: RELATED_IMAGE_che_buildah_base_plugin_registry_image_IBZWQYJSGU3DUNBRG4ZDAM3EHA3DEOLFMRSDSMTGGE4DOYLGMQZWKYTCGNSDQZDDGI4DGMZYMQZTIOBQHFSWENZVMZTGGMTFGA4GCNBQGBTDQZBVGZRA____
                        value: quay.io/eclipse/che-buildah-base@sha256:417203d8629edd92f187afd3ebb3d8dc28338d34809eb75ffc2e08a400f8d56b
                      - name: RELATED_IMAGE_che_sidecar_workspace_data_sync_plugin_registry_image_IBZWQYJSGU3DUOBYMQYDCMRVHAZTOZBVME2TOY3CGI2GEYRTMVSDQMLFGZQTQZRUGEYTSYJVGA2DGYRXHEZDMYTEGJRGIMBRG4YTAOBVGRRTINDGGEYA____
                        value: quay.io/eclipse/che-sidecar-workspace-data-sync@sha256:88d0125837d5a57cb24bb3ed81e6a8f4119a5043b7926bd2bd01710854c44f10
                      - name: RELATED_IMAGE_che_buildkit_base_plugin_registry_image_IBZWQYJSGU3DUZLGMZQTSODEMQZGGZLEGMYGENJSGBRDENLBMZTGMMLBHA4DAZBRGIYWGZRWMIZWMODBMI2DEYJVGE2DSZLBMRQTINTCME3TSM3DMU4Q____
                        value: quay.io/eclipse/che-buildkit-base@sha256:effa98dd2ced30b520b25afff1a880d121cf6b3f8ab42a5149eada46ba793ce9
                      - name: RELATED_IMAGE_che__centos__mongodb_36_centos7_devfile_registry_image_NRQXIZLTOQWWCOJRGVSGEN3CMVRWCOBXGE4TQZTDMQ3TQNRQGA4DMOJYHFTGKODBGMZDOYJRME2GMNRVGA4DAMRVMI3DIYLCGI4GMY3DG42DEM3CGI______
                        value: quay.io/eclipse/che--centos--mongodb-36-centos7@sha256:a915db7beca87198fcd7860086989fe8a327a1a4f6508025b64ab28fcc7423b2
                      - name: RELATED_IMAGE_che__centos__mysql_57_centos7_devfile_registry_image_NRQXIZLTOQWWKMBYMVSTIZBUGNRDOMZVGY3DANZWHA2WENRZMJSGKNRTGM2WKMRXMNTDEMDDGAZDAZRTGQ2WENTDGZRTKOJUGAYDCOBTHA4DENZWGQ______
                        value: quay.io/eclipse/che--centos--mysql-57-centos7@sha256:e08ee4d43b7356607685b69bde6335e27cf20c020f345b6c6c59400183882764
                      - name: RELATED_IMAGE_che_cpp_rhel7_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-cpp-rhel7@sha256:8182090bbe5f2f0d3d1469dde5e9a6f62d9ba22d297702cc26b88fcf671409b2
                      - name: RELATED_IMAGE_che_dotnet_2_2_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-dotnet-2.2@sha256:61ddb07608a1761b119a3a6388a821ab59db94961857e8df141003d1bd618e4e
                      - name: RELATED_IMAGE_che_dotnet_3_1_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-dotnet-3.1@sha256:a06b17b761c880bc5cf5fef65028303ff684c9b517593e8c71896cdf78eb4fae
                      - name: RELATED_IMAGE_che_golang_1_14_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-golang-1.14@sha256:3d6039fde76a7e09cbc6f4825ed1ad7c2d960eb054b05f7220ecfe55aa75b1e6
                      - name: RELATED_IMAGE_che_java11_gradle_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-java11-gradle@sha256:909215b418f8ff976ed6529cbeef4681e2b663e2bd6f59cc87664e1362404457
                      - name: RELATED_IMAGE_che_java11_maven_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-java11-maven@sha256:e4be1573efd37a8b8da4b34d23dbbe82ae29932de83d7c530a46bc2d958a726c
                      - name: RELATED_IMAGE_che_java8_maven_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-java8-maven@sha256:bcd1d1af6cec19fae9372e984b1664283eca4517ce7a4dec923e4c49c8b7a5d8
                      - name: RELATED_IMAGE_che_nodejs10_community_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-nodejs10-community@sha256:67e6995885568a8d7b183a007ad8baf80a5f06f77d2dc3ae7b6f4fc14d416e58
                      - name: RELATED_IMAGE_che_nodejs10_ubi_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-nodejs10-ubi@sha256:f39fdc871651a9db381477f7671d0fcabf81ff6199cc00b15922b931ba587fa2
                      - name: RELATED_IMAGE_che_nodejs12_community_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-nodejs12-community@sha256:7556742b08597331b0c0b90bff17c7c09f38dcc80b7e3b4dfc7b7e1f91c0308d
                      - name: RELATED_IMAGE_che_nodejs8_centos_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-nodejs8-centos@sha256:70c46725e7868985f0a2b01b99e6d1f00e17831f2149da87d8e41f20d5172224
                      - name: RELATED_IMAGE_che_php_7_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-php-7@sha256:9b4ab7a151283006a983ff20f204d4739e3a9fef7b81bbab7205dbcaac4cab04
                      - name: RELATED_IMAGE_che_python_3_8_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-python-3.8@sha256:d08702c35e09ffe8b87cfd22f312c08ecaae9d1bcdd288ba94bd0d740e9777b7
                      - name: RELATED_IMAGE_che_quarkus_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-quarkus@sha256:ec8c9a17c33c754aac5dd8de80196ca2e9d8161d67f5081a8b54e0a8c3eba7e8
                      - name: RELATED_IMAGE_che_rust_1_39_devfile_registry_image_G4XDGMROGI______
                        value: quay.io/eclipse/che-rust-1.39@sha256:75ed72fe11bf73a0f19cd7f8b8e65ae452fb0516ebdec104af4cc7ab595cb565
                      - name: RELATED_IMAGE_ubi8_minimal_devfile_registry_image_HAXDG___
                        value: registry.access.redhat.com/ubi8-minimal@sha256:2f6b88c037c0503da7704bccd3fc73cb76324101af39ad28f16460e7bce98324
                      - name: RELATED_IMAGE_ubi_minimal_devfile_registry_image_
                        value: registry.access.redhat.com/ubi8/ubi-minimal@sha256:b6b0c30bb747dfacee216e5ae2ad02adb18920d8f744c04f29354278e19df2a9
                    image: quay.io/eclipse/che-operator@sha256:03c59c6f668194bcb08b61c3a4ed4e9e1effa66b5c01ac1c3dae5fe1363a5d58
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      failureThreshold: 10
                      httpGet:
                        path: /healthz
                        port: 6789
                      initialDelaySeconds: 15
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 5
                    name: che-operator
                    ports:
                      - containerPort: 60000
                        name: metrics
                    readinessProbe:
                      exec:
                        command:
                          - stat
                          - /tmp/operator-sdk-ready
                      failureThreshold: 10
                      initialDelaySeconds: 5
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 5
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 100m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                      privileged: false
                      readOnlyRootFilesystem: false
                      runAsNonRoot: true
                hostIPC: false
                hostNetwork: false
                hostPID: false
                restartPolicy: Always
                serviceAccountName: che-operator
                terminationGracePeriodSeconds: 20
      permissions:
        - rules:
            - apiGroups:
                - extensions
              resources:
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - batch
              resources:
                - jobs
              verbs:
                - '*'
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - '*'
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
                - rolebindings
              verbs:
                - '*'
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterroles
                - clusterrolebindings
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - pods
                - services
                - serviceaccounts
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                - pods/exec
                - pods/log
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - org.eclipse.che
              resources:
                - checlusters
                - checlusters/status
                - checlusters/finalizers
              verbs:
                - '*'
            - apiGroups:
                - metrics.k8s.io
              resources:
                - pods
                - nodes
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - che.eclipse.org
              resources:
                - kubernetesimagepullers
              verbs:
                - '*'
            - apiGroups:
                - operators.coreos.com
              resources:
                - subscriptions
                - clusterserviceversions
                - operatorgroups
              verbs:
                - '*'
            - apiGroups:
                - packages.operators.coreos.com
              resources:
                - packagemanifests
              verbs:
                - get
                - list
          serviceAccountName: che-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - workspaces
    - devtools
    - developer
    - ide
    - java
  links:
    - name: Product Page
      url: http://www.eclipse.org/che
    - name: Documentation
      url: https://www.eclipse.org/che/docs
    - name: Operator GitHub Repo
      url: https://github.com/eclipse-che/che-operator
  maintainers:
    - email: dfestal@redhat.com
      name: David Festal
  maturity: stable
  provider:
    name: Eclipse Foundation
  replaces: eclipse-che.v7.32.1
  version: 7.32.2
  relatedImages:
    - name: che-operator-7.32.2
      image: quay.io/eclipse/che-operator@sha256:03c59c6f668194bcb08b61c3a4ed4e9e1effa66b5c01ac1c3dae5fe1363a5d58
      # tag: quay.io/eclipse/che-operator:7.32.2
    - name: configbump-0.1.4
      image: quay.io/che-incubator/configbump@sha256:175ff2ba1bd74429de192c0a9facf39da5699c6da9f151bd461b3dc8624dd532
      # tag: quay.io/che-incubator/configbump:0.1.4
    - name: devworkspace-che-operator-ci
      image: quay.io/che-incubator/devworkspace-che-operator@sha256:697343dd56a9dad2f9a5e4215d7fa820dcfb59cc15cb53a5649b154d3bd8e23a
      # tag: quay.io/che-incubator/devworkspace-che-operator:ci
    - name: devworkspace-controller-next
      image: quay.io/devfile/devworkspace-controller@sha256:077d48c0f5b849a66161610c9ead556b321f7eb5a3a896a2ee58b0db1387ba6f
      # tag: quay.io/devfile/devworkspace-controller:next
    - name: che--centos--postgresql-96-centos7-9.6-b681d78125361519180a6ac05242c296f8906c11eab7e207b5ca9a89b6344392
      image: quay.io/eclipse/che--centos--postgresql-96-centos7@sha256:b681d78125361519180a6ac05242c296f8906c11eab7e207b5ca9a89b6344392
      # tag: quay.io/eclipse/che--centos--postgresql-96-centos7:9.6-b681d78125361519180a6ac05242c296f8906c11eab7e207b5ca9a89b6344392
    - name: che--traefik-v2.3.2-6e6d4dc5a19afe06778ca092cdbbb98e31cb9f9c313edafa23f81a0e6ddf8a23
      image: quay.io/eclipse/che--traefik@sha256:6e6d4dc5a19afe06778ca092cdbbb98e31cb9f9c313edafa23f81a0e6ddf8a23
      # tag: quay.io/eclipse/che--traefik:v2.3.2-6e6d4dc5a19afe06778ca092cdbbb98e31cb9f9c313edafa23f81a0e6ddf8a23
    - name: che-dashboard-7.32.2
      image: quay.io/eclipse/che-dashboard@sha256:28fe113359d64456eace0d40a573a4a7aa277243b9ae54b76f5ac6bc3dfe082f
      # tag: quay.io/eclipse/che-dashboard:7.32.2
    - name: che-devfile-registry-7.32.2
      image: quay.io/eclipse/che-devfile-registry@sha256:60919b12fcdcfe94865644064079097c1fca209e74763934fae1e9432a6e8451
      # tag: quay.io/eclipse/che-devfile-registry:7.32.2
    - name: che-jwtproxy-0.10.0
      image: quay.io/eclipse/che-jwtproxy@sha256:881d1c91e7f5840314f25104ef5c0acee59ed484a5f9ef39daf3008725ea1033
      # tag: quay.io/eclipse/che-jwtproxy:0.10.0
    - name: che-keycloak-7.32.2
      image: quay.io/eclipse/che-keycloak@sha256:fe88b8a6c59b3819258294a290e5d306c3b342895bbb8b149654a2d003f2c211
      # tag: quay.io/eclipse/che-keycloak:7.32.2
    - name: che-plugin-artifacts-broker-v3.4.0
      image: quay.io/eclipse/che-plugin-artifacts-broker@sha256:4891a6e19be9eae59372f4b31144653f9bd1284e0301ecfe896a099ca6a12b58
      # tag: quay.io/eclipse/che-plugin-artifacts-broker:v3.4.0
    - name: che-plugin-metadata-broker-v3.4.0
      image: quay.io/eclipse/che-plugin-metadata-broker@sha256:df1ea2eadb28dbc97761adf4ea984af5ca941025a67b39c6abe373816a84bba9
      # tag: quay.io/eclipse/che-plugin-metadata-broker:v3.4.0
    - name: che-plugin-registry-7.32.2
      image: quay.io/eclipse/che-plugin-registry@sha256:f97201e45c362a48a043f7513dd420ed46be428fa7ec063f1b89971fddac6e43
      # tag: quay.io/eclipse/che-plugin-registry:7.32.2
    - name: che-server-7.32.2
      image: quay.io/eclipse/che-server@sha256:1582a12aa8c895fd7c5c78dba8d71fc49db7970ec1e79dab9b236e20f47087b7
      # tag: quay.io/eclipse/che-server:7.32.2
    - name: ubi8-minimal-8.4-200.1622548483
      image: registry.access.redhat.com/ubi8-minimal@sha256:fa95fe99ae271240513a91c17fd2869936286eae5c18eded1149a1005f8db383
      # tag: registry.access.redhat.com/ubi8-minimal:8.4-200.1622548483
    - name: che-plugin-sidecar-@sha256:4bce2e39fee6b9e4a8b4e8681380ce2462674597a48b81c131cbbf055dd5d0c3
      image: quay.io/eclipse/che-plugin-sidecar@sha256:4bce2e39fee6b9e4a8b4e8681380ce2462674597a48b81c131cbbf055dd5d0c3
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:4bce2e39fee6b9e4a8b4e8681380ce2462674597a48b81c131cbbf055dd5d0c3
    - name: che-plugin-sidecar-@sha256:7cf6f00d3f2daf04675618c408e08f019f25b91ec08d279094fddb01f559502b
      image: quay.io/eclipse/che-plugin-sidecar@sha256:7cf6f00d3f2daf04675618c408e08f019f25b91ec08d279094fddb01f559502b
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:7cf6f00d3f2daf04675618c408e08f019f25b91ec08d279094fddb01f559502b
    - name: che-plugin-sidecar-@sha256:2e2b35fb33c78738368427b0b14a4659b6b03113d887472c445ae615d9761d39
      image: quay.io/eclipse/che-plugin-sidecar@sha256:2e2b35fb33c78738368427b0b14a4659b6b03113d887472c445ae615d9761d39
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:2e2b35fb33c78738368427b0b14a4659b6b03113d887472c445ae615d9761d39
    - name: che-plugin-sidecar-@sha256:ae5124e3198ac6977ca973aaf4885a14e800d647c96a23d15a2b6babbe8fef2a
      image: quay.io/eclipse/che-plugin-sidecar@sha256:ae5124e3198ac6977ca973aaf4885a14e800d647c96a23d15a2b6babbe8fef2a
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:ae5124e3198ac6977ca973aaf4885a14e800d647c96a23d15a2b6babbe8fef2a
    - name: che-plugin-sidecar-@sha256:2e49fafb9aa6519fc63019a72a4526222b6905ed01dc484c3e9f5131ae00b546
      image: quay.io/eclipse/che-plugin-sidecar@sha256:2e49fafb9aa6519fc63019a72a4526222b6905ed01dc484c3e9f5131ae00b546
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:2e49fafb9aa6519fc63019a72a4526222b6905ed01dc484c3e9f5131ae00b546
    - name: che-plugin-sidecar-@sha256:7919d965a77f1ec969e073a1cc86686f92e99fc53a0b0c8d2eb13aea61c63467
      image: quay.io/eclipse/che-plugin-sidecar@sha256:7919d965a77f1ec969e073a1cc86686f92e99fc53a0b0c8d2eb13aea61c63467
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:7919d965a77f1ec969e073a1cc86686f92e99fc53a0b0c8d2eb13aea61c63467
    - name: che-plugin-sidecar-@sha256:d565b98f110efe4246fe1f25ee62d74d70f4f999e4679e8f7085f18b1711f76d
      image: quay.io/eclipse/che-plugin-sidecar@sha256:d565b98f110efe4246fe1f25ee62d74d70f4f999e4679e8f7085f18b1711f76d
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:d565b98f110efe4246fe1f25ee62d74d70f4f999e4679e8f7085f18b1711f76d
    - name: che-plugin-sidecar-@sha256:8615a29435b0256bffaf85ab2cf9327b059f14eaa6614346dfd51e3a6dd9f041
      image: quay.io/eclipse/che-plugin-sidecar@sha256:8615a29435b0256bffaf85ab2cf9327b059f14eaa6614346dfd51e3a6dd9f041
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:8615a29435b0256bffaf85ab2cf9327b059f14eaa6614346dfd51e3a6dd9f041
    - name: che-plugin-sidecar-@sha256:55703ae5faebedee56fdce3879fa2281cc260488d8a488ff77ed3d40f778ddf7
      image: quay.io/eclipse/che-plugin-sidecar@sha256:55703ae5faebedee56fdce3879fa2281cc260488d8a488ff77ed3d40f778ddf7
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:55703ae5faebedee56fdce3879fa2281cc260488d8a488ff77ed3d40f778ddf7
    - name: che-plugin-sidecar-@sha256:699a8fda67babcc1faedcf2e4ab22f6cf0cf6ad08c41c293983b81691c59ae4d
      image: quay.io/eclipse/che-plugin-sidecar@sha256:699a8fda67babcc1faedcf2e4ab22f6cf0cf6ad08c41c293983b81691c59ae4d
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:699a8fda67babcc1faedcf2e4ab22f6cf0cf6ad08c41c293983b81691c59ae4d
    - name: che-plugin-sidecar-@sha256:974dd0a5ab7e075d7d344af2e8e2a2f80a069e8a5a4c9ffc2a57e421b62aa17a
      image: quay.io/eclipse/che-plugin-sidecar@sha256:974dd0a5ab7e075d7d344af2e8e2a2f80a069e8a5a4c9ffc2a57e421b62aa17a
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:974dd0a5ab7e075d7d344af2e8e2a2f80a069e8a5a4c9ffc2a57e421b62aa17a
    - name: che-plugin-sidecar-@sha256:8297fb1732d87d56a0aa4c69105e7bcf4b500e40bb16446d6286c07b884eb73d
      image: quay.io/eclipse/che-plugin-sidecar@sha256:8297fb1732d87d56a0aa4c69105e7bcf4b500e40bb16446d6286c07b884eb73d
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:8297fb1732d87d56a0aa4c69105e7bcf4b500e40bb16446d6286c07b884eb73d
    - name: che-plugin-sidecar-@sha256:095c24055033e219d5a9f6fe9835b79c5d3416f0dfbb228d295713e81d27c661
      image: quay.io/eclipse/che-plugin-sidecar@sha256:095c24055033e219d5a9f6fe9835b79c5d3416f0dfbb228d295713e81d27c661
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:095c24055033e219d5a9f6fe9835b79c5d3416f0dfbb228d295713e81d27c661
    - name: che-plugin-sidecar-@sha256:56e7960857886a05fc459ed6e73a0a386f145a2474c228c2b7ccb97a1d18b4df
      image: quay.io/eclipse/che-plugin-sidecar@sha256:56e7960857886a05fc459ed6e73a0a386f145a2474c228c2b7ccb97a1d18b4df
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:56e7960857886a05fc459ed6e73a0a386f145a2474c228c2b7ccb97a1d18b4df
    - name: che-plugin-sidecar-@sha256:db86c92418b9f40b2654b8fc473073569e0dc8a01d7adc31c9925e5469d2b114
      image: quay.io/eclipse/che-plugin-sidecar@sha256:db86c92418b9f40b2654b8fc473073569e0dc8a01d7adc31c9925e5469d2b114
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:db86c92418b9f40b2654b8fc473073569e0dc8a01d7adc31c9925e5469d2b114
    - name: mta-vscode-extension-@sha256:4513d38220c65bd5494486a9d017928e8f1f5e1a25e76c41d3b12973ef088bb8
      image: quay.io/windupeng/mta-vscode-extension@sha256:4513d38220c65bd5494486a9d017928e8f1f5e1a25e76c41d3b12973ef088bb8
      # tag: quay.io/windupeng/mta-vscode-extension@sha256:4513d38220c65bd5494486a9d017928e8f1f5e1a25e76c41d3b12973ef088bb8
    - name: che-plugin-sidecar-@sha256:502abcf6599fdadabef289dcadc5c32ca622fa02b73a72b113ca1e5e5b179375
      image: quay.io/eclipse/che-plugin-sidecar@sha256:502abcf6599fdadabef289dcadc5c32ca622fa02b73a72b113ca1e5e5b179375
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:502abcf6599fdadabef289dcadc5c32ca622fa02b73a72b113ca1e5e5b179375
    - name: che-plugin-sidecar-@sha256:f398e3ffd5200c56bf56a6f7f9e8db4aa3f639a6125850f169414528260dce8a
      image: quay.io/eclipse/che-plugin-sidecar@sha256:f398e3ffd5200c56bf56a6f7f9e8db4aa3f639a6125850f169414528260dce8a
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:f398e3ffd5200c56bf56a6f7f9e8db4aa3f639a6125850f169414528260dce8a
    - name: che-plugin-sidecar-@sha256:e374ec367447afea9b12f5a8f6690a6f993526408a3731f522a53e5d0bfc287f
      image: quay.io/eclipse/che-plugin-sidecar@sha256:e374ec367447afea9b12f5a8f6690a6f993526408a3731f522a53e5d0bfc287f
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:e374ec367447afea9b12f5a8f6690a6f993526408a3731f522a53e5d0bfc287f
    - name: che-plugin-sidecar-@sha256:2cb4f70edbcdab3b279dae53b6a753d63fee03bcae3d2a385e24f25e695c03df
      image: quay.io/eclipse/che-plugin-sidecar@sha256:2cb4f70edbcdab3b279dae53b6a753d63fee03bcae3d2a385e24f25e695c03df
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:2cb4f70edbcdab3b279dae53b6a753d63fee03bcae3d2a385e24f25e695c03df
    - name: che-plugin-sidecar-@sha256:4fdb04026cbeddbfe53184afcd6fc5cb6132a22be5810b13d38a125afd083221
      image: quay.io/eclipse/che-plugin-sidecar@sha256:4fdb04026cbeddbfe53184afcd6fc5cb6132a22be5810b13d38a125afd083221
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:4fdb04026cbeddbfe53184afcd6fc5cb6132a22be5810b13d38a125afd083221
    - name: che-plugin-sidecar-@sha256:491c62a3ac775d5426d72a59ac18bdd50f5f5d61d07fbfb34e0cd7fed3d4da21
      image: quay.io/eclipse/che-plugin-sidecar@sha256:491c62a3ac775d5426d72a59ac18bdd50f5f5d61d07fbfb34e0cd7fed3d4da21
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:491c62a3ac775d5426d72a59ac18bdd50f5f5d61d07fbfb34e0cd7fed3d4da21
    - name: che-plugin-sidecar-@sha256:597a30c9c3fc7dbbfb9e08b1bb2179d8eb062ad148480ff32489b4f01ec675f4
      image: quay.io/eclipse/che-plugin-sidecar@sha256:597a30c9c3fc7dbbfb9e08b1bb2179d8eb062ad148480ff32489b4f01ec675f4
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:597a30c9c3fc7dbbfb9e08b1bb2179d8eb062ad148480ff32489b4f01ec675f4
    - name: che-plugin-sidecar-@sha256:6d0c440a7dc648816fcd4885b9cc85f0eb0f391659bb9fc8a9123075bea75165
      image: quay.io/eclipse/che-plugin-sidecar@sha256:6d0c440a7dc648816fcd4885b9cc85f0eb0f391659bb9fc8a9123075bea75165
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:6d0c440a7dc648816fcd4885b9cc85f0eb0f391659bb9fc8a9123075bea75165
    - name: che-plugin-sidecar-@sha256:9c57d6fc81a997b0d6e9acc32eb52c9d20d2653048dbae0ee9a9a6e8dceec9d2
      image: quay.io/eclipse/che-plugin-sidecar@sha256:9c57d6fc81a997b0d6e9acc32eb52c9d20d2653048dbae0ee9a9a6e8dceec9d2
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:9c57d6fc81a997b0d6e9acc32eb52c9d20d2653048dbae0ee9a9a6e8dceec9d2
    - name: che-plugin-sidecar-@sha256:bb404ffaa12565beb12b4cd8160cfa3ff3ef3be420430a6562f1fe48639cbf1f
      image: quay.io/eclipse/che-plugin-sidecar@sha256:bb404ffaa12565beb12b4cd8160cfa3ff3ef3be420430a6562f1fe48639cbf1f
      # tag: quay.io/eclipse/che-plugin-sidecar@sha256:bb404ffaa12565beb12b4cd8160cfa3ff3ef3be420430a6562f1fe48639cbf1f
    - name: che-machine-exec-next
      image: quay.io/eclipse/che-machine-exec@sha256:1b20c764e5a3fc8482a080ec36c2a5797a25dee2437e8509a3a47d6485989fda
      # tag: quay.io/eclipse/che-machine-exec:next
    - name: che-theia-@sha256:150a93c1362cbc6837e6aeeb644a91a70a5fb63031e23552f01d936a2b312ed7
      image: quay.io/eclipse/che-theia@sha256:150a93c1362cbc6837e6aeeb644a91a70a5fb63031e23552f01d936a2b312ed7
      # tag: quay.io/eclipse/che-theia@sha256:150a93c1362cbc6837e6aeeb644a91a70a5fb63031e23552f01d936a2b312ed7
    - name: che-machine-exec-@sha256:a5451369cd67c14dcde41abe2a7ad8499c10d1f5343a579d76018cf6cbed7cf9
      image: quay.io/eclipse/che-machine-exec@sha256:a5451369cd67c14dcde41abe2a7ad8499c10d1f5343a579d76018cf6cbed7cf9
      # tag: quay.io/eclipse/che-machine-exec@sha256:a5451369cd67c14dcde41abe2a7ad8499c10d1f5343a579d76018cf6cbed7cf9
    - name: che-theia-endpoint-runtime-binary-@sha256:ed0bc2a3b1a9cef67d84b052ed248fd48fdc93b384f80af80446d526be4e4751
      image: quay.io/eclipse/che-theia-endpoint-runtime-binary@sha256:ed0bc2a3b1a9cef67d84b052ed248fd48fdc93b384f80af80446d526be4e4751
      # tag: quay.io/eclipse/che-theia-endpoint-runtime-binary@sha256:ed0bc2a3b1a9cef67d84b052ed248fd48fdc93b384f80af80446d526be4e4751
    - name: che-editor-jupyter-@sha256:83439ae9edcaa3a97536742315a7912f93e499f49847da094c480031eae4ba47
      image: index.docker.io/ksmster/che-editor-jupyter@sha256:83439ae9edcaa3a97536742315a7912f93e499f49847da094c480031eae4ba47
      # tag: index.docker.io/ksmster/che-editor-jupyter@sha256:83439ae9edcaa3a97536742315a7912f93e499f49847da094c480031eae4ba47
    - name: dirigible-openshift-@sha256:3365635d1e0403697dea0674bbbdc749c4be2db29818a93b8e1e53c3c5144113
      image: index.docker.io/dirigiblelabs/dirigible-openshift@sha256:3365635d1e0403697dea0674bbbdc749c4be2db29818a93b8e1e53c3c5144113
      # tag: index.docker.io/dirigiblelabs/dirigible-openshift@sha256:3365635d1e0403697dea0674bbbdc749c4be2db29818a93b8e1e53c3c5144113
    - name: che-editor-intellij-community-@sha256:29025db859268f5dcf21ba6eb4e284744b53c92d6d23514e565a0211606f6863
      image: quay.io/che-incubator/che-editor-intellij-community@sha256:29025db859268f5dcf21ba6eb4e284744b53c92d6d23514e565a0211606f6863
      # tag: quay.io/che-incubator/che-editor-intellij-community@sha256:29025db859268f5dcf21ba6eb4e284744b53c92d6d23514e565a0211606f6863
    - name: eclipse-broadway-@sha256:57c82cd806a56f69aa8663f68405d0778b628a29a64fb16881b11ce9f484dda7
      image: index.docker.io/wsskeleton/eclipse-broadway@sha256:57c82cd806a56f69aa8663f68405d0778b628a29a64fb16881b11ce9f484dda7
      # tag: index.docker.io/wsskeleton/eclipse-broadway@sha256:57c82cd806a56f69aa8663f68405d0778b628a29a64fb16881b11ce9f484dda7
    - name: code-server-@sha256:ef07281004909bb2c228422df2e99a5ba5e450fce7546b8fa186852f23bf6751
      image: index.docker.io/codercom/code-server@sha256:ef07281004909bb2c228422df2e99a5ba5e450fce7546b8fa186852f23bf6751
      # tag: index.docker.io/codercom/code-server@sha256:ef07281004909bb2c228422df2e99a5ba5e450fce7546b8fa186852f23bf6751
    - name: che-buildah-base-@sha256:417203d8629edd92f187afd3ebb3d8dc28338d34809eb75ffc2e08a400f8d56b
      image: quay.io/eclipse/che-buildah-base@sha256:417203d8629edd92f187afd3ebb3d8dc28338d34809eb75ffc2e08a400f8d56b
      # tag: quay.io/eclipse/che-buildah-base@sha256:417203d8629edd92f187afd3ebb3d8dc28338d34809eb75ffc2e08a400f8d56b
    - name: che-sidecar-workspace-data-sync-@sha256:88d0125837d5a57cb24bb3ed81e6a8f4119a5043b7926bd2bd01710854c44f10
      image: quay.io/eclipse/che-sidecar-workspace-data-sync@sha256:88d0125837d5a57cb24bb3ed81e6a8f4119a5043b7926bd2bd01710854c44f10
      # tag: quay.io/eclipse/che-sidecar-workspace-data-sync@sha256:88d0125837d5a57cb24bb3ed81e6a8f4119a5043b7926bd2bd01710854c44f10
    - name: che-buildkit-base-@sha256:effa98dd2ced30b520b25afff1a880d121cf6b3f8ab42a5149eada46ba793ce9
      image: quay.io/eclipse/che-buildkit-base@sha256:effa98dd2ced30b520b25afff1a880d121cf6b3f8ab42a5149eada46ba793ce9
      # tag: quay.io/eclipse/che-buildkit-base@sha256:effa98dd2ced30b520b25afff1a880d121cf6b3f8ab42a5149eada46ba793ce9
    - name: che--centos--mongodb-36-centos7-latest-a915db7beca87198fcd7860086989fe8a327a1a4f6508025b64ab28fcc7423b2
      image: quay.io/eclipse/che--centos--mongodb-36-centos7@sha256:a915db7beca87198fcd7860086989fe8a327a1a4f6508025b64ab28fcc7423b2
      # tag: quay.io/eclipse/che--centos--mongodb-36-centos7:latest-a915db7beca87198fcd7860086989fe8a327a1a4f6508025b64ab28fcc7423b2
    - name: che--centos--mysql-57-centos7-latest-e08ee4d43b7356607685b69bde6335e27cf20c020f345b6c6c59400183882764
      image: quay.io/eclipse/che--centos--mysql-57-centos7@sha256:e08ee4d43b7356607685b69bde6335e27cf20c020f345b6c6c59400183882764
      # tag: quay.io/eclipse/che--centos--mysql-57-centos7:latest-e08ee4d43b7356607685b69bde6335e27cf20c020f345b6c6c59400183882764
    - name: che-cpp-rhel7-7.32.2
      image: quay.io/eclipse/che-cpp-rhel7@sha256:8182090bbe5f2f0d3d1469dde5e9a6f62d9ba22d297702cc26b88fcf671409b2
      # tag: quay.io/eclipse/che-cpp-rhel7:7.32.2
    - name: che-dotnet-2.2-7.32.2
      image: quay.io/eclipse/che-dotnet-2.2@sha256:61ddb07608a1761b119a3a6388a821ab59db94961857e8df141003d1bd618e4e
      # tag: quay.io/eclipse/che-dotnet-2.2:7.32.2
    - name: che-dotnet-3.1-7.32.2
      image: quay.io/eclipse/che-dotnet-3.1@sha256:a06b17b761c880bc5cf5fef65028303ff684c9b517593e8c71896cdf78eb4fae
      # tag: quay.io/eclipse/che-dotnet-3.1:7.32.2
    - name: che-golang-1.14-7.32.2
      image: quay.io/eclipse/che-golang-1.14@sha256:3d6039fde76a7e09cbc6f4825ed1ad7c2d960eb054b05f7220ecfe55aa75b1e6
      # tag: quay.io/eclipse/che-golang-1.14:7.32.2
    - name: che-java11-gradle-7.32.2
      image: quay.io/eclipse/che-java11-gradle@sha256:909215b418f8ff976ed6529cbeef4681e2b663e2bd6f59cc87664e1362404457
      # tag: quay.io/eclipse/che-java11-gradle:7.32.2
    - name: che-java11-maven-7.32.2
      image: quay.io/eclipse/che-java11-maven@sha256:e4be1573efd37a8b8da4b34d23dbbe82ae29932de83d7c530a46bc2d958a726c
      # tag: quay.io/eclipse/che-java11-maven:7.32.2
    - name: che-java8-maven-7.32.2
      image: quay.io/eclipse/che-java8-maven@sha256:bcd1d1af6cec19fae9372e984b1664283eca4517ce7a4dec923e4c49c8b7a5d8
      # tag: quay.io/eclipse/che-java8-maven:7.32.2
    - name: che-nodejs10-community-7.32.2
      image: quay.io/eclipse/che-nodejs10-community@sha256:67e6995885568a8d7b183a007ad8baf80a5f06f77d2dc3ae7b6f4fc14d416e58
      # tag: quay.io/eclipse/che-nodejs10-community:7.32.2
    - name: che-nodejs10-ubi-7.32.2
      image: quay.io/eclipse/che-nodejs10-ubi@sha256:f39fdc871651a9db381477f7671d0fcabf81ff6199cc00b15922b931ba587fa2
      # tag: quay.io/eclipse/che-nodejs10-ubi:7.32.2
    - name: che-nodejs12-community-7.32.2
      image: quay.io/eclipse/che-nodejs12-community@sha256:7556742b08597331b0c0b90bff17c7c09f38dcc80b7e3b4dfc7b7e1f91c0308d
      # tag: quay.io/eclipse/che-nodejs12-community:7.32.2
    - name: che-nodejs8-centos-7.32.2
      image: quay.io/eclipse/che-nodejs8-centos@sha256:70c46725e7868985f0a2b01b99e6d1f00e17831f2149da87d8e41f20d5172224
      # tag: quay.io/eclipse/che-nodejs8-centos:7.32.2
    - name: che-php-7-7.32.2
      image: quay.io/eclipse/che-php-7@sha256:9b4ab7a151283006a983ff20f204d4739e3a9fef7b81bbab7205dbcaac4cab04
      # tag: quay.io/eclipse/che-php-7:7.32.2
    - name: che-python-3.8-7.32.2
      image: quay.io/eclipse/che-python-3.8@sha256:d08702c35e09ffe8b87cfd22f312c08ecaae9d1bcdd288ba94bd0d740e9777b7
      # tag: quay.io/eclipse/che-python-3.8:7.32.2
    - name: che-quarkus-7.32.2
      image: quay.io/eclipse/che-quarkus@sha256:ec8c9a17c33c754aac5dd8de80196ca2e9d8161d67f5081a8b54e0a8c3eba7e8
      # tag: quay.io/eclipse/che-quarkus:7.32.2
    - name: che-rust-1.39-7.32.2
      image: quay.io/eclipse/che-rust-1.39@sha256:75ed72fe11bf73a0f19cd7f8b8e65ae452fb0516ebdec104af4cc7ab595cb565
      # tag: quay.io/eclipse/che-rust-1.39:7.32.2
    - name: ubi8-minimal-8.3
      image: registry.access.redhat.com/ubi8-minimal@sha256:2f6b88c037c0503da7704bccd3fc73cb76324101af39ad28f16460e7bce98324
      # tag: registry.access.redhat.com/ubi8-minimal:8.3
    - name: ubi-minimal-
      image: registry.access.redhat.com/ubi8/ubi-minimal@sha256:b6b0c30bb747dfacee216e5ae2ad02adb18920d8f744c04f29354278e19df2a9
      # tag: registry.access.redhat.com/ubi8/ubi-minimal
`)

func testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYaml, nil
}

func testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/eclipse-che/7.32.2/eclipse-che.v7.32.2.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdbackups.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdBackup
    listKind: EtcdBackupList
    plural: etcdbackups
    singular: etcdbackup
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
`)

func testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdbackups.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdclusters.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdCluster
    listKind: EtcdClusterList
    plural: etcdclusters
    shortNames:
    - etcdclus
    - etcd
    singular: etcdcluster
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
`)

func testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdclusters.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\
      \n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\
      \n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\
      \n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\
      \n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"\
      path\": \"<full-s3-path>\",\n        \"awsSecret\": \"<aws-secret>\"\n     \
      \ }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\
      \n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"<etcd-cluster-endpoints>\"\
      ],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"<full-s3-path>\"\
      ,\n        \"awsSecret\": \"<aws-secret>\"\n      }\n    }\n  }\n]\n"
    capabilities: Full Lifecycle
    categories: Database
    description: Creates and maintain highly-available etcd clusters on Kubernetes
    tectonic-visibility: ocs
  name: etcdoperator.v0.9.2
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
    - description: Represents a cluster of etcd nodes.
      displayName: etcd Cluster
      kind: EtcdCluster
      name: etcdclusters.etcd.database.coreos.com
      resources:
      - kind: Service
        version: v1
      - kind: Pod
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the etcd cluster.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: pod.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: The status of each of the member Pods for the etcd cluster.
        displayName: Member Status
        path: members
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: The service at which the running etcd cluster can be accessed.
        displayName: Service
        path: serviceName
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Service
      - description: The current size of the etcd cluster.
        displayName: Cluster Size
        path: size
      - description: The current version of the etcd cluster.
        displayName: Current Version
        path: currentVersion
      - description: The target version of the etcd cluster, after upgrading.
        displayName: Target Version
        path: targetVersion
      - description: The current status of the etcd cluster.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the cluster.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
    - description: Represents the intent to backup an etcd cluster.
      displayName: etcd Backup
      kind: EtcdBackup
      name: etcdbackups.etcd.database.coreos.com
      specDescriptors:
      - description: Specifies the endpoints of an etcd cluster.
        displayName: etcd Endpoint(s)
        path: etcdEndpoints
        x-descriptors:
        - urn:alm:descriptor:etcd:endpoint
      - description: The full AWS S3 path where the backup is saved.
        displayName: S3 Path
        path: s3.path
        x-descriptors:
        - urn:alm:descriptor:aws:s3:path
      - description: The name of the secret object that stores the AWS credential
          and config files.
        displayName: AWS Secret
        path: s3.awsSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Indicates if the backup was successful.
        displayName: Succeeded
        path: succeeded
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Indicates the reason for any backup related failures.
        displayName: Reason
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
    - description: Represents the intent to restore an etcd cluster from a backup.
      displayName: etcd Restore
      kind: EtcdRestore
      name: etcdrestores.etcd.database.coreos.com
      specDescriptors:
      - description: References the EtcdCluster which should be restored,
        displayName: etcd Cluster
        path: etcdCluster.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:EtcdCluster
        - urn:alm:descriptor:text
      - description: The full AWS S3 path where the backup is saved.
        displayName: S3 Path
        path: s3.path
        x-descriptors:
        - urn:alm:descriptor:aws:s3:path
      - description: The name of the secret object that stores the AWS credential
          and config files.
        displayName: AWS Secret
        path: s3.awsSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Indicates if the restore was successful.
        displayName: Succeeded
        path: succeeded
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Indicates the reason for any restore related failures.
        displayName: Reason
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
  description: "The etcd Operater creates and maintains highly-available etcd clusters\
    \ on Kubernetes, allowing engineers to easily deploy and manage etcd clusters\
    \ for their applications.\n\netcd is a distributed key value store that provides\
    \ a reliable way to store data across a cluster of machines. It\xE2\u20AC\u2122\
    s open-source and available on GitHub. etcd gracefully handles leader elections\
    \ during network partitions and will tolerate machine failure, including the leader.\n\
    \n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command\
    \ line utility ` + "`" + `etcdctl` + "`" + ` via port forwarding:\n\n    $ kubectl --namespace default\
    \ port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379\
    \ get /\n\nOr directly to the API using the automatically generated Kubernetes\
    \ Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379\
    \ get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before\
    \ exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\
    \n* **High availability** - Multiple instances of etcd are networked together\
    \ and secured. Individual failures or networking issues are transparently handled\
    \ to keep your cluster up and running.\n\n* **Automated updates** - Rolling out\
    \ a new etcd version works like all Kubernetes rolling updates. Simply declare\
    \ the desired version, and the etcd service starts a safe rolling update to the\
    \ new version automatically.\n\n* **Backups included** - Create etcd backups and\
    \ restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure\
    \ TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md)\
    \ as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your\
    \ etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes)\
    \ across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the\
    \ Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement)\
    \ values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition)\
    \ that you would like to use.\n"
  displayName: etcd
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      deployments:
      - name: etcd-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: etcd-operator-alm-owned
          template:
            metadata:
              labels:
                name: etcd-operator-alm-owned
              name: etcd-operator-alm-owned
            spec:
              containers:
              - command:
                - etcd-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                name: etcd-operator
              - command:
                - etcd-backup-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                name: etcd-backup-operator
              - command:
                - etcd-restore-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                name: etcd-restore-operator
              serviceAccountName: etcd-operator
      permissions:
      - rules:
        - apiGroups:
          - etcd.database.coreos.com
          resources:
          - etcdclusters
          - etcdbackups
          - etcdrestores
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - get
        serviceAccountName: etcd-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - etcd
  - key value
  - database
  - coreos
  - open source
  labels:
    alm-owner-etcd: etcdoperator
    operated-by: etcdoperator
  links:
  - name: Blog
    url: https://coreos.com/etcd
  - name: Documentation
    url: https://coreos.com/operators/etcd/docs/latest/
  - name: etcd Operator Source Code
    url: https://github.com/coreos/etcd-operator
  maintainers:
  - email: etcd-dev@googlegroups.com
    name: etcd Community
  maturity: alpha
  provider:
    name: CNCF
  selector:
    matchLabels:
      alm-owner-etcd: etcdoperator
      operated-by: etcdoperator
  version: 0.9.2
`)

func testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYaml, nil
}

func testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdoperator.v0.9.2.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdrestores.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdRestore
    listKind: EtcdRestoreList
    plural: etcdrestores
    singular: etcdrestore
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
`)

func testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdrestores.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operator092MetadataAnnotationsYaml = []byte(`annotations:
  operators.operatorframework.io.bundle.channel.default.v1: alpha
  operators.operatorframework.io.bundle.channels.v1: alpha
  operators.operatorframework.io.bundle.manifests.v1: manifests/
  operators.operatorframework.io.bundle.mediatype.v1: registry+v1
  operators.operatorframework.io.bundle.metadata.v1: metadata/
  operators.operatorframework.io.bundle.package.v1: etcd
`)

func testQeTestdataOpmEtcd_operator092MetadataAnnotationsYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operator092MetadataAnnotationsYaml, nil
}

func testQeTestdataOpmEtcd_operator092MetadataAnnotationsYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operator092MetadataAnnotationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/0.9.2/metadata/annotations.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdbackups.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdBackup
    listKind: EtcdBackupList
    plural: etcdbackups
    singular: etcdbackup
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

`)

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdbackups.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdclusters.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdCluster
    listKind: EtcdClusterList
    plural: etcdclusters
    shortNames:
    - etcdclus
    - etcd
    singular: etcdcluster
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

`)

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdclusters.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\
      \n    },\n    \"spec\": {\n      \"size\": 3,\n      \"version\": \"3.2.13\"\
      \n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\
      \n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\
      \n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"\
      path\": \"<full-s3-path>\",\n        \"awsSecret\": \"<aws-secret>\"\n     \
      \ }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\
      \n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"<etcd-cluster-endpoints>\"\
      ],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"<full-s3-path>\"\
      ,\n        \"awsSecret\": \"<aws-secret>\"\n      }\n    }\n  }\n]\n"
    capabilities: Full Lifecycle
    categories: Database
    containerImage: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
    createdAt: 2019-02-28 01:03:00
    description: Create and maintain highly-available etcd clusters on Kubernetes
    repository: https://github.com/coreos/etcd-operator
    tectonic-visibility: ocs
  name: etcdoperator.v0.9.4
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
    - description: Represents a cluster of etcd nodes.
      displayName: etcd Cluster
      kind: EtcdCluster
      name: etcdclusters.etcd.database.coreos.com
      resources:
      - kind: Service
        version: v1
      - kind: Pod
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the etcd cluster.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: pod.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: The status of each of the member Pods for the etcd cluster.
        displayName: Member Status
        path: members
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: The service at which the running etcd cluster can be accessed.
        displayName: Service
        path: serviceName
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Service
      - description: The current size of the etcd cluster.
        displayName: Cluster Size
        path: size
      - description: The current version of the etcd cluster.
        displayName: Current Version
        path: currentVersion
      - description: The target version of the etcd cluster, after upgrading.
        displayName: Target Version
        path: targetVersion
      - description: The current status of the etcd cluster.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the cluster.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
    - description: Represents the intent to backup an etcd cluster.
      displayName: etcd Backup
      kind: EtcdBackup
      name: etcdbackups.etcd.database.coreos.com
      specDescriptors:
      - description: Specifies the endpoints of an etcd cluster.
        displayName: etcd Endpoint(s)
        path: etcdEndpoints
        x-descriptors:
        - urn:alm:descriptor:etcd:endpoint
      - description: The full AWS S3 path where the backup is saved.
        displayName: S3 Path
        path: s3.path
        x-descriptors:
        - urn:alm:descriptor:aws:s3:path
      - description: The name of the secret object that stores the AWS credential
          and config files.
        displayName: AWS Secret
        path: s3.awsSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Indicates if the backup was successful.
        displayName: Succeeded
        path: succeeded
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Indicates the reason for any backup related failures.
        displayName: Reason
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
    - description: Represents the intent to restore an etcd cluster from a backup.
      displayName: etcd Restore
      kind: EtcdRestore
      name: etcdrestores.etcd.database.coreos.com
      specDescriptors:
      - description: References the EtcdCluster which should be restored,
        displayName: etcd Cluster
        path: etcdCluster.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:EtcdCluster
        - urn:alm:descriptor:text
      - description: The full AWS S3 path where the backup is saved.
        displayName: S3 Path
        path: s3.path
        x-descriptors:
        - urn:alm:descriptor:aws:s3:path
      - description: The name of the secret object that stores the AWS credential
          and config files.
        displayName: AWS Secret
        path: s3.awsSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Indicates if the restore was successful.
        displayName: Succeeded
        path: succeeded
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Indicates the reason for any restore related failures.
        displayName: Reason
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
  description: "The etcd Operater creates and maintains highly-available etcd clusters\
    \ on Kubernetes, allowing engineers to easily deploy and manage etcd clusters\
    \ for their applications.\n\netcd is a distributed key value store that provides\
    \ a reliable way to store data across a cluster of machines. It\xE2\u20AC\u2122\
    s open-source and available on GitHub. etcd gracefully handles leader elections\
    \ during network partitions and will tolerate machine failure, including the leader.\n\
    \n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command\
    \ line utility ` + "`" + `etcdctl` + "`" + ` via port forwarding:\n\n    $ kubectl --namespace default\
    \ port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379\
    \ get /\n\nOr directly to the API using the automatically generated Kubernetes\
    \ Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379\
    \ get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before\
    \ exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\
    \n* **High availability** - Multiple instances of etcd are networked together\
    \ and secured. Individual failures or networking issues are transparently handled\
    \ to keep your cluster up and running.\n\n* **Automated updates** - Rolling out\
    \ a new etcd version works like all Kubernetes rolling updates. Simply declare\
    \ the desired version, and the etcd service starts a safe rolling update to the\
    \ new version automatically.\n\n* **Backups included** - Create etcd backups and\
    \ restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure\
    \ TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md)\
    \ as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your\
    \ etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes)\
    \ across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the\
    \ Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement)\
    \ values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition)\
    \ that you would like to use.\n"
  displayName: etcd
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      deployments:
      - name: etcd-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: etcd-operator-alm-owned
          template:
            metadata:
              labels:
                name: etcd-operator-alm-owned
              name: etcd-operator-alm-owned
            spec:
              containers:
              - command:
                - etcd-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                name: etcd-operator
              - command:
                - etcd-backup-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                name: etcd-backup-operator
              - command:
                - etcd-restore-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                name: etcd-restore-operator
              serviceAccountName: etcd-operator
      permissions:
      - rules:
        - apiGroups:
          - etcd.database.coreos.com
          resources:
          - etcdclusters
          - etcdbackups
          - etcdrestores
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - get
        serviceAccountName: etcd-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - etcd
  - key value
  - database
  - coreos
  - open source
  labels:
    alm-owner-etcd: etcdoperator
    operated-by: etcdoperator
  links:
  - name: Blog
    url: https://coreos.com/etcd
  - name: Documentation
    url: https://coreos.com/operators/etcd/docs/latest/
  - name: etcd Operator Source Code
    url: https://github.com/coreos/etcd-operator
  maintainers:
  - email: etcd-dev@googlegroups.com
    name: etcd Community
  maturity: alpha
  provider:
    name: CNCF
  selector:
    matchLabels:
      alm-owner-etcd: etcdoperator
      operated-by: etcdoperator
  version: 0.9.4
`)

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdoperator.v0.9.4.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdrestores.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdRestore
    listKind: EtcdRestoreList
    plural: etcdrestores
    singular: etcdrestore
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

`)

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdrestores.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdbackups.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdBackup
    listKind: EtcdBackupList
    plural: etcdbackups
    singular: etcdbackup
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

`)

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdbackups.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdclusters.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdCluster
    listKind: EtcdClusterList
    plural: etcdclusters
    shortNames:
    - etcdclus
    - etcd
    singular: etcdcluster
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

`)

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdclusters.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdCluster\",\n    \"metadata\": {\n      \"name\": \"example\"\
      ,\n      \"annotations\": {\n        \"etcd.database.coreos.com/scope\": \"\
      clusterwide\"\n      }\n    },\n    \"spec\": {\n      \"size\": 3,\n      \"\
      version\": \"3.2.13\"\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdRestore\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-restore\"\
      \n    },\n    \"spec\": {\n      \"etcdCluster\": {\n        \"name\": \"example-etcd-cluster\"\
      \n      },\n      \"backupStorageType\": \"S3\",\n      \"s3\": {\n        \"\
      path\": \"<full-s3-path>\",\n        \"awsSecret\": \"<aws-secret>\"\n     \
      \ }\n    }\n  },\n  {\n    \"apiVersion\": \"etcd.database.coreos.com/v1beta2\"\
      ,\n    \"kind\": \"EtcdBackup\",\n    \"metadata\": {\n      \"name\": \"example-etcd-cluster-backup\"\
      \n    },\n    \"spec\": {\n      \"etcdEndpoints\": [\"<etcd-cluster-endpoints>\"\
      ],\n      \"storageType\":\"S3\",\n      \"s3\": {\n        \"path\": \"<full-s3-path>\"\
      ,\n        \"awsSecret\": \"<aws-secret>\"\n      }\n    }\n  }\n]\n"
    capabilities: Full Lifecycle
    categories: Database
    containerImage: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
    createdAt: 2019-02-28 01:03:00
    description: Create and maintain highly-available etcd clusters on Kubernetes
    repository: https://github.com/coreos/etcd-operator
    tectonic-visibility: ocs
  name: etcdoperator.v0.9.4-clusterwide
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
    - description: Represents a cluster of etcd nodes.
      displayName: etcd Cluster
      kind: EtcdCluster
      name: etcdclusters.etcd.database.coreos.com
      resources:
      - kind: Service
        version: v1
      - kind: Pod
        version: v1
      specDescriptors:
      - description: The desired number of member Pods for the etcd cluster.
        displayName: Size
        path: size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: pod.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: The status of each of the member Pods for the etcd cluster.
        displayName: Member Status
        path: members
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podStatuses
      - description: The service at which the running etcd cluster can be accessed.
        displayName: Service
        path: serviceName
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Service
      - description: The current size of the etcd cluster.
        displayName: Cluster Size
        path: size
      - description: The current version of the etcd cluster.
        displayName: Current Version
        path: currentVersion
      - description: The target version of the etcd cluster, after upgrading.
        displayName: Target Version
        path: targetVersion
      - description: The current status of the etcd cluster.
        displayName: Status
        path: phase
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase
      - description: Explanation for the current status of the cluster.
        displayName: Status Details
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
    - description: Represents the intent to backup an etcd cluster.
      displayName: etcd Backup
      kind: EtcdBackup
      name: etcdbackups.etcd.database.coreos.com
      specDescriptors:
      - description: Specifies the endpoints of an etcd cluster.
        displayName: etcd Endpoint(s)
        path: etcdEndpoints
        x-descriptors:
        - urn:alm:descriptor:etcd:endpoint
      - description: The full AWS S3 path where the backup is saved.
        displayName: S3 Path
        path: s3.path
        x-descriptors:
        - urn:alm:descriptor:aws:s3:path
      - description: The name of the secret object that stores the AWS credential
          and config files.
        displayName: AWS Secret
        path: s3.awsSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Indicates if the backup was successful.
        displayName: Succeeded
        path: succeeded
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Indicates the reason for any backup related failures.
        displayName: Reason
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
    - description: Represents the intent to restore an etcd cluster from a backup.
      displayName: etcd Restore
      kind: EtcdRestore
      name: etcdrestores.etcd.database.coreos.com
      specDescriptors:
      - description: References the EtcdCluster which should be restored,
        displayName: etcd Cluster
        path: etcdCluster.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:EtcdCluster
        - urn:alm:descriptor:text
      - description: The full AWS S3 path where the backup is saved.
        displayName: S3 Path
        path: s3.path
        x-descriptors:
        - urn:alm:descriptor:aws:s3:path
      - description: The name of the secret object that stores the AWS credential
          and config files.
        displayName: AWS Secret
        path: s3.awsSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - description: Indicates if the restore was successful.
        displayName: Succeeded
        path: succeeded
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Indicates the reason for any restore related failures.
        displayName: Reason
        path: reason
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.phase:reason
      version: v1beta2
  description: "The etcd Operater creates and maintains highly-available etcd clusters\
    \ on Kubernetes, allowing engineers to easily deploy and manage etcd clusters\
    \ for their applications.\n\netcd is a distributed key value store that provides\
    \ a reliable way to store data across a cluster of machines. It\xE2\u20AC\u2122\
    s open-source and available on GitHub. etcd gracefully handles leader elections\
    \ during network partitions and will tolerate machine failure, including the leader.\n\
    \n\n### Reading and writing to etcd\n\nCommunicate with etcd though its command\
    \ line utility ` + "`" + `etcdctl` + "`" + ` via port forwarding:\n\n    $ kubectl --namespace default\
    \ port-forward service/example-client 2379:2379\n    $ etcdctl --endpoints http://127.0.0.1:2379\
    \ get /\n\nOr directly to the API using the automatically generated Kubernetes\
    \ Service:\n\n    $ etcdctl --endpoints http://example-client.default.svc:2379\
    \ get /\n\nBe sure to secure your etcd cluster (see Common Configurations) before\
    \ exposing it outside of the namespace or cluster.\n\n\n### Supported Features\n\
    \n* **High availability** - Multiple instances of etcd are networked together\
    \ and secured. Individual failures or networking issues are transparently handled\
    \ to keep your cluster up and running.\n\n* **Automated updates** - Rolling out\
    \ a new etcd version works like all Kubernetes rolling updates. Simply declare\
    \ the desired version, and the etcd service starts a safe rolling update to the\
    \ new version automatically.\n\n* **Backups included** - Create etcd backups and\
    \ restore them through the etcd Operator.\n\n### Common Configurations\n\n* **Configure\
    \ TLS** - Specify [static TLS certs](https://github.com/coreos/etcd-operator/blob/master/doc/user/cluster_tls.md)\
    \ as Kubernetes secrets.\n\n* **Set Node Selector and Affinity** - [Spread your\
    \ etcd Pods](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-node-selector-and-anti-affinity-across-nodes)\
    \ across Nodes and availability zones.\n\n* **Set Resource Limits** - [Set the\
    \ Kubernetes limit and request](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#three-member-cluster-with-resource-requirement)\
    \ values for your etcd Pods.\n\n* **Customize Storage** - [Set a custom StorageClass](https://github.com/coreos/etcd-operator/blob/master/doc/user/spec_examples.md#custom-persistentvolumeclaim-definition)\
    \ that you would like to use.\n"
  displayName: etcd
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - etcd.database.coreos.com
          resources:
          - etcdclusters
          - etcdbackups
          - etcdrestores
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - secrets
          verbs:
          - get
        serviceAccountName: etcd-operator
      deployments:
      - name: etcd-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: etcd-operator-alm-owned
          template:
            metadata:
              labels:
                name: etcd-operator-alm-owned
              name: etcd-operator-alm-owned
            spec:
              containers:
              - command:
                - etcd-operator
                - --create-crd=false
                - -cluster-wide
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                name: etcd-operator
              - command:
                - etcd-backup-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                name: etcd-backup-operator
              - command:
                - etcd-restore-operator
                - --create-crd=false
                env:
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: quay.io/coreos/etcd-operator@sha256:66a37fd61a06a43969854ee6d3e21087a98b93838e284a6086b13917f96b0d9b
                name: etcd-restore-operator
              serviceAccountName: etcd-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - etcd
  - key value
  - database
  - coreos
  - open source
  labels:
    alm-owner-etcd: etcdoperator
    operated-by: etcdoperator
  links:
  - name: Blog
    url: https://coreos.com/etcd
  - name: Documentation
    url: https://coreos.com/operators/etcd/docs/latest/
  - name: etcd Operator Source Code
    url: https://github.com/coreos/etcd-operator
  maintainers:
  - email: etcd-dev@googlegroups.com
    name: etcd Community
  maturity: alpha
  provider:
    name: CNCF
  selector:
    matchLabels:
      alm-owner-etcd: etcdoperator
      operated-by: etcdoperator
  version: 0.9.4-clusterwide
`)

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdoperator.v0.9.4-clusterwide.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: etcdrestores.etcd.database.coreos.com
spec:
  group: etcd.database.coreos.com
  names:
    kind: EtcdRestore
    listKind: EtcdRestoreList
    plural: etcdrestores
    singular: etcdrestore
  scope: Namespaced
  versions:
  - name: v1beta2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

`)

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdrestores.etcd.database.coreos.com.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYaml = []byte(`channels:
- currentCSV: etcdoperator.v0.9.4
  name: singlenamespace-alpha
- currentCSV: etcdoperator.v0.9.4-clusterwide
  name: clusterwide-alpha
defaultChannel: singlenamespace-alpha
packageName: etcd
`)

func testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYaml, nil
}

func testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/etcd_operator/etcd_community/etcd.package.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmIndex_34016Db = []byte("SQLite format 3\x00\x10\x00\x01\x01\x00@  \x00\x00\x00\x04\x00\x00\x00x\x00\x00\x00\x0e\x00\x00\x00U\x00\x00\x00.\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00.(j\x05\x00\x00\x00\x01\x0f\xfb\x00\x00\x00\x00\t\x0f\xfb\r\xc5\r\x88\f\xbf\f\x90\v\x93\vd\t\xc9\b\xf5\a\x02\x05\x0f\x04\xad\x02\x8d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x83p\x1b\a\x17%%\x01\x87#tableapi_providerapi_provider\x03CREATE TABLE \"api_provider\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x81Q\x18\a\x17''\x01\x82atablerelated_imagerelated_image\x1bCREATE TABLE related_image (\n\t\t\timage TEXT,\n     \t\toperatorbundle_name TEXT,\n     \t\tFOREIGN KEY(operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)\x83\x18\x15\a\x17''\x01\x85otablechannel_entrychannel_entry\x16CREATE TABLE channel_entry (\n\t\t\tentry_id INTEGER PRIMARY KEY,\n\t\t\tchannel_name TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\treplaces INTEGER,\n\t\t\tdepth INTEGER,\n\t\t\tFOREIGN KEY(replaces) REFERENCES channel_entry(entry_id) DEFERRABLE INITIALLY DEFERRED, \n\t\t\tFOREIGN KEY(channel_name, package_name) REFERENCES channel(name, package_name) ON DELETE CASCADE\n\t\t)-\x14\x06\x17A\x1b\x01\x00indexsqlite_autoindex_channel_1channel\x15\x81z\x13\a\x17\x1b\x1b\x01\x83Ktablechannelchannel\x14CREATE TABLE channel (\n\t\t\tname TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\thead_operatorbundle_name TEXT,\n\t\t\tPRIMARY KEY(name, package_name),\n\t\t\tFOREIGN KEY(head_operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)-\x12\x06\x17A\x1b\x01\x00indexsqlite_autoindex_package_1package\x13\x81F\x11\a\x17\x1b\x1b\x01\x82ctablepackagepackage\x12CREATE TABLE package (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tdefault_channel TEXT,\n\t\t\tFOREIGN KEY(name, default_channel) REFERENCES channel(package_name,name) ON DELETE CASCADE\n\t\t);\x10\x06\x17O)\x01\x00indexsqlite_autoindex_operatorbundle_1operatorbundle\x11\x81J\x0f\a\x17))\x01\x82Otableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT)%\v\x06\x179\x13\x01\x00indexsqlite_autoindex_api_1api\f\x81\x1f\n\a\x17\x13\x13\x01\x82%tableapiapi\vCREATE TABLE api (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\tplural TEXT NOT NULL,\n\t\t\tPRIMARY KEY(group_name, version, kind)\n\t\t)\x81\"\x01\a\x17//\x01\x81stableschema_migrationsschema_migrations\x02CREATE TABLE schema_migrations (\n\t\tversion bigint NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTA\x00\x00\x00\a\x1b\r\x00\x00\x00\x01\x0f\xe7\x00\x0f\xe7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x01\x03\x013\n2020-08-11 17:31:44\r\x0f\t\x00\x01\x0e\x9e\x00\x0e\x9e\x0e\x9e\x0e\x9e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\x03\a+\x1d\x1fC\x17Qplanetscale.comv1alpha1PsClusterplanetscale-operator.v0.1.70.1.7quay.io/bandrade/planetscale:0.1.7\x00\x00\x00\xf7\x1d%G\x17cobjectbucket.iov1alpha1ObjectBucketlib-bucket-provisioner.v1.0.01.0.0quay.io/bandrade/lib-bucket-provisioner:1.0\x00\x00\x00~\x1d/G\x17cobjectbucket.iov1alpha1ObjectBucketClaimlib-bucket-provisioner.v1.0.01.0.0quay.io/bandrade/lib-bucket-provisioner:1.0\r\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\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\n\x0f\xad\x00\x01\x0fd\x00\x0fd\x0fd\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00H\x05C\x17Q\x01planetscale-operator.v0.1.70.1.7quay.io/bandrade/planetscale:0.1.7\x02\x00\x00\x00Sc\tlib-bucket-provisioner.v1.0.01.0.0quay.io/bandrade/lib-bucket-provisioner:1.0\r\x00\x00\x00\f\a\x02\x00\x0f[\x0e\xb9\x0e\x92\r\xc5\r\x88\f\xbf\f\x90\v\x93\vd\t\xc9\b\xf5\a\x02\x05\x0f\x04\xad\x02\x8d\x00l\x00d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x06\x96\x1b5%\b\x87mtriggerapi_requirer_cleanupapi_requirerCREATE TRIGGER api_requirer_cleanup\n\t\tAFTER DELETE ON api_requirer\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\t\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x83p\x1b\a\x17%%\x01\x87#tableapi_providerapi_provider\x03CREATE TABLE \"api_provider\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x81Q\x18\a\x17''\x01\x82atablerelated_imagerelated_image\x1bCREATE TABLE related_image (\n\t\t\timage TEXT,\n     \t\toperatorbundle_name TEXT,\n     \t\tFOREIGN KEY(operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)\x83\x18\x15\a\x17''\x01\x85otablechannel_entrychannel_entry\x16CREATE TABLE channel_entry (\n\t\t\tentry_id INTEGER PRIMARY KEY,\n\t\t\tchannel_name TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\treplaces INTEGER,\n\t\t\tdepth INTEGER,\n\t\t\tFOREIGN KEY(replaces) REFERENCES channel_entry(entry_id) DEFERRABLE INITIALLY DEFERRED, \n\t\t\tFOREIGN KEY(channel_name, package_name) REFERENCES channel(name, package_name) ON DELETE CASCADE\n\t\t)-\x14\x06\x17A\x1b\x01\x00indexsqlite_autoindex_channel_1channel\x15\x81z\x13\a\x17\x1b\x1b\x01\x83Ktablechannelchannel\x14CREATE TABLE channel (\n\t\t\tname TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\thead_operatorbundle_name TEXT,\n\t\t\tPRIMARY KEY(name, package_name),\n\t\t\tFOREIGN KEY(head_operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)-\x12\x06\x17A\x1b\x01\x00indexsqlite_autoindex_package_1package\x13\x81F\x11\a\x17\x1b\x1b\x01\x82ctablepackagepackage\x12CREATE TABLE package (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tdefault_channel TEXT,\n\t\t\tFOREIGN KEY(name, default_channel) REFERENCES channel(package_name,name) ON DELETE CASCADE\n\t\t);\x10\x06\x17O)\x01\x00indexsqlite_autoindex_operatorbundle_1operatorbundle\x11\x81J\x0f\a\x17))\x01\x82Otableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT)%\v\x06\x179\x13\x01\x00indexsqlite_autoindex_api_1api\f\x81\x1f\n\a\x17\x13\x13\x01\x82%tableapiapi\vCREATE TABLE api (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\tplural TEXT NOT NULL,\n\t\t\tPRIMARY KEY(group_name, version, kind)\n\t\t)\x81\"\x01\a\x17//\x01\x81stableschema_migrationsschema_migrations\x02CREATE TABLE schema_migrations (\n\t\tversion bigint NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n\t)\r\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x06\x06\xc4\x00\x0e\r\r\xab\v\x8b\tj\b\x14\x06\xc4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x82M!\a\x17!!\x01\x84etablepropertiesproperties\nCREATE TABLE properties (\n\t\t\ttype TEXT,\n\t\t\tvalue TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE\n\t\t)\x82S \a\x17%%\x01\x84itabledependenciesdependencies\bCREATE TABLE dependencies (\n\t\t\ttype TEXT,\n\t\t\tvalue TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE\n\t\t)\x84\x1e\x1f\a\x1b5%\b\x87mtriggerapi_requirer_cleanupapi_requirerCREATE TRIGGER api_requirer_cleanup\n\t\tAFTER DELETE ON api_requirer\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\t\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\r\x0e\x17\x00\x02\f\xfc\x00\r\x81\f\xfc\f\xfc\f\xfc\f\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\x02\x05\x06#kC\x17Qolm.package{\"packageName\":\"planetscale\",\"version\":\"0.1.7\"}planetscale-operator.v0.1.70.1.7quay.io/bandrade/planetscale:0.1.7\x81\x13\x04\a\x1b\x81\x13C\x17Qolm.gvk{\"group\":\"planetscale.com\",\"kind\":\"PsCluster\",\"version\":\"v1alpha1\"}planetscale-operator.v0.1.70.1.7quay.io/bandrade/planetscale:0.1.7\x00\x00\x01\xe9#\x81\x01G\x17colm.package{\"packageName\":\"lib-bucket-provisioner\",\"version\":\"1.0.0\"}lib-bucket-provisioner.v1.0.01.0.0quay.io/bandrade/lib-bucket-provisioner:1.0\x00\x00\x01M\x1b\x81#G\x17colm.gvk{\"group\":\"objectbucket.io\",\"kind\":\"ObjectBucketClaim\",\"version\":\"v1alpha1\"}lib-bucket-provisioner.v1.0.01.0.0quay.io/bandrade/lib-bucket-provisioner:1.0\x00\x00\x00\xa4\x1b\x81\x19G\x17colm.gvk{\"group\":\"objectbucket.io\",\"kind\":\"ObjectBucket\",\"version\":\"v1alpha1\"}lib-bucket-provisioner.v1.0.01.0.0quay.io/bandrade/lib-bucket-provisioner:1.0\r\x0f\x88\x00\x01\x0fW\x00\x0fW\x0fW\x0fW\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00/\x03\x05+\x1d\x1f!planetscale.comv1alpha1PsClusterpsclusters\x00\x00\x00x\x1d%'objectbucket.iov1alpha1ObjectBucketobjectbuckets\x00\x00\x00A\x1d/1objectbucket.iov1alpha1ObjectBucketClaimobjectbucketclaims\n\x0f\xa8\x00\x01\x0f\x81\x00\x0f\x81\x0f\x81\x0f\x81\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&\x05+\x1d\x1f\x01planetscale.comv1alpha1PsCluster\x03\x00\x00\x00X%\x01objectbucket.iov1alpha1ObjectBucket\x02\x00\x00\x00./\tobjectbucket.iov1alpha1ObjectBucketClaim\x00\x00\x00\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\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x0f\x00\x00\x00\r\x00\x00\x00\x17\x00\x00\x00\x18\x00\x00\x00\x19\x00\x00\x00\x1a\x00\x00\x00\x1c\x00\x00\x00\x1d\x00\x00\x00\x05\x00\x00\x00\x1e\x00\x00\x00\x1f\x00\x00\x00 \x00\x00\x00!\x00\x00\x00\"\x00\x00\x00#\x00\x00\x00$\x00\x00\x00%\x00\x00\x00&\x00\x00\x00'\x00\x00\x00(\x00\x00\x00)\x00\x00\x00*\x00\x00\x00+\x00\x00\x00,\x00\x00\x00-\x00\x00\x00.\x00\x00\x00/\x00\x00\x000\x00\x00\x001\x00\x00\x002\x00\x00\x003\x00\x00\x004\x00\x00\x005\x00\x00\x006\x00\x00\x007\x00\x00\x008\x00\x00\x009\x00\x00\x00:\x00\x00\x00;\x00\x00\x00<\x00\x00\x00=\x00\x00\x00>\x00\x00\x00?\x00\x00\x00@\x00\x00\x00A\x00\x00\x00B\x00\x00\x00C\x00\x00\x00D\x00\x00\x00E\x00\x00\x00F\x00\x00\x00G\x00\x00\x00H\x00\x00\x00I\x00\x00\x00J\x00\x00\x00K\x00\x00\x00L\x00\x00\x00M\x00\x00\x00N\x00\x00\x00O\x00\x00\x00P\x00\x00\x00Q\x00\x00\x00R\x00\x00\x00S\x00\x00\x00T\x00\x00\x00U\x00\x00\x00V\x00\x00\x00W\x00\x00\x00X\x00\x00\x00Y\x00\x00\x00Z\x00\x00\x00[\x00\x00\x00\\\x00\x00\x00]\x00\x00\x00^\x00\x00\x00_\x00\x00\x00`\x00\x00\x00a\x00\x00\x00b\x00\x00\x00c\x00\x00\x00d\x00\x00\x00e\x00\x00\x00f\x00\x00\x00g\x00\x00\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\x00\x00\x00\r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\r\x02\xab\x00\x01\x00\xba\x00\x00\xba\x00\xba\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x83\xffl\x02\rC\x83\xfcv\x84\x81\\Q\r\x17\r\rplanetscale-operator.v0.1.7{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"planetscale.com/v1alpha1\\\",\\n    \\\"kind\\\": \\\"PsCluster\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"example\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"monitored\\\": true,\\n      \\\"lockserver\\\": {\\n        \\\"endpoint\\\": \\\"\\u003cLockServer IP and Port\\u003e\\\",\\n        \\\"root_path\\\": \\\"/vitess/example/global\\\"\x00\x00\x00i\x00\x00\rU\rG\x95\x87\x1c\x95\xe7:c\r\x17\r\rlib-bucket-provisioner.v1.0.0{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"objectbucket.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"ObjectBucketClaim\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"my-obc\\\",\\n      \\\"namespace\\\": \\\"my-app\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"storageClassName\\\": \\\"object-bucket-class\\\",\\n      \\\"generateBucketName\\\": \\\"my-obc\\\",\\n      \\\"additionalConfig\\\": {}\\n    },\\n    \\\"status\\\": {}\\n  },\\n  {\\n    \\\"apiVersion\\\": \\\"objectbucket.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"ObjectBucket\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"my-obc\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"storageClassName\\\": \\\"object-bucket-class\\\",\\n      \\\"reclaimPolicy\\\": \\\"Delete\\\",\\n      \\\"claimRef\\\": {\\n        \\\"name\\\": \\\"my-obc\\\",\\n        \\\"namespace\\\": \\\"my-app\\\"\\n      },\\n      \\\"endpoint\\\": {\\n        \\\"bucketHost\\\": \\\"xxx\\\",\\n        \\\"bucketPort\\\": 80,\\n        \\\"bucketName\\\": \\\"my-obc-1234-5678-1234-5678\\\",\\n        \\\"region\\\": \\\"xxx\\\",\\n        \\\"subRegion\\\": \\\"xxx\\\",\\n        \\\"additionalConfig\\\": {}\\n      },\\n      \\\"additionalState\\\": {}\\n    },\\n    \\\"status\\\": {}\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Storage,Big Data\",\"certified\":\"false\",\"containerImage\":\"kubernetes/pause\",\"createdAt\":\"2014-07-19T07:02:32.267701596Z\",\"description\":\"Library for the dynamic provisioning of object store buckets to be used by object store providers.\",\"repository\":\"https://github.com/kube-object-storage/lib-bucket-provisioner\",\"support\":\"Red Hat\"},\"name\":\"lib-bucket-provisioner.v1.0.0\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Claim a bucket just like claiming a PV. Automate you app bucket provisioning by creating OBC with your app deployment. A secret and configmap (name=claim) will be created with access details for the app pods.\",\"displayName\":\"ObjectBucketClaim\",\"kind\":\"ObjectBucketClaim\",\"name\":\"objectbucketclaims.objectbucket.io\",\"resources\":[{\"kind\":\"Secret\",\"name\":\"secrets\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"configmaps\",\"version\":\"v1\"}],\"version\":\"v1alpha1\"},{\"description\":\"Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning information\",\"displayName\":\"ObjectBucket\",\"kind\":\"ObjectBucket\",\"name\":\"objectbuckets.objectbucket.io\",\"resources\":[{\"kind\":\"Secret\",\"name\":\"secrets\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"configmaps\",\"version\":\"v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"### CRD-only Operator\\n\\nThis operator package is **CRD-only** and the operator is a no-op operator.\\n\\nInstead, bucket provisioners using this library are using these CRD's and using CSV [required-crds](https://github.com/operator-framework/operator-lifecycle-manager/blob/master/Documentation/design/building-your-csv.md#required-crds) them so that OLM can install it as a dependency.\\n\\n### Generic Bucket Provisioning\\n\\nKubernetes natively supports dynamic provisioning for many types of file and block storage, but lacks support for object bucket provisioning. \\n\\nThis repo is a placeholder for an object store bucket provisioning library, very similar to the Kubernetes [sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/blob/master/controller/controller.go) library.\\n\\n### Known Provisioners\\n- https://github.com/noobaa\x00\x00\x00\x0e\n\x0f\xdf\x00\x01\x0f\xbf\x00\x0f\xbf\x0f\xbf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x03C\x01planetscale-operator.v0.1.7\x02\x00\x00\x00!lib-bucket-provisioner.v1.0.0\r\x0f\xe0\x00\x01\x0f\xcc\x00\x0f\xcc\x0f\xcc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x02\x03#\x15planetscalebeta\x00\x00\x00 \x17lib-bucket-provisioneralpha\n\x0f\xe6\x00\x01\x0f\xd6\x00\x0f\xd6\x0f\xd6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x03#\x01planetscale\x02\x00\x00\x00\x1alib-bucket-provisioner\r\x0f\xc2\x00\x01\x0f\x92\x00\x0f\x92\x0f\x92\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.\x02\x04\x15#Cbetaplanetscaleplanetscale-operator.v0.1.7\x00\x00\x00>9Galphalib-bucket-provisionerlib-bucket-provisioner.v1.0.0\n\x0f\xe0\x00\x01\x0f\xcb\x00\x0f\xcb\x0f\xcb\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x04\x15#\x01betaplanetscale\x02\x00\x00\x00 \talphalib-bucket-provisioner\r\x0f\xbf\x00\x01\x0f\x8c\x00\x0f\x8c\x0f\x8c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\x02\a\x00\x15#C\x00\bbetaplanetscaleplanetscale-operator.v0.1.7\x00\x00\x00A\x179G\x00\balphalib-bucket-provisionerlib-bucket-provisioner.v1.0.0\x00\x00\x00\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\x00\x00\x00\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\x00\x00\x00\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\x00\x00\x00\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\r\x0f\xce\x00\x01\x0fx\x00\x0fx\x0fx\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00T\x02\x03yCregistry.connect.redhat.com/planetscale/operator:0.1.7planetscale-operator.v0.1.7\x00\x00\x002Gkubernetes/pauselib-bucket-provisioner.v1.0.0\x00\x00\x00\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\x00\x00\x00\x055uW11BXIouD1U7yMaIlOgvLOO+z7S7tNDwRWm9pZN4a41+moOgf3EsZbnnowsDnLumEbrbAN5+dlYWpaLI69l/UjH3Vx5bsmFMe0+7aVG7SVue3dumt3Xeq6gz42M+rt06YKHHnoQh+63Dy648BKeA8P9CjknWE5Tq+Yt2+DSK67FmfRUmv7qq47jgJOXvEzGJ6W7+Sp447c7dsMYLovd9Lqv1Wd178aTDr/gDa9iN774a+E33H7zpRRQsqBKyPNCsREieCGJD1aY4RWMpcXD2r2EhlnoG85E+C1NczLmJ5gJfh1bKT9By2/lxsd6rjqan6CulaZfsqDyZeGunzNXtGQJLrzoYhyxWw+u/FLw8YQ35de6n9dZCFBHoNtSbQ5e+3qVg3af/faiuQIFNSfCHeNpwlu9NCxpCG80jyMfTQXDkYp+dY6G8EZeNc2bt6BWx7bAIbFc1vr07o4Lxp9Lk5AwJlx9BZas8mFRc26+4KuggMjiTsZ52KZAK8S0fWQnl+1bQwJbEHnGzOz8pfS13aF9CL27tsU1PE70T0cfiy5dOjsmIcKpulq9da9rC2r48hxRMJhEvLE8ejZt6r8d+B49e3F11k+ToL3x6vSpeHhuFKeNzUWhbwX3YszD6SOKccVLX+Av/fphSLdmqC5bxc0K6NfLxZviAh9W019XZk0BCUG2A5Whemkjhde+WYO9euXT/IW2jbyft5y7Yt/2BgYOGYF5kyehFY2ZZbJSlJtPQUr7SObVEJiVdWhL9kfv1eqp/iuvlgsuvBCLv/8BN994E879+98558zFq6oadO/VF+eedyEOOvhgx06wf//+zlSOeCaB4g7iS0PbpYblDemz5ttr79Ndvvtaz63PCn+mfVbeUnXeZDFp6UYafy0GCLF+1jjiYexeMAoiTD+TxvY8USwY2SK5cbuv3XmsgkpLh9+Nw41f+RIFwetnzzOh3fBYWYsWLXKSjh1MNynKtOqoVgZpzEvfzzBXBnXmQx6NYb/nbi9T3liE2++4A21pmuDsiEw+WHd10xDPdyvLyrbYeKO8+qWi33AILhPeqAw3bzi6I37ykWY9scOWsnD5JRdh1qzXUF68PUbd/B6O/M9a3Pv+Kqyq4UeAmpvOfIw6HwGjOLNYosLPfI5pDSrAhVEc2j/mkzvn7bdJl4bBzieGsd7fhmGxSlAdrb52/3/sfQVgluX6/rXuMUaMbTQMGN3doqKiCKIIIioiYiBiHfTY3a2IiR4LQRRBFBSkU+nu7his+39dz7tnvHxu44MDHs//dx749tbTcT/3c2dJfWPjaFP7Zuw49O1/HULCw6hrm0ysNxatm7fG27NW47kZ+3EoLx5R1KPu1zgKDQmUe0xJxtwDVKGjfq4fDaiWJmf35oYR+HjuQR6R6fOFWiPpPAHQnAu5sj7YdywV3y/ORyUeg9dt34F73phL4DcPj3ND+WbC16hTvQrV7FLZ+SSgUHKALeHVNErVLDaovQJeAlS27WnpmYiMiMTrr71C15p++G7cVzSxReBG7DyNuumNm7XEZT164fHHH+PxON1s6O717C7Mc97omy3HHU/3dl7q3tt5qbjezEuVqZ/yVTjduNq4uqpepzBB9LK4oALsT3FOF9fmU1I8+01XW3HbEJvefVU893c9u/Nwx3XfK407f5vGHcfee+Zv3xeVRr2lbtfOLrPo+ezQqVOnozrfVSP256jDketHOpCsfASQIygfDv7kbG7b73B+WzRr7hTBSWj3WXe79FF1V3DXzbxw/VEa93fPPFxR/3TrTd945q/5ZurFuvkR05GYSyChYpcunfHRO+/huaefwrbtO/HP7nXQtgJV2ijzlk1ObqAxolD8PPtT5QpesHuI9VCwWgCO9vLaVKNgNMOvkybgBC28+JL25kMao9NXDllH3wUwVHd3KKpv7Dt7Vfz91O39mSpk9eo1FrJrvOzt2buLAs7H8Pyzz+LTGUlo9Piv+GLORuxLyUTz6gRse3fg6jdmYMziZCw7FIgNyX7Yvn0jc8vCTxuzkEz5yWgercMD6erAPxzzdzMNHb33eHcJus2LR9m+d2Lu7N8w4r5/ICY6gnRPR+edM4j/HMzPzDmPNqm+7qC5oAWuE4HuBQx1FU0wNi4eb3OMJv0wAXNmz+Dpg0LlfJ9BDv4VvfqQM/wdxoz5xGSn/lTv2T60V310zxsTuYg/in8+56WK9MzfVsNdV/vOfVX9RZcvDO6MCl+6bk6XoaIqDzfEdyX/060tT1dv8rYZFBXX5mXj6Op+pzRFpXPH131xcdx52TSaiCzEAEH51T1ModLxC5bg1suouiROWzYZH6T3gDu+jnA8BBogl0fLLxv2rqcufQ3Urk2zLCYfYeLmxnl2/bV1slfXpz/dehNHidztURpv0rnjGc0PYYA2aAyJ/GcRswkkQLxx0M148KWP8P2CjRjUshwZIFq8lBckFiztkVNBks2k6KtKIfwxgtbZjsEwVKM2Rq+ODfHN5Km4c9t2NGxMk/n6pxOIq1ruclR/227P9uq9fWevmzZtMhWKjY3nnGb5xObEUR1w/UAMHz4CF13cHcuWL8W7E3/BH0tOoHVgOXz87ghs3b4HD774UmFj2l10MdpGZOLZCTNx6GA0rmtel4yQXPyy4zCe/341nnz4IVzQtQsqVamKqLI8ORDTE1ZN/UXeEkCy3vxDLFpZOo2z7SgspIgbd5uczxpn0QSzaUWmJmbOnInOnTsTq62AOokNcYLHwjAes59/6XWK0NxBnyPNjd8RYWLa4BXc5dp+cvIu+a+3cT3z9yad4hQVz52XrZ37ndKcAgBtpH/3qkKUubuwfzfPvyr9mdZZUzOXgqrBJGbv4ELc98c8dH6gM7GR49yxKe8lmg/FOcQFTiXmF8Tjbxo9uE395TgeI/NDNClnw3CA75mW/1f1i8rxrJvnGAsAyeudjl0VYmPx05fv4JLLLkODyrHoUDEXx7KDuCFIxc/iut7X3mwzZsJmIZWYZNnADFxaIxjfzQYX8iw0oWn4DNLPJLN4anBBw1M//OnJbtwOFgmsW7cO5eNq0Kq2HFkRBJPuOWHcv9Cty9tmzGomUFyFvysv7Ub/LtTbDi5Pk1ORlNhJx1Dq4x45fBhlwyjHGBOHXB6fp/zwHe4a9AI+mDvXKTuyBl56/gVcf9N1CIssT8AkOmkqsVzpkUscRaeuAvinFG5o/qfa//mFJ1Aw2Bz7UEE0tubNm+O7Cd+iV++r8MbbHyCidFnSAzNRqXJV3DR4KG66cRDmL5hfaPXFc/z/XOJ/5s2/U68/TZdz0QTPjj8Xef6d8xAtTDyBffv2oh4rWjHSIRJL91bmjfy46B0miOTaSBPhrr6E8Vq1bGHk65y2eb9Q/1N94TmuRU08AREtNF07de2KG66/CX1GzcHWNApK8wibTzm5swkCBKQeEHQ6x8Ac+k5pGOOP6KhAPPfym9i7eycBENXMhKqdZbDt0VUE8l/Jzb+waydHdIkAyaqf1ahRg+2gkLZ0cbPS4B9ehvyrCoiODGJcwilqqMTHlEfDenURV7USSocEoiyBy8AbBmH9vkVYsX4dNmxch50rp2PwkFto7CGSfn+TaGcxheQ4mspSWcK62I+62nqdZbMKk1mamsZRR2PJq3Yl5vnEE49h+J23EHBTJY/vM8nhb9OuA9asXYOvv/7apPcc+8JM/8tvzm42/pc3+lxX34/mPVK5e0+aOQP9LqSlYIq40OYHsR1Zd6amBHHBHB4hgkijCqcIgwwTKMhKh4LoL2ard5/dzJf/sj8EHFqs+gkQhVBj4q4Rt5tGTF5D7QX2gQxBOEc6vuaZjk/eBWLSRqCaCYRFptCEWGxoHm7q0ATpxw9gPYGKjIGKVnYSVVJHez/F3YBGXMJt27YgukxZHn05TmzPkcM0eMCQkJBAQCcmA+svYE+AEUC94HTKLOqwLnP2efTvks166sgv0kCOMT5Bkc+YMmhYuw4xxzooF0sHRtw5c40oD+mWFHw2NE72n9lE2FaJ0Zwr4KM87c8BhuwpHrdlRr/nFZdh0sTveUIhAKSr1oCgEDz1/Mu49dZbsXHjRqc+7AO1WzrDqpPuRZc\x00\x00\x00\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\x00\x00\x00 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\x00\x00\x00!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\x00\x00\x00\"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\x00\x00\x00#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\x00\x00\x00$/x6effoomjRvj2NEk1CE2MG7aBLz5ymt46YuxeOl70gX71qQSenmKO2TjisRgXPv+Kmw6FI9b2lWh5y9xEqlK5F+asl+0ZsIJkOxTDhuP5eLZ12ZiEds1nzKHpUMj8dbbL+KB98eoqaeE/tf2pWjLULpo7Fy4TLV4FAz9itcGFO5duHA+WrduS7t1k3B5r2sM503+TKpWq0l64FAMImOnfr2GqFMn0dBbOAtP6VOTYTF/3H0vwGmxJ71397FNbvtYVwV7td89r8rHptG9fipDzsGFZdet18AkmbM1BU3LhZEuywXMOS9wqSAyhjniOY/mnf6odMnFiaOcQ4AVV5ZHQ4ZVq1aidp1appwcHhs9g1M+6XAFaHLb9u1wDRlhH48bhwU1KqMprYMnViiPEH4P41yRupiYNtpYVKYPmR92HciidT59gRA6GBqg9IYzqLZ2jBZfdh1JwdZDJ3CUrgw27dplqlElpDQurRWDcqVr0idIGP0ak8PKU4WOuDw6IIPziJJYLIeYsNotQMw5a/pQpbv7wOn+U16ZQvRHY0MAasgzBOhtapbD8p37ENuYcpKUZwwmgyZN3BZipcGURpCF9OWHjuHNHxczcTj+ScMGtSh8n8PKZBCJ8BNmyLKzSU4KDAtGrVq1sZ509Zat22vxGoDsS2Aqs6gywBpN+vrWHbvx87/uw8s3XoZne12JFlu20YtfOE9MZltx5k3BHCqst+tGbbbBPS81J93fbBw7x/Ssex/qXp7MwcbyuCojiy0UlamNrm92ogs7scG+s8+eV1VW+bsr5xnH/ax4yt9dnvu7573yVhkn8+dkYSTtSOIAPv7EYxRO3YveffoijQAjiGIJxw7vxT3Dh+G6667D6NGjzWLUlJMCPOcicrlTLlxC4Pj5Zxjz6XjmRi4wQ3TlBLoVjMcPPy/nUxJu6lAZNaOoKkUz59JVPEornz9M2wi6vcGAa3vh2SefQgWKDEg+S8T2bXRYs2XzdmwjcyMurgod8VRDbFw57vyRNEfEiU+MRkfAU2c528EjodSHJk78AX36XI2hd95NjLUj86R/DL5PPnEMt996Az2W3YS33nrLOZqwTzTNzBGQbStubN39rEVttUpON67M2ozrqX2vt6cGd/7ueaNYSitVunRyWu+77x68//5HWP5IR0T7n6DYD3EfLYASFogG2pfAJ4MW+ehnicfqfAx47HfUJXNo1NtvmHkgQKJy1DZbF7VN80akCl3lcnHGjBno3r07qlSpgh07dphGlKWfqib0OyybgAEE1OobBePsiXXLJplC/SsufjJ1fNfSbFnSHictpeYYMxX1qsfxWBtKDnEwEirGUQ6QWhWcYz5ED2UMgWCO9vk0h9kWznvlpvqdnM+myDP+Y9YA6yhgpE0/mUyI7xcepKWh6hTmPsq5HoZylEDIoUXo7SQZTP5jC01l7UWtejXpl2YkZU4lskLcmnNSTD9xg53hcPoukNIHK5b9QYMHidQJDmV+BILcKPxoz9+XTLnMlKO4/Z5n8NglMTRbVhYfvDcZ1/1rHG4ccBWtXpOzzvhmjnG6q64Cru5gx0rv1O/u8XPHK+pe42rS849HtkVF51Iuwi+wO6atjK6qyJn4BdYEk+5wSQ2w+Sru2eivSurej8YNtFtypEzjAzhg27ZtQ5OmTfHsS68jjvJ+Uk4P4I43Y+ok/Otfn2IRTXa3bNmS3DrxEp0jlll4ZHRQqoGTJhMHt2+nv4j9nJ05dBITgXKx8TiedBTfTfgaIx95lbEc4Gj7a+SIEbjo4u4Usm5FOaxS5LpxYXJ0/TnD/QsWEAXLSIxxuJZH6BtC7ZcaUT4nqpyy2wWgPPXN7OKsoWiPr7z2Kp58kgLEtAVXIa6aUUEK5eJav2YZ6ZmPYdov03AhhYEF/bKIjYhjV1LfqwyVp0kj/6vSlPE2qN8F+E+Xv/JTO6KiogoBrN455Uobww9f/GsMBgy8CWMGt8DF1fOQQiMR7HSBbkVlMMvEuS38q68EbtozaAI+IMgH/5q9CJP9r8SP//rYzFOJHKl+LK0wlW6yyJSyOud+xN6ETY987DF8M3oU7rv5crpK2I9NO9Ox8sRRJO3be0raUx9IL44MRe0KUYjm5lo+MgxR4aGIpDhMBGm+oZyHoQSgEoVhJ1CeMI+eB9lmcm/9dI5V1fQTkOFPolfnJLAsAa8cdg5LZ1/n48t5q9GydiwakTyQQssxSRTuXkWs+4vFS9GgYX307XsT+5DWqWnPr3rNOgTwsg3InhMMVP9rCJgvO5SIRCA2rlnF43UINw3OQ9L6xI0PIwaRnpaMES8/jmtig9CxZlWWnYeVW6irXaUnxrz7pqmLdPK1IdoNtKg223kpnXPjy7uoSEW805wXDZ1C9aqt6mwuRUR1Xhm2NiuvAosLykM/VVoGCBTXxi8uf9uAZDbWxj1d/lqAVlHapikpfy1AKUo7k5xt5WjJX0IYmQxffPkFBg8Zik8+/4YCrpwIJL4nJx3CiGFDcPddw/HiSy8aYrvKMWXwqkmZR3Un0XfkFSyNWJ3ENkj64DfK7ZHGF0wAKVP2ew8eJU3xhJG7yiGUCqFaU00aLfAPoktANjTf0HB4PKIsocjOmukSqg7k7i9ucR4HSdhPLoGfsB0tZgVhLe7Aoih9k8uFFknrxEno0rUrJxtoUupB1jHYHP/IG8G7b75OmmcSZs6YRVeRZQicMtk3J40buPN036vt+slwgp1ohX3ijui613cBQBHn7Ti5Phfe2rFTHAFYCyxtBH3XDr9j22ZUrZ6AB7rXw7B2lDEjJ92X43VSgFz95+4X9RcxMubrTzWsXNJjA0L9sfZQIC55bTZ+p4mmZs25uRGwO5ZemLYgueqSwfzTiInolcZa+uELly0kI6wLnux7MR24Z1HjlZQxHqI05o6JLJ6WmFZgWbRHh+RHkgqPhwKi0mIRLFN7jOkyvpPOto7neYyssoyqGPMQ6FY9xFDRVa1Ti4ggmlDYbwLejHPawDyUg+aRgJb6xcinMr0P5fWC6f9j2c5jWHH0GHrVTcCaTQfx4eJlQOl4jBh0PRJI/onkus7lRjB12k9o174tGW704ax/nGxGnk91ZebErwwAPHb4ELZv2ojGdB4lQWxx9TO44bz58ShUWrcK1/VsyfmdakS91C+3fTYNG9avRY2EWiQ5HTPYv2mn2mfqf2or9U0/wRtrdMP0leIXE/Rd8MaMe2En8qU+FPdTXraw4q6Ko/QWYuv+dPnbNMXl6X6vuAp6p7ztva4l1dvGs3mJAOvHWXQiNQWj3/+QamX3cUJSBUiDSGn2tWt0fAWuoxZFAHcx5a1FqUkrDEse4Xyl1cGjgfbOXBLXUwhkswlMMoyLLRJ4OUmyiDXGxpRBrerVUa1GNdSsURUV4+Ipy0XgpzZwQxFW6iPn0aS1+BGYSiQgSHQk0kf8CQj9qc0huUER2w32qnHlz7bFXs1CI9CVpd2y5crxmPsm1q1djSW0JhJMrrK42mw1rrjqKqxauQY///yTaaPh9rkmizBsm6f7qsj22d33xfW7jeNOZ9N7Xk1F+EfzRsHmqT63/a730RSVGHjdDXjx5zVIyvQjN9ICB301oEE3ruAAEV+Oqxz/GIDCfihL4WCFw0eOmKtjDEFz/2TZ+kCQxUqps/meWJK0hBrTG9wD99+LR8dOJdOAgsXEaiRqE8Y+Ls1fWTJsyoX6oUwwT0F8jqTlE/nfMD6aibnnccOThZoMHjdFG0wT8DNQT8d51oE//ieQ1ECreM4T3ejKnwV+emX7Sd+8CcLwjJA16XCiR5q5zHJ8eAQJDpALThp3pYbM7GVbMeKLqQb43XzzULzz/LNoTLnSQM7b5FRal+EcrVW3HlasWk6/ITT8SkCvI7TWj8aWPB2uD3F3sxBZqjRFuI4hhxaEQoJDWX4mvv5wFEqtnYXeV3SmgPZx1oDpOb+DKMcqSu+yVesM917ts/NR3eE5b/Rsg+7dc872TVFXdxpnJtg35+jqrsg5yvKcZqOFJixmw4YNWPL775T7q2WI7dqlU7kzfPDJGFw/YADqU9xEQe2xnV90RTh5Gcd0tpPCeea9sB+h2nKWY+45KaQ\x00\x00\x00%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\x00\x00\x00&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\x00\x00\x00'KLhmPxlwHalelynpUabDECYR/n/Hl1zZ09HC7466/WEpKkt1z1x+xA3za+vY9yV556Xm0wett9Jix1rxVG6tbNwHqG08B2uCoDCiB/4tJ4+HPpSjASJRPfdAOKuURlCCsnHBkfK9CDHwXtVEBtVdamoeipJZt3lNkfU9B41s30tpc8IlNvywGNriepWMY3eT8mTbn7o7E+0uxO6/vYg89+izxFK+01KRGyOiIaIwpiqh1UW9Vc606uFeXw9Efe/RRu/Kqq+z5l990lJOiwehAcB2dqXeqFinzGJiOhuCjfwXm+8/v5D26qKOyaKyq6tSTyt+MovteyhoEz3EcK9GseRZCfEyN64Ed+zgHeaE99+4zyDbNmqbVt7smDCZ8/35sJolNWV6Lw48EmyqUMmgGK9r7XtUgoBh41t1SEJq+qamKEBOLJ4sOkZ+2cru9N3+V3X7HPXj3NCfwghezk0cO1hVVR6KBzh072Zdffsk511c5aw71KRAWKPYXp/8VBKiFFgxwhMH6Tpv2hg0eNdZ6DTnZue3gKsjBypw4QBj5rgOz7OVlc+y1R/5pu/fusokTznaDXiphNzMniseRcSfQfX/ARFYrSd7o3xPCWbXiB7vtttucyYaE1DUlvaOkBSAAE/WmsvzvAvZiXJAUxDSHcFPl1JeHav8HFA05udlWgqzkMCy+TAfyEBi//OwLNVV1zPttiSJ9ar+BTjyAGNwq8A1rhsasaUZzFJHR3K9j76CZO3fCRLsAqq9Zi9b0LtiuIrjrH269wUaMHIWW7TT79xtT7Nabfm8333aHZe/ZKzB2/xw7Rh99RHPMRvwv3fTapGXkzYFYtvqwTEoL1u2z9nXj6Ku3IN1NPhToAFsLqA8CeRaGWO3ECHtv0V77x92dbe0XYy3r4vdt+6YS27noLNux/bB1GfOWzX3vLLt6YpbV6/KQPfHEYzZm4tl2zeUX2UA2D5nPKAWOj9s02OZGjxnjEODyZYtdoNUSuZc5GAlAfu7t/50PtVxwq8ClglMZxIcCPzp3uHB/AWH+N9oC4kd+MuNT18CRnVtY94wkYhziU0wEndqJsfbYnDXWLlM2hhpnhwErO3NkXvzeSfQgGlG0YYRYfWxzKuA6DpVH22fLttvHi1fZTbf9Ge12Byi/PLdZaH1pPEU2KIkWyczMtH898qDt2LGjKtJ84Pi7jL/w438cAbqgjwCFiGLs8dlZI+1bIrCcPO40Z2+kgI1RAnBwUDaIMKpeol165132xRuv251332NXXXWl1VckY5Cgk1doLXgw6Q0BZQf+9BHWkQHzFo8Ql6oRxebHR2vXrr1DZvmYYgDhjpLQLgTRrawuSXUvmaWS1O4CqPXr1xM5OB9B7VZbg4nNgewD9uqUNzln5EeXL/CjDT8ENrX4a9TU7MYRuCVhTa9QQIogfLSVvIBBNlzIgQQJUKyHMQ5d9M/7bSVNFA24lr/AdNakSfbGlCnuVsNGGe6dQwiU6yelADz1bO36DUQxGWWXX3mdffHpx/bX++5xeSdNGu+u/qbgftTw4Y9pDY9/49tQHlq4/JWyUWWgCb7yqkvti0efsond+zJv2FjyT0jfQ5QSTSBTq8CQFtVjagyG8PN/tMUb4qxHy2b21n1jrPfEpy1nVzCURpJ9/uIo633qc7Z96fU25ZFx9s6s/XbPBbF24dgsu+mpj+3U04c5EYygTHuhE1lwFVeQlJTEsaUv2OTzz3cHbEVGxRFVhbpBOCcyrv/NwAk+A+FeZfnz5F2Vg7BdmJvIDlKRyRX8Y8fmHUR+XmuvzZhthvdGozpm5w/sZM3q18ZThiCpmNUQ4xwby3yCpsZYawL87uH84BYEkziM+UolE0XZ3hrx2qBPYJdPHZ+pYLwh+P5W4H65E7h98rN5tjP3gF174+3WsWNbF5FIVLvWszYszZ1rLWtNxxLI80dp79697ur3Sz+OrGv36Gd/VJ0KdyJvBlZcU341qCYWUu+IEFbnJAMsQQg9cuRw27pnq731r8dt0IRJWJCiUcpjwKDuIslYUsAewqCMPPccW03w0ptvu8vGDhlgHTBclTGs2A/Vp6uGXYcru4FnZiRzcQhOyKMy+ZpmbTJaKHrJR4D79u4mFywOt8thsYPZtSpEQcBShjJB4RjG5hNufv2WLbYVlnn2nDm2B7e65595xi/eXRXVtn37ZBs9srfVwcA4BkF7CCG4dDwm4ADi96iUEvLpuwt176TFWrSo+vmn/wwlVzEPeBzw1fHUBJdsc/YQGshD2lZOuwrp82EUGvu4PleJ/Fx22HxpCRkIAD7Oho8Yae+++7b1JKR7KNGsh40aw4LgjIyXX7a2rdo5YCqHBdLxitq1/VQdyPT7p2DhWHn0TvWyAuvwy/zPdzUQLDbEAfkg8y9nfG0zZi9kPoItFg3sh18utS3k2IVLWwbmMPmHqYcwSxUV4VYIu1UvlDMoGIdcjjGoWxFhTTBTWb6m2Lq1rLBuHc3uurqbPfrOevtb45Z2SvcUu+GiHvbR5+tt5MCG9ren1lh63Vb26cybLaHtcPtqxgwbkJXlmq32eqwwMM93weGQIUPd6XFffz3DRhFtRX6yNAREofFkUh2U6qsm2BVzzA89Vv6q8Qp81c2NbghSvLIBLYqUJI+14OBG77PaBLcgPYmLFMC0EHOv/bl7iBa+wr78Zq7tWr9SGW1clwxr23WAJcaEcRocbQbgioguXgF8lGIHI7mcGNkWiWG2Zu9ha5wEonI2LXTDwQNwDUUoEY7apWgwoZQhRVAoGnGchG39oQr7y5szrC3umJMuHYGxeYhzG5RJEhIeFcQ61rB48KUoN1rVUWiFx50xyUUxz2Ls/THx4UXtV/pPuPHuB35Wz/OzKED/Zb9ivyF+Bbqve4H5queRAaqSDvhxWizYx6uuuNJ2bdhhLzz8sPWEEmnYvI2VF3g7SjiAI7lLdl65ZXbuahdnNrfPiG835Y7brVlaunPn6sl5AzIM1ZkN9TnXV/HeZC6guhVhQknAKWToe6hE4rQN5nGUVxCTpaRQSxp+hRLS6WEhkdiCwc7mEe5Hp4At+HaRbVm/zh55+gmXXx/t+Tu3X0vLSGvAATdYj9E/yesomIgdCIW5lsr3EWpR48Oy5A0PQgXkJW7MtDgAGyFxN37KQR6+S6nhtGa0PQgEh2GEe93lqyxJMsfa4cWWwo7dpUtzq0hrZxu/I6ouMh6YdMYZcpoxicUYen/2XistZhtmd6WndvLgETZrznwOf1pgAwcPot/UTJ0aG28+aZsaqiaTjre5eTmO/vRhxb/rw4j/W1c/jw8rx8pDxcRrNJs+fbpF7P2r3TqmMxTMASjvcqszKtJuX5Vsj3y01W4e14QT40ADnKkczbhHMqfz1uZZJgs2EcpdZ/A2aV5sKzZhcM35thFloXbOuC7WpP9rdtGoVOvcoZZdPKGjtRj0geUsa2GjRyRS52Y7dUK6LZp2kXU94wpbP/NDi0vmpD9cISLD8TACuSqKiuRnOpvi5htvJuBAVxdTMim1IeYhUFFsnjojRmyh4FBzq/k+KjHGru8MtihcjbVgX1SmPC78ZxiYuLnT3AaJDeV5KXERhWRDOEzeeX6Awdgf2AwQxQh+N22ybRxB+e67H1Il3i6kUztzYuFpaHOBm3gi2VSgrCiBTS1AQ6uWSQEnHtYZKxO8tAQuJa12rM1blws462xpNljJ6ahLbakAIYYh1y8B1hQjWrAey6ZVCPzM3XaIUFwLbMCAATZu4vlYH9S2OTO+sAzOowljLZai5HSny9FP12fg0J1xLINBJl6h9dUHF6MwgKL217XGxv/uOneCH1WG0CqgpiTADHzuA+qx8ivfsfIG3vPz6CpzgVCAsEW7VnbN1RfYZZdfbdf/8ymLx22rGABlLtxkxIhlZe1Hcw7hxAvPsx2Dh9gPHGqzZeNGm/n087YL1rNgxzabDIs8CllMbRQFDsiYCAGcX788DZScUFuTJ8CFylKK4DwHJdln5R/Ks2Xzl3Ks32L74y3X4YvpHlkLLleO6m9J0QAN8pNowvcEOb9PAbh2ToCRnVbkfBH9cyySGz9eFE7Th76KImCy/d9CmO5gHof\x00\x00\x00(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\x00\x00\x00)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\x00\x00\x00*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\x00\x00\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\x00\x00\x00,SYrTgjqXmmc7ddSPHuGkv0/6lUF6eEkHLWG0+umJ3jwHQP33ngzzibTQeCszLfb5EcgSBRAPbtqy2b6Z/btM+/cQ1//ohaHkx+pepUikKp3IprEB8ggC/DCf/hgCQSY7cRIPgRqKR/e0iIvEbS7fY7IcvQvaHnSJrPAgCIwD/uTp+7scvRoDeQHmkqr5L/lbOIG/essM+JvzPlk3rXRDOw7gVLft6trXAT/CCcyZbp/Yd3GD9JvCqnQQ5Xx5UYBdGYnz7FLvl1e9sS/FKm9CtsaXHQZKzA+czUU0JbtociiwOhcBzf74BP12zoe2b2+Lpn9h+TFVaN29ppRz4vPvgYZv5zTd2M/ZJTXg/r+CgJaPtS67H0MGydc0Y5Nih08EIB5H7FDG5xXiwCHgOgOz3wB7tBNkGFW2zsl0HAUZBG/iIXYJhEwx5rDMLJD6CyC4t0vBvNlj1eDw4FCKIeCX4RtZj0UTzUj7C7Jdf/9TO6tvTnvn4E/vmq89tQr8ka9ciwRKCO9s/P5ljPVs3tQmdMcsIZzyK0KBSniLihGPQXQrgF/On805CMO7WYo4kwkkO8/TF6o32+eKN1r99MxvVsbnVCy6iPgxdyR8jlzsWfIlkcAR/kMb06DmkM9Xu1ASM/sLyr45iANCDceGIop1y3ysmRl/WoN72wftT7ZSxo23x1CuIEEQQDfgghXYKpm0yqJcNmmo+eqnWVPN/ex+ES6c9vCDUq7BOKPBi9tvWvBjbA4nXoGEzb2ykJUNJoiHx2gY3xLdyKOkItNl9+2VxzOOVdlKfQSh2EGmQT2IIZ6DMeS31k2MdFeYQTbVma9y9sXPfHNISUSEKTtyEMJpiBRShvfWRlV+OEIyXvFbpO3uhSw6ZucdHkJ//nn+VTaOoQyEeyb2FhvVfFGQM/ZJiKp9NYNbXX0P1veHKndCrvXXNxHMGSzNRdM51FdY2RBR9VTOEPN224thd9SEPbqB+FMd0Iv+9/fUv7Xe//z22xH28vrMWHNrUhFSmqq75N07gGoQ2lbGsakWNr/isofL6g+ECCoolYADnzfnGpjz9hH2AHdGVRGSOT0nBVCCVCLn1MFQ9ZA/dcqtNe+/ftmHTRquLH6lc2lSOypMWWNpCvx1++TU1RlrgQ9j6aSL8d5RX1FUMmqFFazdZXw5NevmC3rajIMKenrnaNuzYYRN7tbFO6SCKSLRcjH1xca4FoU0SkmBvxA0PeQ7U3e4921loBZaPrZ1C8afUzwABRXvyMxfZ11vqMqSWLZUCOwgQZGumiRNWk1JFh2DTQBd9xbNX0s8jY+31k0l3t/gAiUoGVwa7JKDUr3AQI1aSUNEYU2tHxNVoHyYzny9Zb1+s3GS9mtezyRgEV0Ddyg1pe06B3ff+XAurk2R/zGqGeQ+noWEwqnBK+ezMUYx7lFhh2YBRRy79XIRt5msz11pL3hnbuwleDlhPM8ZqGESkE2OUYSsYTVTh77fstnW12tjTDz9EfDaiorDo/H54o3Jk1tRXzavmV9/9eZWcSN/1pwXrogBD0+VDdu7O3cdMgJTxPqmFP1YUUVeen/KqXXHJpbZh7vWWWZtwUhiER/BuMatQXkOiHo4sgyP1/098E/KKw8Nm5qLDlnX2FNu4ZQPhyRJQSCDUDCCT1X8pCLRmFFV79erV1rVrV7vnvr9ZZtMWyBHzPSJCuyLJhxN/zAL7Uv2ZP7bHyhv43i/97pevq/oggkcUrTfmeI5AEMi+MCcH+fiPK+2pJx51VWW1a2IDmjewRrFoeFFmlaDECoEkZdkeNwkRygMd4TrKrxJ7ed4q22jxtmjG5xw/kO4UhH5ffVZdWmCZFFXHCceqSP2o0gIfK8OJ3NOOIxK7iIXyMIcZfciBQZfddINdiEFuWHgkA6UdiM4KP+TH2g78JB/91z8tASGvH1DzROr5OXkkRxNpnZlcCxlSK9tbEgm1FmLXDWxrS7fG2bMzV9hrFDi2O+HPMxpYaiTCZnbJMoIIaFGKcqsFEoxuSNAFWKwIRctFECtgPlycB+mNVFCyH+px/WdhS2ZRgVmF0JU8PpS0oEXpaTOWfEWqeoVbCkwOqLjhkICu/ImWUQAH7aihvCM3oXLqFgVWxkBKihSMDVo8NlxCVJB49sWSjTa0XbElxsuKP8iaxkfaP84eZB9/v8FueXeO3T++vzXA//ow/aujsulfUUm47USeuByN8bsL11omkVVuGN7NMnE8j2BnEOXrsCNtDxeSYddWwAhZm+3fu8XiGxAdhgn2ehvYqxP/rv4raax+XPm9PfXoi1DAW2xgVqLt25Fvs5fm2vfrQuziCydBjWdaz66d7cEn59nfbuyGLAtkSSSXcNg/MDV//1voj/ajMcf30dZt2mfNeg8kfiVsqZCDNr+Adum3EIcWqK5pRJ45Y/x4m4ctXHqjDHffH1Dl9d6niGOk4z07Rvb/+pbq03xJESEEzg/gSEF6MZXi3w4Ihh8WLeIclBepq8zaN0ix4Zwp3BjFTnDZAcvBKDWGACThcGdFOipOSq/jJKCc4HcYXGP+9O6GfPt23Q5bMO+tSuSndXT88TlO0f/x6BezwKJO9P8hwkPtgQJ68tXXkCPpSELI78Py/sBHEkf74pz9dtPFl9ilk8fbOWdNZPJlDCAMfyT5i+HInV/2TeU4Fg02ce3alXawTQpO9AAjg96ncbq1Sqpvyzid6qW56+z9BVuJl1fPerVMsbaww/FQhWGEcC4vwXgAZCVEV4TywB9sp94HcEXqq+0VUL4KJS4E6OytRE6hspegW2yMotA4PoFFyoiwUjTUgawFI+gjAbdYeMy4SLuo++54SuoqQ95RIRkdlUrpIdlXOLZ60mqPat8AW79iu/OdmfaXCb0JCRUN0lfw52I7DduqJom17dZP5tsdw7tbOlFkthBVZ1POHnvhhwMEYdxnfVon2Y3Du1pDPCMiQHAlzE0hfzLACJFBIvVgKeUWo3M5AikX4lWShvY7HER6ohpC9Sww+bu0P+9FIPpm7VvgI11gPy75ynq2zbS+FzWiLcEcT3mv3T9xma3AfP7bRVvspJ6pHOyTAeUpLwqE42hJBW1HAMrNDncEYyI1jo2mK4fereUjeZRX73vJRzRV0+M/qLwK/UaCwPcdCreL/jjNnuVs4vox9WDZML+iKD13ramsTOXpTwq2eOzQzp400UaPPdWyBpzMuc3phH5H/ilDT8Qoar+Sxshvh7tReS9wDKs/9/P94uvRw1BVjNhfHaouGVwh62TDqh9sydKl2PP92+U5g+AaCnG/ak8ua8pc8Fdt2lGIThS9WRHZZQspeWNgFd53b74cYQHsFSMK+XBFrn25YAkRtT+0bj17w5SwEbPxqr/OTExU1n+ZquwAf2oQNRE+wPo72ayZX9ui9dvsz088juM0jZJHAkZ2YVBdimG3fe0K+/NNNxLo9CI7ZcgQMDr2XCAReuCa7depq1+2HgR+r94/P69/9Z/7ZQWjOY0FEVx22WWWvXIu4e0TnY/tYTBIDKe+DRDCa1Ab+7a9NnN9rr083VM6nNIqkdPAEi0Z1byOCQxjpwsOxvgWY+AKwgNXgNBKw2FTiqLsmw1Y8TeFlYalDFK/mQcJmp04X/6LsM6yjocQAJGAQMTWouFVt93GUdVopl5955/GRTIRsYQSK4vKlCGtovBKoF0GJRgGNerkJDwrBilGgqBO79IUZBRt93z4oz14ahei6oAOMPcpRmbXIbOOXR/V2e55cz7iyhDi3FVYI1z/Lmxbm4OtG1kdjhHVuBVBGUrjLEZeJ+TpPAsa5J5JaK48NMuhE7zNLAEWTzJfyXPUfm/svTn1u6Zr9XkM/O3Pl+51whhdfwcxZF20aLm9/ilBZ//1rJ19eiIucsPsgnFDbfbc9fbCm1E24YrZ1vPrdM68UCgvKRY8JOdHTSnhPOBQ7OHCMOQuDakMXaURJq9WnsJqSGQh9zkJ6h0lqz7IPYdx9ZamRCvMIXPmzF5YtFJgCAZ4xVu8zG8wkWtCYPEXLM1x2K5f1klQf3pXwyLPHw+unda/8rv6qzoLYdf6nZRlo0eN4vyab4h6cybUMMjcjbs2WihF6j0iszsysho\x00\x00\x00-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\x00\x00\x00.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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00: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\x00\x00\x00;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\x00\x00\x00<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\x00\x00\x00=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\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"objectbucket.io\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"lib-bucket-provisioner\"}],\"deployments\":[{\"name\":\"lib-bucket-provisioner\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"lib-bucket-provisioner\"}},\"te\x00\x00\x00>mplate\":{\"metadata\":{\"labels\":{\"name\":\"lib-bucket-provisioner\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"lib-bucket-provisioner\"}],\"image\":\"kubernetes/pause\",\"imagePullPolicy\":\"Always\",\"name\":\"lib-bucket-provisioner\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"1m\",\"memory\":\"32Mi\"}}}],\"serviceAccountName\":\"lib-bucket-provisioner\"}}}}],\"permissions\":[{\"rules\":[],\"serviceAccountName\":\"lib-bucket-provisioner\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":true,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"kubernetes\",\"openshift\",\"object\",\"bucket\",\"storage\",\"cloud\",\"s3\"],\"links\":[{\"name\":\"Github\",\"url\":\"https://github.com/kube-object-storage/lib-bucket-provisioner\"}],\"maintainers\":[{\"email\":\"jcope@redhat.com\",\"name\":\"Jon Cope\"},{\"email\":\"jvance@redhat.com\",\"name\":\"Jeff Vance\"},{\"email\":\"gmargali@redhat.com\",\"name\":\"Guy Margalit\"},{\"email\":\"dzaken@redhat.com\",\"name\":\"Danny Zaken\"},{\"email\":\"nbecker@redhat.com\",\"name\":\"Nimrod Becker\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"version\":\"1.0.0\"}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"objectbucket.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"ObjectBucketClaim\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"my-obc\\\",\\n      \\\"namespace\\\": \\\"my-app\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"storageClassName\\\": \\\"object-bucket-class\\\",\\n      \\\"generateBucketName\\\": \\\"my-obc\\\",\\n      \\\"additionalConfig\\\": {}\\n    },\\n    \\\"status\\\": {}\\n  },\\n  {\\n    \\\"apiVersion\\\": \\\"objectbucket.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"ObjectBucket\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"my-obc\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"storageClassName\\\": \\\"object-bucket-class\\\",\\n      \\\"reclaimPolicy\\\": \\\"Delete\\\",\\n      \\\"claimRef\\\": {\\n        \\\"name\\\": \\\"my-obc\\\",\\n        \\\"namespace\\\": \\\"my-app\\\"\\n      },\\n      \\\"endpoint\\\": {\\n        \\\"bucketHost\\\": \\\"xxx\\\",\\n        \\\"bucketPort\\\": 80,\\n        \\\"bucketName\\\": \\\"my-obc-1234-5678-1234-5678\\\",\\n        \\\"region\\\": \\\"xxx\\\",\\n        \\\"subRegion\\\": \\\"xxx\\\",\\n        \\\"additionalConfig\\\": {}\\n      },\\n      \\\"additionalState\\\": {}\\n    },\\n    \\\"status\\\": {}\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Storage,Big Data\",\"certified\":\"false\",\"containerImage\":\"kubernetes/pause\",\"createdAt\":\"2014-07-19T07:02:32.267701596Z\",\"description\":\"Library for the dynamic provisioning of object store buckets to be used by object store providers.\",\"repository\":\"https://github.com/kube-object-storage/lib-bucket-provisioner\",\"support\":\"Red Hat\"},\"name\":\"lib-bucket-provisioner.v1.0.0\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Claim a bucket just like claiming a PV. Automate you app bucket provisioning by creating OBC with your app deployment. A secret and configmap (name=claim) will be created with access details for the app pods.\",\"displayName\":\"ObjectBucketClaim\",\"kind\":\"ObjectBucketClaim\",\"name\":\"objectbucketclaims.objectbucket.io\",\"resources\":[{\"kind\":\"Secret\",\"name\":\"secrets\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"configmaps\",\"version\":\"v1\"}],\"version\":\"v1alpha1\"},{\"description\":\"Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning information\",\"displayName\":\"ObjectBucket\",\"kind\":\"ObjectBucket\",\"name\":\"objectbuckets.objectbucket.io\",\"resources\":[{\"kind\":\"Secret\",\"name\":\"secrets\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"configmaps\",\"version\":\"v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"### CRD-only Operator\\n\\nThis operator package is **CRD-only** and the operator is a no-op operator.\\n\\nInstead, bucket provisioners using this library are using these CRD's and using CSV [required-crds](https://github.com/operator-framework/operator-lifecycle-manag\x00\x00\x00?er/blob/master/Documentation/design/building-your-csv.md#required-crds) them so that OLM can install it as a dependency.\\n\\n### Generic Bucket Provisioning\\n\\nKubernetes natively supports dynamic provisioning for many types of file and block storage, but lacks support for object bucket provisioning. \\n\\nThis repo is a placeholder for an object store bucket provisioning library, very similar to the Kubernetes [sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/blob/master/controller/controller.go) library.\\n\\n### Known Provisioners\\n- https://github.com/noobaa/noobaa-operator (NooBaa)\\n- https://github.com/rook/rook (Rook-Ceph)\\n- https://github.com/yard-turkey/aws-s3-provisioner (AWS-S3)\\n\",\"displayName\":\"lib-bucket-provisioner\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAUAAAAFACAYAAADNkKWqAAAAAXNSR0IArs4c6QAAAAlwSFlzAAALEwAACxMBAJqcGAAAAmhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjU0MDwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWERpbWVuc2lvbj41NDA8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpDb2xvclNwYWNlPjE8L2V4aWY6Q29sb3JTcGFjZT4KICAgICAgICAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+MjwvdGlmZjpSZXNvbHV0aW9uVW5pdD4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CqBAHCwAAEAASURBVHgB7F0HgFXF1f5e3b5LLwtIB0GaoCgKihRL1EhsUWONRmOJ3Rg09o69gYqKLcYSewGlKBZUFGtQQVFRkCJt2b6v7P999+1ZLs/XFlh/ojvwdu6de+bMmXNnzj0zc86MZ+3atbUMSBeKiorg9XohWI/HkxRcz/Vbv369EycFrHsg2EAggIKCgnr4VPiVraamBmVlZfX0pCojGo0iLy8P2dnZGdGussvLy1FdXZ0RftFfWFgIv9+fEX7RKt6IrkRB+Kz+tbVR+PxZKCrMIajPAa+tjaCqKoyALwB/UO9N74Lvpe4qXFWDkvL18Pp8iEai9bgMp4Ok7o/KEl9yc3Mzol04KisrnZ+1BTe++Gvh13vV+3XXKx5O9/ZcvAmHwxnxXvSoXSq2/IlwW1okEnF4b/epYuELBoPIz893cAs2EQ+VbmWrzajtZMIbvX/hzsrKqs8vXImC4VebV9vPBL/wqF362A4sfyLcStNzhZKSkvprJyHJH8GrvQu/5U3GG0MRCoVQWlqaEe3CmZOT4/x0nQq3Pa+oqGC/qMoYv/VZvxHYFG8dHFDj3iAcPQgEPVi3vgRfffklf4vwwYcfYVV5CbJ8eWiWlYPeAwai8zbboF3zfHTo3hF5zQoRDFPghKOopWBQUCcQThMUW0dNm6ho4sD/PweaBOD//zvYiAIJKn3VAgFplB68Mf1V3Hb3ZEx9aepGcHpx4Y1SgD5Dd8XRh/8RQ7cfiN49e1BzjH2hpZmYhhqXJe7W9Mi45KbbJg78SjnQJAC3ohfraGgUgD6fH2EOXx956EGcceZZDoUTjxiMoe2iyCrIRxWHv8HqMIKeKNYhiKXrqrFkdRVe/GwBxp91ugP/+/1+hyOPOho77zwMrdu04fCgGpFI2MHNQQ9hYsPG2HWMCRK4dUpjLKHpbxMHfuUcaBKAW9ELjnLOr9broxCK4Jkn/+MIv+NGbocjdyhEvxYhVIezEI6G0TxagnCAc0deoAPK0a1dEKG2udi3dy98O7YHZnxThQnPvYznX3wZY8eMxkkn/RXDRwxHXn4Baqor4WFGL4UnLxwt01jg4X0sJJ/jNdimuIkDvwYONAnAregtSvxkc8FgxowXccKJJ2H/XQbg3N3y0Dw7gpIqCkdUUzh6EakNUHjxnmPgEBdHqqJK540/iP7Nq9F3aDYO6DMcU7+swpXPzsT0GTNxwrFH47TTTkOXPv2oXbKg6hAivhriNKG3YTJ/K2JJEylNHGhUDlCHaApbAwc075fFoW/Jyp9w9WU3kKQALtvDjyJ/COsqqa1pRZgamg8RZ5jqrP3yj4asWT4Pcigca6jZreMCSFVVJdrnVeMvQ/2Yfd4wHDNiW9z7wEMYtMNQPHLffahevwL+3AAXRqQJbhCAoHDVMLgpNHHgt8KBX70ATLWEvrW95FquAH/0xeeY+/EHmHjUDijO9qAqRJMDr8dZyY3NEUp92xA8iFL0+VHqa4as2mrk1ZY78NGaCGqqIuhaGMGFYwtx17GDKFPb4LTT/4ar/vEP/LDwIxRkZ1EIxsyWhFFC2LGq2YC+6aqROLC1tUvn3TdSXbdmtFuFAGxM5jcm7s19sT/rBBRG77/7roN2cOsKlHtpu0iFLFC3MszHFFDBuGIpHGkbmB9ZDz+HwmFfNij7EPDS7IXD28oItTzav+2/bS5mnNYeB+/SHxMfeRx7bL8rZr0+i3aGAWqRsQURL+Nfq/6ndvAzfsdxMtXt5uRNhHdra5dbun6J6pxp2i/JG6+7MDEh2U9wBmvX8bEqqPwG565wMryW7oaNx2v3BqP7+HIMT6LY8ik2XIliN5zBWloivJZmMJYnGW7B65kF97WXix8hLlB8u/h77N8JaNWyOTzVNPamcIu6pZIWL+JClEPXKn8uaigcQ5KYnAus8vg5oo0gK1LGYXMUpeUhbNvSj6vG5OHSA7fHSuLYb7/f4/F//9spV/aHVVx5ruXEougycxw3jVZsfD2MD/GxwVssXMl+bpzua+WNx6t7C4ZP93YdH+uZ8mywr1RKLCTCbWkGozgep/ve6FGawToX/GO4EsUGY3ncON3Xhl9wurZy7D4VboN143NfGw6D072FRHgtTTDuPG6c7mvDpbRMaRecO7jxxV8brNIVLNa10ZooNtj6RRBDrAeJgiFJ9MzShMPgdK0GZ1brbsIMXrDucnWfKrjxC7e7rC2FX+ULl9EeT6ObPj1zd6pU9Bvtxg+j3/BpBXY9vQg+X7oUQzvmIita4wgzzdGFyBap6jHuOGqgZXNichEgfKx8zRdqmKxUD0LeLF5rGB1BaVUt8rNCOGmQB32bbYdDXw7huD//GV/M/y/\x00\x00\x00@Ov/hytCjMRrimGr5AroPLeODmra7lUaF6pOONYC1vKt6oEoIzfFaupRsO3ccH5ckUt+EXDrtOhFvPRIM9yxS/8Brt6fALd0PxC168l2G7ghuHk1D3x8rWbaa0Wx6jPx1uPU+HW+W74YRbeawsPYsP8c/SlRGPP5N2KToUhNtvzDRC3AiVZvdifCKCLZ8bVgUIr4ixDu+Gc18Lp2CFPz4YMyw2WhTLsFfp9iw+r90bQxLhNxjDYfh1L/zK6w723J0m2lXfZPiFS8GYrmvlUbo9E14nje2htCqE/CBn9bxhlHkDyAJdnyTg6kOyj4Q7fcO1Ixzr8ub6alHCxeIczhnu2t2Dt44I4tLZfTHhxptQsnoVrrz2WjRr0x6hUEyYqv6ql+h0112ubfHv1f3cSFWdlB7PG8MnOLsWnILyKBhvnBv+icevezd9BqfYcFqa5bV2qfR4+g3WYj03/JZmseG32PDrubUbe2Z54mPhVsiUN8KnPIbfjc9dvjvd3eYsPZ4uy2u8sXorPVnQM72neNoFb/gtNvyKf6k+a2WLHitf1xZEu+or+v3y1VSGVEFI5KOpDIbc4vh8StevIT6a8v2UH6IbZ6JrpYlw+a8Kv+hSUHqqIP9V4dfLVX43bnc+PVcdxRP5D2eKXz6O8nU0vBa7ceva6HT7VRuMngWDWRjSuze+nTEb1R76/0ZLJRFIB/Ma4GbEIQrS7Fo2XA/9eauz0bFlFm7Zy4NLcgbgbq4Sf/X9ctw2aSI6F7ehL/TGPqeiT7yT/6r5DosUq1MysuS/Kv9Yyy8eG1/defRc6eKNCc50uEWP2+dc+Q1PItzCK/wKBuuGi7/WO03VLg3e6ib/1WbNmtXXLx398l81/KpLMt5Yu5T/qrXLdLhVP7VL9S3jicVGt8VK10+8MRjFqYLwivcKKkvB8jo3dX+UprrJ51n43bBuuPhr+fU2pM+qXTaE99ZnOe+9oaIiLtHPDaNrvRDF8T97gQYvXO7rRLhVcYPRtXDE4zcYg3PHdp0It9Isr13H41Z++wnG8Fk+u0+F33ALNhl+pRtOxZbHriNsUMFgAP16dsaTPwCrK73Ip6alDQ0ILTAG6XMba6Wx9Mz+ejkbWMuhsI/eI/z+0bE+hMJsL64YXYDjRvXHrFmv4p9nn4bvv/8BOfzIqOF6ktBtPFPJqXhjzwUvAWT54mPBKc0N79zwTyL8ehYPn4z3BqfYcFma3cfH7rJ1LdyZ4BescDcEv2BT8Ua0GT7Dr1ghnm67F7yuFXSdjHalG353Xicj/1iaOzacSlNoCG8sr2I3Tve1nim48asOiX4Go2cKBqNrN073tZ5Z8OuBO7M9SBQbnBUaDxOfLnjDb3ndeQw+HsbS3bC6Njh7brFwp8KvvO7nlk/pqYKVJxh3/vg87vKT4Y5PVx43frYiB+2uu+3uxF+vDqFdJy9qOGQN0DOEq1UUWkH4aBJDubRJIeKhAKoNcVElQCEYIo4oKmlUXeStxNm75tPOsD/ufWkawrQnvPmWm1Hcvh3nBEP0Od7AX6NbBBhPLHYTZfXVM/dzS3fDxl8L3s0bd/54WN3b82S43emG2/BbXjfeeHiDcafHwxuM0g23rt3puldw43E/d6fHIBP/TYffcgm34U+G251u8A3Bb2W58ViaYjcuS7c0o83SDd7u3c+T4RdsPJzdW2z4FLvx6Hn9IogbKNm1O3MyGCHNBE75jcCG5ElWbqJ0w69noilTuhLhSpXWENyJaHDT2adXL6eoZz5cjp1bFSKLK7uyVa7l6m+YdjBBZ7EjNixORVOiZx65jlCDVMxZWl5x2BXlFlEUeC2zKnHOLjShCQ/EQy+/jEigADfdcB06tm1OdxPCSxt0vVvVw013fHn2zOprcTyc+z4TGDe8XWeaz+Dc9TAc7thot9jyuWESXbvhdG3542Hd6YJz54uH3Zz7THGLnk2hQXkyzZsp/k3hTab1FC/j8W/6eCrFm3EXkgLsV/NoS9RXOLSFVavWrTF5yj147N2v8fl67tUXpFlKpJpDX37NvbEdYjJtTD9nsE13EBcxCqePZjMBby09SIC8YBQX7BrEQcMHYepzj+PSf5yL5atKaFWjleTYR8QE4Zao88/p27SUrYmWhtbgf5n2hta1seA3h4eNIgA3vYM2Fov+N/BSEXPC78bu68QT3/ke62pp+ByQlkB/X8e8hauksamXza4UB9Oo5kpzLQ0NOeOHMrrG5eT4cenILOw0qA8ef+o/uHz8WShdu8pZwXM2aOU8ngUqAE1hMznQ1Fc2k4Gbmb1RBOBm0vTbza4J6XA1ijsU4957J+GF95Zgztec+ctuw70PaALBoauX2pptdLq5jOIAmKvClZxj5JA6mgU/t8uqZvktsqpw+9hs9OvdHQ8//hQuvuhiZwfuQCBYP1SS8KPS2hSaOPA/zYEmAbgVvT69jFp6cGhw+oc/HIKddtwRxz8wFwtXVMKXy5VbqojeiIfrt7TJdAkf93VDq8OZPS5ycI6PE40UgxRqXpTV+NC5yIdb922Grr164/4HH8KNN9/MVWPaanIBJhLlQsqWUkMbSnATfBMHtiAHmgTgFmTmlkIV5qJDixYtccONNzoo756zGqig0OPos9wf5coVjcB1Q+HlhE0ciip3zKxGs4EUac5uMDJy5a4y3Eihd5ss3DY6m355PXHj9dfj0ccehTeLQ2bCafFExTYN4WKvoOnv/yYHGiQAM51szBTOWNZYnciN12iy2Mp2x4meuXG4YTf1OlEZhktlmb2WDLJ32XVXXHnN5Xji3S/x5Od+GoDTVpDGuYhyXtARejEB6FIGDdUmxULpp3YpTTOL8rWqvAzbd8zG5D21CNIRZ3InmanTpsEvc5o6s51kBSXiW6q6C0+658nKyiRduA1/ItrcOOy5xXpmed1wdp3qmcG443i8btrccKmu3TiSwTWUrmR4kqU3Bn53vQy/xYnoSPTMjSNRHnfaRobQ7gfx10KqFUDFqX4GY4RZHI/PfS+YVDgTPVN+5UuF3/3M6LI4EU49089COvwGlwhXsjThN7osNjy613MzLFV84smnYffddsbfn3oPLy/MQkFOAYeqNay86IzRuokKoBVbHzsaIZEFuLlqNZ3w5JwYra7C2L7NcfWhLXhXiHH77YcZr0ylAKSEJGx8HQyZO111Ej8s3hTeGF53rDIyweuGUX7lc9PnxmnPLTaaLU5Eu57pZyFT/IK3vKnwW5lGczr8RoflyzR24zccyWLBZkKzlW140tFuNAje8FtsuNyxnuln+dLhNzoMh4fH7GXUf3QcnzJlEkSEjhTMJAhWFdDBPVaJVPlEg6zmhT8TeoRTbjvmqpYKt54Jp3CrjEzxi3b3S0hXhvAnq6vwSPCp7Aivc2iCMnfuXOw0bGei7YCXzuiIIa15LChlYGwxRMac8utwZhDritZ72jS9UMNbFosg0XmiVVjvaY7mtWu5bVYerptbjVtf/Iy4I/jsv/PRb7u+3GK/grwK0kaRXnucR3S3ENVR7cZcKOuISxml4k2ijOJ9JkH8FF+FP5Mg2kW36E/2rtx4hF++rnYEqPtZomvhVJs0V7VEMO404W9Iu1TehvRZwctdLZMg2tVOhT+TINobu8+K7+K/ykoXRL9od/rs6tWr0+cgxubNuT0TM2YSRATPG84E1CFYxMvPMdNgPpqZCClVUn6C8h/ONMh3Vf7DmeBXXeWDKNhMw7p16xzmp4MXbnXaZuT9g1Me4M4tx6FP3/741x/y0CZQjoraLD7njGCoHCF/dp2ZjLDaK83sfSWnQ/aCMeGaRcFYzr0F/zazFDPnfI7dedjSlH89gmatWsIbqkLEm8diJYw2lCney/9T7zfTIP/STD5W4o3aY4sW0kwzC6JHvM8kCFYCQX7hmQYJY/mYZtJuhF+4MxU6okF+1SrDPpCp6BJ/1GcFm2lQn1W+dEEwEjbmV50OXs8b2mfl8yzf6kyD/Kr1y4T3ol+0qw7kT2K/XjUu988YY3EywvRcP8NrsRtXomvhs7ypcBtcJngFo5+FTPELPhP8Vg/hVcgEv2AsX7oy9LzW0USBI484GJecfSK++Pwz3PZeJWq8RTw\x00\x00\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\x00\x00\x00B/DN17dEd+n0G4/Y6JePe9eagor3Q2dggEqdMyn5fapEfHAFADVLkKRodoUbBYtMffx7cZg3EA6/Iqf7JfPD53WYlwNwS/cAverbCkw688FpLRbOkGZ/h13xj4hVP1SIfbzRvBpla5jPq62JDHJf/sNlO4n2VsxITGpKkxcadjibqfXqr6XYRSRfGxxx6Lk086kd5yi/DP18qxotKPPGchRHN+GwKtaTY71HV3Chpqo7Q91LEhWRR0J++Qi6Ju3fHa1JmY/uzTznxlVZRCk8LJ5zjVxSgxgSxCUvFRz6zxKpZ2oPDeW+/j+3kf4MDhO6KIQ1+vDn5nszZR7+CngPZSeNVwJbyKJ81HuIdh15aFOGTsbnjmqlGYcc7OuHZIFKeffiqG7bwDfn/gEZg0+X58sXA+h/YsKzuX+TmXSMGtso0Wi42uVPQ7xCb4syl5EqBJmCTcjY0/YcFbKLExaTcSGyQALVNTvDEHrANsnPrL3amhaH5KQkH7xWmOdPxFl6DXtv0x97OFuGUO5+QodoJxJ8pJC9xSQYJQX/ksDjXLazxo08yLW4ZrP7fWOP708/DJ/M+Rm5PLhZMQzXOcQXhd0TERmo4OEzyy41M5quvKVStw1fUT0LW1Bzu05ao0DcR1qFS8ZmsdSXkpZjls9lNTjKKygvPOVT+hZ/MojhraHp9fMgJPnDwULb9/FqeceDz69emH6y75J955ew75WoOiLBr20CVR5QuPvjax63TUNz3fWjnQJAC31jezCXSpo0swaFK4E4/WvPu+uxwsD8yuwNMLuGDBTVPZY6kVxLQtnQS3pYI0LW3dVenNpv4V4NZZVditRz6OH9XaKeKR++9GVWmJM58mHXDD4CMzASgkjhB0hFiM6pmvzsTnn36MS/cfihbZHpRwoSO2wq16xYSdItEm7ThWbx0GH+K2/zWklrOXXlJN4VbGSfcgD5zauYMXNxy1C6afPRzn/W4gbrztTuy111j844zjMfuNN525TH1ghEudx/n48caphYu2GIVNf7d2DjQJwK39DWVIX72WQwEYm9COYOQuu+DJZ54nhiU4Y3oZPllei4IgOz3PF3bEA4esWy5wiElhEoxUOAssoVo/cilkThjMHZU79sTd99yD6TNnIpCTT2EUE0r1QqqOiFSadExU8y/NVlS/pT8uwRF/+hP692yP3dtXcWNWDYs5/pbA82Q5c3ZgHOVScTbnJrP9XLiha6D2tOHOYgx+ij8el8CPQJTzk9l0IwR31q7kHF9VTQW2bVmLv+6SjXfHD8UV+w3GlMdfwNjfjcP488/Dfz/9lB8T8o5zkBHuwqOV9Sh/mgu10CQLjRNbd9wkALfu99Mg6kyAWCwx84dx++PCCy+ifcoiXDSnGj/VBJDLlUzN2dVyr0FHc6krRXJhUwyjY9k5LOWCRlRClUIlSESltL/uWBShgbRWUYHrrr4EP/6wGMEANUCusrqFhAnwDbTHsNpfaXa0ZKTGxiEoFyWmPPiA8+ic0T2QR8W2msQHKNi1pCJcnBFwtD6vPwc/hbOxvJzWgJECHjLfEoW0mwz4tYJMuAjNeSi4OGp3Zg59WuQg/aHKMpoNVaJNThTHDQ/gzfMG4x/7DcB9PJpgZ35YJt52M9YsX4qC/EIHB0+0Z30oDMUD/mLCnfyUqtgUtloO+C655JJLkzU6N9WaW3IalrvVugFc18KnYYLhtdgFstGl8Ap/OjjLJHMJt51eunwaEmZyzoTht8NndJ8Ot2DqD1jJgDeC3xTeKF8mQdqRzpkQ3WF2Zj8FRv/+/fHJB3Px1pz3EM1pj6GduYkz+2hYc3HOMDj2HZQwdAvETMpLBeMcsMT+3725F4vLCjD7k6/RtnUr7DxsWL1g0JBd799i0a5rhXjeaxgboPB+9+13uPHC0fjTmAE4YaAHFVzYALcA4w4NyPFUs16sXNTHOccIvlrrx/Dr3sHkt5djyuzFWPb6dygv5hkuNBFqyzOAsunG5xhES3mj8A6Qb9KLq0QX8hHgZtxltCNsUxDA0Ha5GDewGNW5Rbjl/v/gRQ7Be/Trhy6dWiIQpbbpITxxepyviBamYj/VJVFQm1TbjK9nIliliTd6vwqZ5Nma+qzobuw+a2ZUmfDG+qzT0jL9StkLTVeAPU+H155bnO7FGl6nBWTwJx6v0Z8sazx+5XfjSJbP0tPhF1x8GZY3kzhV3vhnUjy8tJELcYjWmkLn9kn3OEXcPe1LzPi2CrnUwlg56lTUBJ1J/UwoaBhM7LQ6Nnx6gZwxnJunFnbFRRdfgvfff9/pzFpAkFlJIoEXrzdFKVSCXID4aenXOP6MKx1CThzMQ384xK3l6myQdoi14FA4Stc8CkK/L5fzkLn4003v4Mabbsd/P/sS9z/xDFpfcDlOfWg+Rl31Os564l1MXViNVfQY0UdJw9oqytIwV4uz+XHwgYdNZVWhgHjKK/wop5bXq1UEE3ZviadO2QX55V/igD3H4tY7bkZJVQW1Swo80kJJmJJR7jZlbSb+/bkRxD/LtF26ccfjcOPf1GvDaXEiPKmeJYJvbN7E4/ddypAJkbLMthUvewHxsSpkBehEJ+FNhdueKY+8NXQfj9N9L/yiwTTATPHrK6uvoYIbX/y1ngu/fWnT4Re8gnCrDIV4nPH3gsmEN4KzII8B4bEQj9OeiXa3Bih4KVNy92rdpg0GDRyExx9/CC+tb4ExnfzoUMAdpClA/DT1IOX8RzMPlcP3sCVCLbVLDzWxWgq5ls04J8jT1t/8cgVt91ZgzNg964Wg6BftijfwRhRsoEMklZeXciPYy/DSC0/gtmO2x/C2IZ5Ux7k/ahfa6UV1l9gKUFh6Al5c9cIcYMjvccVFF6BtqyL0790De48dg7/8+S/UirfDtM/X4u4X5mLyWz+ifZvWaEUtr20BtUd6jFRyQUXHfGpn7VpqlEEOb70R+j5TwHlRiR4tIth7YHd0KW6LC299HHM//xS77bAd+dzBmQ+MrTgn5qK1e2mA0kQUEr1TS9Nz8Ue80cci03apPqV8CoYrPrZnwin8Ckafc5Pij/ArCKfFifCLhsbus/qA6f2n443VTX1WH18PXcQ29CynGon/CHlDghmMZpJHRJkWkAm8mGwvNhN4azSZwApGuO2lZpKnofgbwhuV3xDeu3ljdZCfro8nx9WGa3D91Vfhsmuvx8G79MO1e3iRk8W5urDOQWZXj1RxN2l2srpFkkzqnhJGiwIURtqVhmNXrKGmtd9jJVi2aCEee+wJHHLogfzw8ZhHx4Qn9rEUbzQ/qF2tCzSfFqlGBb1NCgIeTOb828knnYTD99gel43KcbS+CAWSh8dxhun54WO+EM1gWgeiePb7AI6/5118+OF7FPxDaCSuHWNIB705gllygPJg5fKf8Oabb+BOGkC/NedtpyoTjxnCj4MPBdTm1pNfWeEIIkFO0dSyPE3tOXsscq6P85s+bvkV4pksS1cD51//JuaiK95590kMHTyACylVPEaKO3M7CyMa5sYEl5tfDW03DW2XDWk3oqsh7bKx+2xD8TeUN8Z7j84FVkcxyeh+Qe7rhvivCp/7XOBU+PXst3gusBqbeJ6ON2rE8gHNNAiv+VW78zgaEg83X75uFcafsC+enfEZLjtkEP48MBeVXPUEPTsk+Chn2HEpjDL6LLpLiL8mIuKjFTG36uf8Medtc7no8OwiP0558D20Lu6Nzz6cRRe0Ysin11FCiaKkZD1lFA9T5zkongj9t/10Twtk461pT+D3hxyJYK9tMWdcAdpyRF3Kw5q00UMNh7uBaDVXd8mrQAhfrS/A7hRIt998I04582ypKBSyMZu9WLskbQwa8oq/a9aswdtvvY4pk6ZgOuMxA9vigj23RZ9m1Vxd5uHoPA8538s60BukRnRphUXV00IOV5OLOFG4NNoMN7y2FI+8/g1en/0WdtxxMBlZzvlITgpSkOu9hGWoznLV+dRhN+VcYI3ElD9dULtSn80E1nC5zwVO1y6l0W3KucCZ0CPeNOa5wMJvPue+8ePHX6qOmO5nE+upGCNG6rl+ptqrwqlwK48aofArn4LgEwUrW43JtjIy+ERlGLMlYPXCMsU\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00Q47UO7OT/I0mpztoRikrnx98eRsePoRmbZSpAR7kFG+Pz8QsuIzLORzYjdmFbLzhzfwB5/b7cN6pVurdsG2/Q3LrZBZ02ydZ2WWJPWHZlTWGapWzUXEoIxZlWwUTlf/fr2574RAfkHNtfOVqxAoWLtwCc+lSc5nBCZ+iJzHVcOLVNLBRtwme6bm0v3tVKWCdJQ7krBHl88ePCDrqoAwYrS8eZO9XrtBs4q80pJUc5aEuyVADvyFZc5kVjTPIiCH9essA8//8jWrljhyr92eG/rlEIILOCnEASvlrtuqmy+C55cR/jtTkIEJoORz+q+Aq+GQqpyCKjjvmTMPXPtVnt55nL7071/ZUPLxESHQ8VA+orWJAoxkkANffqfbIuXLLZhuB6qf4Ew4PdXffsl6X8cATL1zCODQueCMWzNzj1o19x5t4099zz74yVXYtCJczQI4tBfHrQthG06uftwe/b1x2wQATwr2C09BCNtILuoQwzH77gGyB8kDZDkX2vXbUCeAnABWEqqb9u2bdaDwKdSmOj3sZJflj8BAiaffdcE6LvuBUlwTrO0Kyp5hhved32Gg/SdthNElpu9xzNGJb8s/cugNhyiJJ/K1C4ZF1OLnRgAoi8KLhmPxlwHalelynpUabDECYR/n/Hl1zZ09HC7466/WEpKkt1z1x+xA3za+vY9yV556Xm0wett9Jix1rxVG6tbNwHqG08B2uCoDCiB/4tJ4+HPpSjASJRPfdAOKuURlCCsnHBkfK9CDHwXtVEBtVdamoeipJZt3lNkfU9B41s30tpc8IlNvywGNriepWMY3eT8mTbn7o7E+0uxO6/vYg89+izxFK+01KRGyOiIaIwpiqh1UW9Vc606uFeXw9Efe/RRu/Kqq+z5l990lJOiwehAcB2dqXeqFinzGJiOhuCjfwXm+8/v5D26qKOyaKyq6tSTyt+MovteyhoEz3EcK9GseRZCfEyN64Ed+zgHeaE99+4zyDbNmqbVt7smDCZ8/35sJolNWV6Lw48EmyqUMmgGK9r7XtUgoBh41t1SEJq+qamKEBOLJ4sOkZ+2cru9N3+V3X7HPXj3NCfwghezk0cO1hVVR6KBzh072Zdffsk511c5aw71KRAWKPYXp/8VBKiFFgxwhMH6Tpv2hg0eNdZ6DTnZue3gKsjBypw4QBj5rgOz7OVlc+y1R/5pu/fusokTznaDXiphNzMniseRcSfQfX/ARFYrSd7o3xPCWbXiB7vtttucyYaE1DUlvaOkBSAAE/WmsvzvAvZiXJAUxDSHcFPl1JeHav8HFA05udlWgqzkMCy+TAfyEBi//OwLNVV1zPttiSJ9ar+BTjyAGNwq8A1rhsasaUZzFJHR3K9j76CZO3fCRLsAqq9Zi9b0LtiuIrjrH269wUaMHIWW7TT79xtT7Nabfm8333aHZe/ZKzB2/xw7Rh99RHPMRvwv3fTapGXkzYFYtvqwTEoL1u2z9nXj6Ku3IN1NPhToAFsLqA8CeRaGWO3ECHtv0V77x92dbe0XYy3r4vdt+6YS27noLNux/bB1GfOWzX3vLLt6YpbV6/KQPfHEYzZm4tl2zeUX2UA2D5nPKAWOj9s02OZGjxnjEODyZYtdoNUSuZc5GAlAfu7t/50PtVxwq8ClglMZxIcCPzp3uHB/AWH+N9oC4kd+MuNT18CRnVtY94wkYhziU0wEndqJsfbYnDXWLlM2hhpnhwErO3NkXvzeSfQgGlG0YYRYfWxzKuA6DpVH22fLttvHi1fZTbf9Ge12Byi/PLdZaH1pPEU2KIkWyczMtH898qDt2LGjKtJ84Pi7jL/w438cAbqgjwCFiGLs8dlZI+1bIrCcPO40Z2+kgI1RAnBwUDaIMKpeol165132xRuv251332NXXXWl1VckY5Cgk1doLXgw6Q0BZQf+9BHWkQHzFo8Ql6oRxebHR2vXrr1DZvmYYgDhjpLQLgTRrawuSXUvmaWS1O4CqPXr1xM5OB9B7VZbg4nNgewD9uqUNzln5EeXL/CjDT8ENrX4a9TU7MYRuCVhTa9QQIogfLSVvIBBNlzIgQQJUKyHMQ5d9M/7bSVNFA24lr/AdNakSfbGlCnuVsNGGe6dQwiU6yelADz1bO36DUQxGWWXX3mdffHpx/bX++5xeSdNGu+u/qbgftTw4Y9pDY9/49tQHlq4/JWyUWWgCb7yqkvti0efsond+zJv2FjyT0jfQ5QSTSBTq8CQFtVjagyG8PN/tMUb4qxHy2b21n1jrPfEpy1nVzCURpJ9/uIo633qc7Z96fU25ZFx9s6s/XbPBbF24dgsu+mpj+3U04c5EYygTHuhE1lwFVeQlJTEsaUv2OTzz3cHbEVGxRFVhbpBOCcyrv/NwAk+A+FeZfnz5F2Vg7BdmJvIDlKRyRX8Y8fmHUR+XmuvzZhthvdGozpm5w/sZM3q18ZThiCpmNUQ4xwby3yCpsZYawL87uH84BYEkziM+UolE0XZ3hrx2qBPYJdPHZ+pYLwh+P5W4H65E7h98rN5tjP3gF174+3WsWNbF5FIVLvWszYszZ1rLWtNxxLI80dp79697ur3Sz+OrGv36Gd/VJ0KdyJvBlZcU341qCYWUu+IEFbnJAMsQQg9cuRw27pnq731r8dt0IRJWJCiUcpjwKDuIslYUsAewqCMPPccW03w0ptvu8vGDhlgHTBclTGs2A/Vp6uGXYcru4FnZiRzcQhOyKMy+ZpmbTJaKHrJR4D79u4mFywOt8thsYPZtSpEQcBShjJB4RjG5hNufv2WLbYVlnn2nDm2B7e65595xi/eXRXVtn37ZBs9srfVwcA4BkF7CCG4dDwm4ADi96iUEvLpuwt176TFWrSo+vmn/wwlVzEPeBzw1fHUBJdsc/YQGshD2lZOuwrp82EUGvu4PleJ/Fx22HxpCRkIAD7Oho8Yae+++7b1JKR7KNGsh40aw4LgjIyXX7a2rdo5YCqHBdLxitq1/VQdyPT7p2DhWHn0TvWyAuvwy/zPdzUQLDbEAfkg8y9nfG0zZi9kPoItFg3sh18utS3k2IVLWwbmMPmHqYcwSxUV4VYIu1UvlDMoGIdcjjGoWxFhTTBTWb6m2Lq1rLBuHc3uurqbPfrOevtb45Z2SvcUu+GiHvbR5+tt5MCG9ren1lh63Vb26cybLaHtcPtqxgwbkJXlmq32eqwwMM93weGQIUPd6XFffz3DRhFtRX6yNAREofFkUh2U6qsm2BVzzA89Vv6q8Qp81c2NbghSvLIBLYqUJI+14OBG77PaBLcgPYmLFMC0EHOv/bl7iBa+wr78Zq7tWr9SGW1clwxr23WAJcaEcRocbQbgioguXgF8lGIHI7mcGNkWiWG2Zu9ha5wEonI2LXTDwQNwDUUoEY7apWgwoZQhRVAoGnGchG39oQr7y5szrC3umJMuHYGxeYhzG5RJEhIeFcQ61rB48KUoN1rVUWiFx50xyUUxz2Ls/THx4UXtV/pPuPHuB35Wz/OzKED/Zb9ivyF+Bbqve4H5queRAaqSDvhxWizYx6uuuNJ2bdhhLzz8sPWEEmnYvI2VF3g7SjiAI7lLdl65ZXbuahdnNrfPiG835Y7brVlaunPn6sl5AzIM1ZkN9TnXV/HeZC6guhVhQknAKWToe6hE4rQN5nGUVxCTpaRQSxp+hRLS6WEhkdiCwc7mEe5Hp4At+HaRbVm/zh55+gmXXx/t+Tu3X0vLSGvAATdYj9E/yesomIgdCIW5lsr3EWpR48Oy5A0PQgXkJW7MtDgAGyFxN37KQR6+S6nhtGa0PQgEh2GEe93lqyxJMsfa4cWWwo7dpUtzq0hrZxu/I6ouMh6YdMYZcpoxicUYen/2XistZhtmd6WndvLgETZrznwOf1pgAwcPot/UTJ0aG28+aZsaqiaTjre5eTmO/vRhxb/rw4j/W1c/jw8rx8pDxcRrNJs+fbpF7P2r3TqmMxTMASjvcqszKtJuX5Vsj3y01W4e14QT40ADnKkczbhHMqfz1uZZJgs2EcpdZ/A2aV5sKzZhcM35thFloXbOuC7WpP9rdtGoVOvcoZZdPKGjtRj0geUsa2GjRyRS52Y7dUK6LZp2kXU\x00\x00\x00R94wpbP/NDi0vmpD9cISLD8TACuSqKiuRnOpvi5htvJuBAVxdTMim1IeYhUFFsnjojRmyh4FBzq/k+KjHGru8MtihcjbVgX1SmPC78ZxiYuLnT3AaJDeV5KXERhWRDOEzeeX6Awdgf2AwQxQh+N22ybRxB+e67H1Il3i6kUztzYuFpaHOBm3gi2VSgrCiBTS1AQ6uWSQEnHtYZKxO8tAQuJa12rM1blws462xpNljJ6ahLbakAIYYh1y8B1hQjWrAey6ZVCPzM3XaIUFwLbMCAATZu4vlYH9S2OTO+sAzOowljLZai5HSny9FP12fg0J1xLINBJl6h9dUHF6MwgKL217XGxv/uOneCH1WG0CqgpiTADHzuA+qx8ivfsfIG3vPz6CpzgVCAsEW7VnbN1RfYZZdfbdf/8ymLx22rGABlLtxkxIhlZe1Hcw7hxAvPsx2Dh9gPHGqzZeNGm/n087YL1rNgxzabDIs8CllMbRQFDsiYCAGcX788DZScUFuTJ8CFylKK4DwHJdln5R/Ks2Xzl3Ks32L74y3X4YvpHlkLLleO6m9J0QAN8pNowvcEOb9PAbh2ToCRnVbkfBH9cyySGz9eFE7Th76KImCy/d9CmO5gHofwhfz1jD8hPvK7T8rhFeRZ3lwpj6atGOARQisuDLI9q7Lt0qvPtFksxEKASwuO18iHlrTSpEBmMU1b1qGPsDVxtezSSy6z2275vY0/E6VI81ba/OkHgw0g0wP3voBLYgN/LN0iJps/rnolMOl+dTip/rt6/sDffl6vfDY0qIWyMM6kgCVLD29ozdsR1utgbYvAY6N77zQ7a0g7u/uZ763z3bNt/h86ceRipL290DisPtc+Kc+w3cv22b2NiSSTXGoZCYX2yaZ83N7yhCYsIz3K7ri2m02bvd06toiBQoy123/XyZYt32lD+zS0hUs2WUV2uHVpHmqPX9UUzTCyC9IVV15tt97yB0w1ktzca3wOIddtCWs95RUCJJxzrjtsSwo32f1pIkUpyj9YyfMRdl+9D+bS6zd52DAZXf5AL7q4eQSWqUO0mDgD3RNHI0IiHIRfTHj/ksIDbPIHbcvmTQTB3WnfYb6yYdUyV37TOLOzsjpbY2wfUziVToe7Q2kgpz7kBFLiNQBY2iBF3JEk05VQDi4Rsovjnbq1o2zb/sPWpL7HmuLU4WBSsF4M/IdAeesg0hiQeDbzNW3ZFpvxwyY7c9J5NmToKOFUZ99YFw+abTu2WFO4jzIiTwvxKQnmnb2j2qLNAjisj0nc2n1YL5BFsCd41Fj58OfDi3/177sCAz58uPSfh+oULr3kF+Zf/Xf0W5UJceiq5Bfi5/Hv6eqXJdcrvyxd/aR39edkcJX5GVfbm3/AUjloujV/i2ZjvjHhdE0H0gedLsWRhEQs+fLNV20112Ejx1jnnl0sscEYdoRyDqspxvCy1Pbv22Mvo+n86spr7BWE/BEcrqodUmYuBzjWMxyDS0XGVVJ/Igi+6LdH97Zs3mJr1q6zhRyI/jps4bTpX+i2je3ayhojE0mpl8DBLlB4IIdQ7J3K8HcUcQWfwNh4ShHHPmqWSJoof/z4Qj7gzT0BOSgLi1pkvssjRKNb2k2ZeCW1Ddmzo8iKJTWtvB/Erhg4puEgtyiE8znA8/6IbOR8q23n7l1OjtyuXSfawYE+jE99NJVKWzZvRHbW3DVJATCFGE8ZPNTOHHqm3Xj3H6x1xzYoVRoxR7DXhIBXXSIGFLBSPpTyq1bblALb4W5U+5DWXX9KeudY+f37uvpuhf49vad3ykVlIU/q272bdWg32TZ2zLBGCUQ2AenrPNrM5GJ77Nae2O+FW48/T7eJ/VvbxGsG2cgrXrcnrmpjowa2tPShb9iiKzItKRbtO8bK+YfLCWwaacEcsDTulAbW4ZLZdhmH3NevU2jD+qfashW5Nm50PXvoReRioznpEJpm5KBMu+LOOjbj5YvsszlfWOawM2zjJ1OcPaVguja+w5LXnjVxgu3ak21TpkyxyZMnY/YBLLK5+TAhZCJ4qJ7UbzIy3gy4AwNtc6KwgB1gTNYDOlVN1GNRQaHlYje7Pyfbdu/ba+s2rrel62Bp8SFW6oCHXjtMyEaP7GH1kLXXh2LVgeOiELVZFxZyGiBmPRWi5GiOZIMyEFf9gUkwywyQgSZzjGrr5Nq2lugzzZMRLXCoURTsbRHUnzaTcIzIZclRwGitIFDs3z+YpTfthtvvwG+5B8QBkWFcgYS/b4Av95Il1qCxt6GoThEB6pv6L4qyDKo6NArKHfhtgrxXXjP7Udh4MCHtOhsAfZJnkA+Xx4Ixla2kZxpjrX/9cQwtlFVl8l/0r/595dGAefIOoSUPmP3ngVc1RpPsT/SRZ5rtIwOriRTLoLrkwrRl0xZ7e9ZMe/mZZ+3pq25EdkB2yL9gqCzhrOXLl9sd1//OPvvkY1vw+Qc2b8aXNuHcC612Uj0rR7haxC5Yu3Fju/Xe+2zikBH27bx5sHeD3cKpnD5ne6Xw90qHkSXVoTnadNSGWgmR9sc7HuTvj+55/2ZRdgvGngqZFF0BpcRupsnjwFbHYhcDzEGcsaDRCGUBCpo1Ttrp3WE93BLDKm23noUJ+MnncJjeVS3s4oCcE+eJKNCYMTtqkHsuqk3HYYIReZ+NwC0EoIf7WmRO7kR+LY9CAESHnY3t18ceuucOlc75Ck2sT58si4sn0i/C+FqICc4773x78XnMYfoPIlpwpDPGDcfEo3HLlvbF55/apHPPcu/efsedNm78OGsMIpQNJhs5baU/dMC10+X66Q8Bm5RFPpy5BX6M13Rffz7sVM/imZ4UWru2Le22u+62x5/60P50WxZjDyvG6s1jsUSGHrY/XNaWMQ+z+5/81O6/d4Btev10yxj4mo3of44temWk/W7sVHv49pa2+rPtdvD6IEsFiR6AnWvSKNoy6wURVqrI4hODrG1ynH38zX4IJKJnd6rN+bj7KT/WGtQrs+su64oCYJ3dffMoWzzuT/bGv9+Gir7AjY+QNKbA9CPUrvvd79wC/t3vrsEeczAbcDRjrnNM4DbYSMLF0x8jifrRmAkW3D8oIC38fZxXswVN6OG8HFuXc9AKNm1wb6O3sBQKTWvd0C7o1NgScKdrULc2wQqAORlxM2diMcXCBjkKTZHB8UQhXH0FNpI6ZzoUsY1AVUdzElDnqMTQYrYiAGUuYXGTsPT+7tAuyycEWRD9KWcjkRQpFDY8CHldbmGwfbVui308f7l169HbJkw6x5ISGzp3UwLUEDjWM3XTEQ2KS1mIxUR0bJwLTOzk8cC6NNMlbHoyGSsCV7z4/Av2/vv/du2SnF+h/bWufbykBycKl1rvwlPCP04J4iO8moBTz/WnCgLz+t9dq/jw3z/SEAG1FqpkEzQWjc761Wtt/sIF9h2Yfx/O1DoGct36NZbUoo11GTTQXt20zdIbcrC4BpVDrN2xgwhha6EJGjN0hJ3Uq69lZWWZIhnffOn5NoFDXLphnhCDNX4oCPMgiowlCxdrOLxmgTxC2dXC+V1M+8M0myRuM3wy+JQBKIeD7y+0dNzDTu0CtVcnwaJRWoQQ+jw4mN0GlkNmLeUgQe3i8skMBmBciB9YA8k6dNaEyKQwJkw1V5QUYCog2z52KKSBRfAJB5FrHiIKS0kxLAfAzWnBULAllofxZx7CadceyvfIf9UT6s4ujgSgo0Cu0fxBDDuqUXaAcSyieClYuFeBS1s4LFCnurXskXNH2RoivDz+2QKA5gM7bew4eP5Q27ZpvW2FylXas3WTJTdKg/opt3U/brbP0QJeeHIX69Oqia3ZuM7eueduu5e/Jx79l408bRxRTTgZDJYaFEX7PGrXE+wfmXdXcMCHDzdCfj6sCEaqf9e96vdVTFU+anXUMnMFFNrVF1xiKQ3vtIFD29rgLnGwfrj0sWCKSqDS0PjeenlzW71xj73+5Q67+cJm9urfs2zojd/ad68OsYsf7Gdd7xZ87GPsI6iEgKJlhzAKj7XbTm9nsxZss05tWkHpl1r7pklOkJ/ZOArlF68k4C9eGmtDeibZC2/9aMMHtbSH7r3U2o34vY0aMcyaZjZmXhW\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00[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\x00\x00\x00\\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\x00\x00\x00]QMoSdFh7XKbvUzdc1fKx2KfJH+EKaDaqW7AAWgctirWFqov3s8Kb24YxtIMDGLLoydUUkYIIlycGBWqvT/WAR1MYAHiguP/v27mtX3vKQXfOLq6112zakQ3bVsQJ+hE3/kVfJIcBwgN9dfT0wu1VnNxEDyoEpFox6nTF9ueHxlDb8OTzx7r6Fx/P3Pv+AMgGc0PvtDIX2VyKw83XbOm1NRVOIDR0spT41V62qID2HBEgr8Y/EqjRbCcLbXJ5hMSV55IEQJtRdNlZZWma2seHd2zLZ45wTpq2YjyoAkRVDaW7EWOeamRNt3jdb2X6ye+MH3jK5jsrjFxm0wQQXuDNOnXW2axNvpyAIltFrIAhPupJQlTgrSU+KR5ZJKkZMG8oSpVaBw+8CrFfGMclSseSynS19NOIi0vUV8vXBzUn/EHb146f2S69Efndj4zNt6Yqv7biR43CaU2FTPp5cjQDVz3QTQTkGSMr3va76iedaTv1kvXr6Zx/bL2+73m6/+Tjr1x6ryQUSeKWfyUSGRkWR+oOlsGr9h99qE8u40xfaBUThQGkwDt0P+tk0O/7AXGuYxjLM8IltEmjxBP0YwCdMD/jMFVC/8SwS3bvmuL7YsGmTQ4Aac7INUcs13aRx9D+Nwd4OHk503Vv5K5/wfP19XflHlu3j+XSRbQ7PX9/2uV/gyAqEP/tKhjfCNyA8nr/XN22pfByf3n+PvPrvOinTllMbzyjSf0lEmcJPYMLJ8JPMlXs+S3geovhkeMAF7rUprkLftHQbEuRlgDM8RGcMAciVQKuMD0QjVBxtBfgNwesXbha13RTJFdOYrU+bbIsaDj9IiEh5KWtW/BIQSplkClnFSeHUqLQdFZUoPx9CKoHjGyhC0saA8BRfeciJtoRnVU9RdoHLROotsRemXIqY6ELwOLLGIJfb8jqxEnIlGfFd63b648ZD/EpSqh4JbH2X5BXZC3O32h8vHWrz535lq9esdmkUN+hnZRRMWn3wfR8sHoGJJplOLywusKeefdGlPePQxhbDwQpnvrSLlrPICOW67Xkt9XKJ/kP/wFlxPpirEHIux0xXeWmMdQYezDbYR19stOMPb2lV+eI9Ax+MpcZGC4r6TDAr7ZZysSJ417RJ0M/Okg9vJC4U6J0rTU3QXPEsCL2NnPw+pt67wxTGUsGPnf9e21VxfN5+PipekJcQYk15iufDnvIO/x6ezqePvKo8Xw99Uzt2F3z+Sqefc4u5uwT+W7jOsM/Efwu/KlMFWaWtT1B8VVqm032oK3+ft65Ssaorns9HV8UV3yUBeb8KkNPED951nwuRyUpMxLcDAr/FTD7vntCn0VU0IfDGN/1ny4qGSEYaFBeIrUpbOu3XNNCsyhJiFdSWa0vLOwEtBSoHriAz5DZi0LyQa0INWACwotzwm0veiZQhFOsQmHRz1Y8CSH6qAoQB7yTM7DJ32aogN95gMcdVVESwoPhsQoZxUKzRMM5jESmRX+AozUKXmyLSImWlCcY7Rz265Bgg1STECXcCByLxuJ1cuCXf7nhpkl3zy5sxld7YdmBYFg05Z0HYA2ltYyEUHQ0/Mx2beKqTVN0+nPyBPfb44/bSH061pgj3lhSyCMGHTeQEvhh7f4lQm8W0M4rtuxB3UE8aQ3A8Wnf3H/iHcdN2VshdPS5qLjOl0o4ek2vPvzrLDhnSGDuPjITginELVqdgvOhFtV6puIDsxLQmzJ+zwLru19WqsKsvNwfO9SljGiBP1BtRjXQwRNzaxsdlwh8/r77PnKVy2mC5xbuIsY4H3oS8ZZdTXuoEJ9u3swADmCpvT/XRjkHqbb5udcX338Vi+TY4QbAolVrnGN13xO6uQoB1VSIynSqlytQnKK6EYcMR7J7SSYlZuoLqJN8BdaXR9yQamsBBxJp1W+zO3//eRS0r2IJ6VaIVcOoof8FRIKkgaLL5e26DuUc5ApQoSycvKasXQLlk4CSmHN4f5AvUEtsa/kU7wTSlJ2EorbuRGX5loi9MAm1ttMl1+Trg1rbYawAobVjBSuPSgcTc++qMXVWDXDVJVEfFBZUCcGpSFUAoSzdVIBTXrFC+AVpVpjoEIl9UrgScpViFiWGhyIjCXwUntZOXLrXH3p9tN9z4G2vXsTvUKgZcAbYEtDO8CSKNgwBQJftqB3XZ2SeI4nz44RR9sqF9slh4KAsNiEREeBZtyUQ0B71enmPcSXVNGzWha55c8v+4P6p/hcaCUZZNx4BiL7cTRraxk656z25bUWqdO+N0XHza6jHWokoS0gmOZayCzQL+q9Nt1JAYe+eN92zk2JGWgmmycsSvcFqtyPyUrAoE2IAxDeDCvdzNH+UvBLin+eTyJu6uc5aKxrEzQU70d3c/Yll4Gjz3/NMQFwMJEwQrfs4GjeIv+dSGU4QsZexEZdQ3eJ8g9cUJDvlJTlYdpErs6ec7xl/rqpi+6+fz9dc95a/8fNrd5e3j1SdfH4fGuSxLELBVOGzcMTZ75TYsdSRDyeAYG0pHqyvVJgSDEjkwyiFYYQUouFiESnMnqCKjCAFCCe49ELoP1X+0gtf+Jaidvvl/QTwf33+vPXV1AWE31KM6keqkX/WLsHhQlgBbDMhZzdApcQrIMxm3mqvZej/+0lv2+sJ8+91d91vbzj2tEPNh6qQEaZQA0Opf/YI8QFzi43lYCsGVML0Qn7bzGzdttBt/jbrbw8dagyy2dfkcrXC6PumzfFu0Mh8ZzO1WyiSSf41oWAfOsbervaingOrZqfL/YQ/BeAbjoPbE0c6OTbLtiisOsk9nbxCA0aLgu3i6jIibE2qm71f1ZQP4hT06dkZ+k52HJDhJ51wigCh9PFFffq76q/KpLfh5V512DzhBY67g0+kKGBFi7aXXX7GYHTdbcsU9djPynbK2pCAYkTN4TUU/L1Wegi9XVw9T7gN/fBn+OfKq7z6E5xueZ2331Wn8zb66hlfw+5ahhnyb4Mv26SpCg3HU4WOsonUP+zuyVKWxqagjkSt51yd7GUUoY8tRQeQqkGAAqN+mVj9Q3Bq4AIrqLtN5O9M2mdPFBCjiQiyYTFu6wa57boI1HDDGbv7lTda4ZXsrxBya27YzMbUVbdhQflFqAHgXQBVg6j9RpIanMG3aNHft37UFhhbw7pYcbx/DV3z8rbkImGNeqwT9a9JUSH8PMReHD0ihUjwydBn8BP44dgTILAY7Dsfu38i2wFYowNisM6zqJrVr9S4wKUQTDV+3UXaKbdtRzLhpPHi5mzGuT3f5sVRcP2/qSue/B2kCGBBsFOB7+qI7nrMxQ06wU44cZ7///W9s7lzkUQmKKyTo0/q8w8vVu8jvehcZR+/2Vqgffby3Svs35CO48LCRhHiIgnRdxx5/qjUcdrbd+fibNn8tpD8HGs4FIOMpWs2dloLsgqDVlPd8C5wESY2Oe30UQgjF+lFdqKtAUwilZhax1eVZyESMdrcNQ1xG5q0q4xNtzqYiu+KpCfbIJ6vs2utvteNOP89iMuQ0HbP7UCOgJu3GnHhOp86dHWA66g7grg1IVbT6TCebClM/+cLGHmL4N2HbWxZvq7eU2YGXTLZfndkDOUVkHJkgcRhbiOWAQMYX/Mjp9P2nhgBFoRVZvuVmZ1jnjk2sVYtMW7ZcLgBCewmNE6yLEJSFEIP6REAonnmmfTRxPoLp2xmTnWHQjbmi/iCBsh3CNlvy9RLbNusta9YgxVJgpZxwtNmixctcLRRH66V+Pn5tMPODVDmsEFjZP+3gwCmEyOQEXKGQlTMjO96GjRxjLVq3s9vvv9f2Q0v4iBHDrGVKIryHMuyxaWCBNanIsbpxXs49WhPct2vVyHYUManTmZilIAaY+AFo8teTLf8utCgg41+FRGNAWnFsb0upk/RHZBFGWFsHKdr26uBlB21atrHE3n1jis2gKWeff4n17T8E3k0aOrnSDdapNNtcIDfoRjmelyCPtjUBqyMAbjKLCMFpLvwiDoYK0FH+bP5qu3zcaHx3lOFDo8ru+ssCu+7EDtalfYpz1xlFH+uQSGIirvND+TkKJyLv//RHLZ6VsgCTjJOsyixLxtzNyjWbrUeHNLb/UlPUaT9IA+S\x00\x00\x00^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\x00\x00\x00_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\x00\x00\x00`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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00hC0XVr1+o21J5gDJdypwhtF4TQr6xzS7puDdmxlVnu47FrVkfnOv7/xsogBYIYhmH///Wgg0CYDLQQ4rq2Zm97nfpqd/PLJ8PUv3r1qstGl8OdLKP/161vh36PjHqry/FNHn3f3WbYffdb5NRkrl49tZuOpxw8Moz+1TEnw453twzvV275Ztww1HLcy8cnW5/7nnpqd7Pl4JNh6l+9etVlo+H4znbk+7a95tSbkVGfrP4rm/6VlSPf31F/e/vHZkdGdzn4ZvWXbdfcB9r9sU/jUIAbAAAAAElFTkSuQmCC\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"objectbucket.io\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"lib-bucket-provisioner\"}],\"deployments\":[{\"name\":\"lib-bucket-provisioner\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"lib-bucket-provisioner\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"lib-bucket-provisioner\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"lib-bucket-provisioner\"}],\"image\":\"kubernetes/pause\",\"imagePullPolicy\":\"Always\",\"name\":\"lib-bucket-provisioner\",\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"1m\",\"memory\":\"32Mi\"}}}],\"serviceAccountName\":\"lib-bucket-provisioner\"}}}}],\"permissions\":[{\"rules\":[],\"serviceAccountName\":\"lib-bucket-provisioner\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":true,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"kubernetes\",\"openshift\",\"object\",\"bucket\",\"storage\",\"cloud\",\"s3\"],\"links\":[{\"name\":\"Github\",\"url\":\"https://github.com/kube-object-storage/lib-bucket-provisioner\"}],\"maintainers\":[{\"email\":\"jcope@redhat.com\",\"name\":\"Jon Cope\"},{\"email\":\"jvance@redhat.com\",\"name\":\"Jeff Vance\"},{\"email\":\"gmargali@redhat.com\",\"name\":\"Guy Margalit\"},{\"email\":\"dzaken@redhat.com\",\"name\":\"Danny Zaken\"},{\"email\":\"nbecker@redhat.com\",\"name\":\"Nimrod Becker\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"version\":\"1.0.0\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"objectbucketclaims.objectbucket.io\"},\"spec\":{\"additionalPrinterColumns\":[{\"JSONPath\":\".spec.storageClassName\",\"description\":\"StorageClass\",\"name\":\"Storage-Class\",\"type\":\"string\"},{\"JSONPath\":\".status.phase\",\"description\":\"Phase\",\"name\":\"Phase\",\"type\":\"string\"},{\"JSONPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"group\":\"objectbucket.io\",\"names\":{\"kind\":\"ObjectBucketClaim\",\"listKind\":\"ObjectBucketClaimList\",\"plural\":\"objectbucketclaims\",\"shortNames\":[\"obc\",\"obcs\"],\"singular\":\"objectbucketclaim\"},\"scope\":\"Namespaced\",\"subresources\":{\"status\":{}},\"validation\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"description\":\"Standard object metadata.\",\"type\":\"object\"},\"spec\":{\"description\":\"Specification of the desired behavior of the claim.\",\"properties\":{\"additionalConfig\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"AdditionalConfig gives providers a location to set proprietary config values (tenant, namespace, etc)\",\"type\":\"object\"},\"bucketName\":{\"description\":\"BucketName (not recommended) the name of the bucket. Caution! In-store bucket names may collide across namespaces.  If you define the name yourself, try to make it as unique as possible.\",\"type\":\"string\"},\"generateBucketName\":{\"description\":\"GenerateBucketName (recommended) a prefix for a bucket name to be followed by a hyphen and 5 random characters. Protects against in-store\x00\x00\x00\x00 name collisions.\",\"type\":\"string\"},\"storageClassName\":{\"description\":\"StorageClass names the StorageClass object representing the desired provisioner and parameters\",\"type\":\"string\"}},\"required\":[\"storageClassName\"],\"type\":\"object\"},\"status\":{\"description\":\"Most recently observed status of the claim.\",\"properties\":{\"phase\":{\"description\":\"ObjectBucketClaimStatusPhase is set by the controller to save the state of the provisioning process\",\"enum\":[\"pending\",\"bound\",\"released\",\"failed\"],\"type\":\"string\"}},\"type\":\"object\"}}}},\"version\":\"v1alpha1\",\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":true}]}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"objectbuckets.objectbucket.io\"},\"spec\":{\"additionalPrinterColumns\":[{\"JSONPath\":\".spec.storageClassName\",\"description\":\"StorageClass\",\"name\":\"Storage-Class\",\"type\":\"string\"},{\"JSONPath\":\".spec.claimRef.namespace\",\"description\":\"ClaimNamespace\",\"name\":\"Claim-Namespace\",\"type\":\"string\"},{\"JSONPath\":\".spec.claimRef.name\",\"description\":\"ClaimName\",\"name\":\"Claim-Name\",\"type\":\"string\"},{\"JSONPath\":\".spec.reclaimPolicy\",\"description\":\"ReclaimPolicy\",\"name\":\"Reclaim-Policy\",\"type\":\"string\"},{\"JSONPath\":\".status.phase\",\"description\":\"Phase\",\"name\":\"Phase\",\"type\":\"string\"},{\"JSONPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"group\":\"objectbucket.io\",\"names\":{\"kind\":\"ObjectBucket\",\"listKind\":\"ObjectBucketList\",\"plural\":\"objectbuckets\",\"shortNames\":[\"ob\",\"obs\"],\"singular\":\"objectbucket\"},\"scope\":\"Cluster\",\"subresources\":{\"status\":{}},\"validation\":{\"openAPIV3Schema\":{\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"description\":\"Standard object metadata.\",\"type\":\"object\"},\"spec\":{\"description\":\"Specification of the desired behavior of the bucket.\",\"properties\":{\"additionalState\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"additionalState gives providers a location to set proprietary config values (tenant, namespace, etc)\",\"type\":\"object\"},\"claimRef\":{\"description\":\"ObjectReference to ObjectBucketClaim\",\"type\":\"object\"},\"endpoint\":{\"description\":\"Endpoint contains all connection relevant data that an app may require for accessing the bucket\",\"properties\":{\"additionalConfig\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"AdditionalConfig gives providers a location to set proprietary config values (tenant, namespace, etc)\",\"type\":\"object\"},\"bucketHost\":{\"description\":\"Bucket address hostname\",\"type\":\"string\"},\"bucketName\":{\"description\":\"Bucket name\",\"type\":\"string\"},\"bucketPort\":{\"description\":\"Bucket address port\",\"type\":\"integer\"},\"region\":{\"description\":\"Bucket region\",\"type\":\"string\"},\"subRegion\":{\"description\":\"Bucket sub-region\",\"type\":\"string\"}},\"type\":\"object\"},\"reclaimPolicy\":{\"description\":\"Describes a policy for end-of-life maintenance of ObjectBucket.\",\"enum\":[\"Delete\",\"Retain\",\"Recycle\"],\"type\":\"string\"},\"storageClassName\":{\"description\":\"StorageClass names the StorageClass object representing the desired provisioner and parameters\",\"type\":\"string\"}},\"required\":[\"storageClassName\"],\"type\":\"object\"},\"status\":{\"description\":\"Most recently observed status of the bucket.\",\"properties\":{\"phase\":{\"description\":\"ObjectBucketStatusPhase is set by the controller to save the state of the provisioning process\",\"enum\":[\"bound\",\"released\",\"failed\"],\"type\":\"string\"}},\"type\":\"object\"}}}},\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":true}]}}\nquay.io/bandrade/lib-bucket-provisioner:1.01.0.0\x00\x00\x00j\\n      },\\n      \\\"cells\\\": [\\n        {\\n          \\\"name\\\": \\\"example1\\\",\\n          \\\"useGlobalLockserver\\\": true,\\n          \\\"gateway\\\": {\\n            \\\"count\\\": 2\\n          },\\n          \\\"vtctld\\\": {\\n            \\\"count\\\": 1\\n          },\\n          \\\"keyspaces\\\": [\\n            {\\n              \\\"name\\\": \\\"messagedb\\\",\\n              \\\"shards\\\": [\\n                {\\n                  \\\"range\\\": \\\"-80\\\",\\n                  \\\"replicas\\\": [\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"rdonly\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    }\\n                  ]\\n                },\\n                {\\n                  \\\"range\\\": \\\"80-\\\",\\n                  \\\"replicas\\\": [\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"rdonly\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    }\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  }\\n]\",\"categories\":\"Database\",\"certified\":\"False\",\"containerImage\":\"registry.connect.redhat.com/planetscale/operator:0.1.7\",\"createdAt\":\"2019-02-06 20:00:00\",\"description\":\"PlanetScale Vitess is a database clustering system for horizontal scaling of MySQL.\",\"support\":\"PlanetScale\"},\"name\":\"planetscale-operator.v0.1.7\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Instance of a PlanetScale Vitess Cluster\",\"displayName\":\"PsCluster\",\"kind\":\"PsCluster\",\"name\":\"psclusters.planetscale.com\",\"version\":\"v1alpha1\"}]},\"description\":\"The Vitess Operator deploys and manages instances of MySQL with Vitess, a database clustering system for horizontal scaling of MySQL\\nthrough generalized sharding.\\n\\n\\nBy encapsulating shard-routing logic, Vitess allows application code and\\ndatabase queries to remain agnostic to the distribution of data onto\\nmultiple shards. With Vitess, you can even split and merge shards as your\\nneeds grow, with an atomic cutover step that takes only a few seconds.\\n\\n\\nVitess has been a core component of YouTube's database infrastructure since\\n2011, and has grown to encompass tens of thousands of MySQL nodes. For more\\ninformation, visit [https://planetscale.com](https://planetscale.com)\\n\\n### Supported Features\\n\\n* **Dashboard** - The Operator deploys a dashboard for monitoring and introspecting your cluster.\\n\\n* **Scale Gateways** - Scale out the Gateway, which is the component that responds to queries and returns consolidated results from the MySQL shards.\\n\\n* **Configure Keyspaces** - Configure how your data is sharded with in your cluster.\\n\\n### Before You Start\\n\\n1. Create a RedHat registry image pull secret called\\n`planetscale-operator-pull-secret`, which is required to pull the operator\\nimage.\\n\\n2. Create an etcd cluster, which is used as a lock server by PlanetScale Vitess clusters. Try out the [etcd Operator](https://www.operatorhub.io/?keyword=etcd).\\n\\n### Permissions\\n\\nThis operator only supports running in the same namespace as the PsCluster resources it is watching.\\n\\n\\nThis operator should be deployed in an isolated namespace since the Pods it creates use the `default` service account and require the `use` permission on the `anyuid` Security Context Contraint (SCC) to run correctly. Running this operator in a shared namespace is not recommended since unrelated pods will have access to use the `anyuid` SCC.\",\"displayName\":\"PlanetScale Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAfLXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtpcly7coT/YxVeAuZhORgjvAMv31/iHLaaetcvwg6LktjsAUMNWZkF0Oz/+s9j/oM/JdlqYio1t5wt\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00qXjAPpSEzXzpAKS/NC5tYUb4a/Cpa3sLMZ6IZn8k7ToCoJbDGn2VOerEnO57S0OKHGl4aSMIWgNAQZstLrtGQLW9Yb7iKk0JxNkmO0z/HOt6ePl88/p31+r2wMfPs5Mk3EeD9SF5BEEYBjfv6Et5nJKL24u24DbvrkPN9HbfhdZ6cfD38HBL5mIgYI589pcInIeTZeM9BxP+XuMImERdiraMgojfp3+ucEEHFylc4JMaEB84hscaIL9tY900EFSLGjxS02khPQMQtlS8gkp/1owjCKUhJinyNYl4zhr75FUBUyILCZSoQCfHHRMB1xhFSxOSTeyHQAq9xT44XVEKJNyLJx/pjWC93VW7ccYphwYSDT8jLaKhx3X+hnowEQGBkTM83BHDPIzkTThDfC5A8JjU8dBT0xqv8/+emFuSeeg2pIGAngKWizwu81q0YXqBgk6U5IepeYwcSdi/38EeKhe5JHAsXRfdhrxgpghcQBZA5AJW+/HgtLkjMF2wSBg8QBfaIKAcQO/cuEAvkGVPpPRYgAWcHulgCo0xMEjfOc705iZMF5A32oo6JCbryiuuCt+fzAiT6GnlYXLx7IqGYJK5d0HxDgBDLlS8gBL13XqAgzEBf5mgcV3T5rRBnK0AM105IDM/gsWgiZG1Z1CvywpG8LVRIp0jOXRQSiYSPJ6yYy95bgeRzQRKXCIqB/IV0mEQdRe9tzh/b8mhB+TmNmQ7mLkiKef2YvIJUFGAXxzpF1P9eCjqW1yD8jIPcGw9wL0aITgNjuvSis3ekgAcuMAxEe4CXzd1wbpPeU/X4f7aMdq+2KmJoAAAAAElFTkSuQmCC\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"security.openshift.io\"],\"resourceNames\":[\"anyuid\"],\"resources\":[\"securitycontextconstraints\"],\"verbs\":[\"use\"]}],\"serviceAccountName\":\"planetscale-operator\"},{\"rules\":[{\"apiGroups\":[\"security.openshift.io\"],\"resourceNames\":[\"anyuid\"],\"resources\":[\"securitycontextconstraints\"],\"verbs\":[\"use\"]}],\"serviceAccountName\":\"default\"},{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"services\",\"endpoints\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}],\"serviceAccountName\":\"prometheus\"}],\"deployments\":[{\"name\":\"planetscale-operator\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"planetscale-operator\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"planetscale-operator\"}},\"spec\":{\"containers\":[{\"command\":[\"/usr/local/bin/planetscale-operator\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"planetscale-operator\"}],\"image\":\"registry.connect.redhat.com/planetscale/operator:0.1.7\",\"imagePullPolicy\":\"Always\",\"name\":\"planetscale-operator\",\"ports\":[{\"containerPort\":60000,\"name\":\"metrics\"}],\"workingDir\":\"/usr/local/bin\"}],\"imagePullSecrets\":[{\"name\":\"planetscale-operator-pull-secret\"}],\"serviceAccountName\":\"planetscale-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"planetscale.com\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"etcd.database.coreos.com\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"services\",\"endpoints\",\"persistentvolumes\",\"persistentvolumeclaims\",\"events\",\"configmaps\",\"secrets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"planetscale-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"mysql\",\"vitess\",\"sharding\",\"database\"],\"labels\":{\"name\":\"planetscale-operator\"},\"links\":[{\"name\":\"PlanetScale\",\"url\":\"https://planetscale.com\"}],\"maintainers\":[{\"email\":\"contact@planetscale.com\",\"name\":\"PlanetScale\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"PlanetScale\"},\"selector\":{\"matchLabels\":{\"name\":\"planetscale-operator\"}},\"version\":\"0.1.7\"}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"planetscale.com/v1alpha1\\\",\\n    \\\"kind\\\": \\\"PsCluster\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"example\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"monitored\\\": true,\\n      \\\"lockserver\\\": {\\n        \\\"endpoint\\\": \\\"\\u003cLockServer IP and Port\\u003e\\\",\\n        \\\"root_path\\\": \\\"/vitess/example/global\\\"\\n      },\\n      \\\"cells\\\": [\\n        {\\n          \\\"name\\\": \\\"example1\\\",\\n          \\\"useGlobalLockserver\\\": true,\\n          \\\"gateway\\\": {\\n            \\\"count\\\": 2\\\x00\x00\x00rn          },\\n          \\\"vtctld\\\": {\\n            \\\"count\\\": 1\\n          },\\n          \\\"keyspaces\\\": [\\n            {\\n              \\\"name\\\": \\\"messagedb\\\",\\n              \\\"shards\\\": [\\n                {\\n                  \\\"range\\\": \\\"-80\\\",\\n                  \\\"replicas\\\": [\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"rdonly\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    }\\n                  ]\\n                },\\n                {\\n                  \\\"range\\\": \\\"80-\\\",\\n                  \\\"replicas\\\": [\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"rdonly\\\"\\n                    },\\n                    {\\n                      \\\"type\\\": \\\"replica\\\"\\n                    }\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  }\\n]\",\"categories\":\"Database\",\"certified\":\"False\",\"containerImage\":\"registry.connect.redhat.com/planetscale/operator:0.1.7\",\"createdAt\":\"2019-02-06 20:00:00\",\"description\":\"PlanetScale Vitess is a database clustering system for horizontal scaling of MySQL.\",\"support\":\"PlanetScale\"},\"name\":\"planetscale-operator.v0.1.7\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Instance of a PlanetScale Vitess Cluster\",\"displayName\":\"PsCluster\",\"kind\":\"PsCluster\",\"name\":\"psclusters.planetscale.com\",\"version\":\"v1alpha1\"}]},\"description\":\"The Vitess Operator deploys and manages instances of MySQL with Vitess, a database clustering system for horizontal scaling of MySQL\\nthrough generalized sharding.\\n\\n\\nBy encapsulating shard-routing logic, Vitess allows application code and\\ndatabase queries to remain agnostic to the distribution of data onto\\nmultiple shards. With Vitess, you can even split and merge shards as your\\nneeds grow, with an atomic cutover step that takes only a few seconds.\\n\\n\\nVitess has been a core component of YouTube's database infrastructure since\\n2011, and has grown to encompass tens of thousands of MySQL nodes. For more\\ninformation, visit [https://planetscale.com](https://planetscale.com)\\n\\n### Supported Features\\n\\n* **Dashboard** - The Operator deploys a dashboard for monitoring and introspecting your cluster.\\n\\n* **Scale Gateways** - Scale out the Gateway, which is the component that responds to queries and returns consolidated results from the MySQL shards.\\n\\n* **Configure Keyspaces** - Configure how your data is sharded with in your cluster.\\n\\n### Before You Start\\n\\n1. Create a RedHat registry image pull secret called\\n`planetscale-operator-pull-secret`, which is required to pull the operator\\nimage.\\n\\n2. Create an etcd cluster, which is used as a lock server by PlanetScale Vitess clusters. Try out the [etcd Operator](https://www.operatorhub.io/?keyword=etcd).\\n\\n### Permissions\\n\\nThis operator only supports running in the same namespace as the PsCluster resources it is watching.\\n\\n\\nThis operator should be deployed in an isolated namespace since the Pods it creates use the `default` service account and require the `use` permission on the `anyuid` Security Context Contraint (SCC) to run correctly. Running this operator in a shared namespace is not recommended since unrelated pods will have access to use the `anyuid` SCC.\",\"displayName\":\"PlanetScale Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAfLXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtpcly7coT/YxVeAuZhORgjvAMv31/iHLaaetcvwg6LktjsAUMNWZkF0Oz/+s9j/oM/JdlqYio1t5wtf2KLzXceVPv8eb47G+//X0/dn389bz4veJ4KfA/Pj3m/7+88n/58oMT3+fH7eVPmO059B3Kfge+foJn1+H1ffQcK/nnevT+b9n6ux6/tvP/8fId9B//751gwxkqMF7zxO7hg+b9qlsAKQgs96HHXz17PWB6n+7wP7p9tZz4P/zL\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00\x00cfD38HBL5mIgYI589pcInIeTZeM9BxP+XuMImERdiraMgojfp3+ucEEHFylc4JMaEB84hscaIL9tY900EFSLGjxS02khPQMQtlS8gkp/1owjCKUhJinyNYl4zhr75FUBUyILCZSoQCfHHRMB1xhFSxOSTeyHQAq9xT44XVEKJNyLJx/pjWC93VW7ccYphwYSDT8jLaKhx3X+hnowEQGBkTM83BHDPIzkTThDfC5A8JjU8dBT0xqv8/+emFuSeeg2pIGAngKWizwu81q0YXqBgk6U5IepeYwcSdi/38EeKhe5JHAsXRfdhrxgpghcQBZA5AJW+/HgtLkjMF2wSBg8QBfaIKAcQO/cuEAvkGVPpPRYgAWcHulgCo0xMEjfOc705iZMF5A32oo6JCbryiuuCt+fzAiT6GnlYXLx7IqGYJK5d0HxDgBDLlS8gBL13XqAgzEBf5mgcV3T5rRBnK0AM105IDM/gsWgiZG1Z1CvywpG8LVRIp0jOXRQSiYSPJ6yYy95bgeRzQRKXCIqB/IV0mEQdRe9tzh/b8mhB+TmNmQ7mLkiKef2YvIJUFGAXxzpF1P9eCjqW1yD8jIPcGw9wL0aITgNjuvSis3ekgAcuMAxEe4CXzd1wbpPeU/X4f7aMdq+2KmJoAAAAAElFTkSuQmCC\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"security.openshift.io\"],\"resourceNames\":[\"anyuid\"],\"resources\":[\"securitycontextconstraints\"],\"verbs\":[\"use\"]}],\"serviceAccountName\":\"planetscale-operator\"},{\"rules\":[{\"apiGroups\":[\"security.openshift.io\"],\"resourceNames\":[\"anyuid\"],\"resources\":[\"securitycontextconstraints\"],\"verbs\":[\"use\"]}],\"serviceAccountName\":\"default\"},{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"services\",\"endpoints\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}],\"serviceAccountName\":\"prometheus\"}],\"deployments\":[{\"name\":\"planetscale-operator\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"planetscale-operator\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"planetscale-operator\"}},\"spec\":{\"containers\":[{\"command\":[\"/usr/local/bin/planetscale-operator\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"planetscale-operator\"}],\"image\":\"registry.connect.redhat.com/planetscale/operator:0.1.7\",\"imagePullPolicy\":\"Always\",\"name\":\"planetscale-operator\",\"ports\":[{\"containerPort\":60000,\"name\":\"metrics\"}],\"workingDir\":\"/usr/local/bin\"}],\"imagePullSecrets\":[{\"name\":\"planetscale-operator-pull-secret\"}],\"serviceAccountName\":\"planetscale-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"planetscale.com\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"etcd.database.coreos.com\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"services\",\"endpoints\",\"persistentvolumes\",\"persistentvolumeclaims\",\"events\",\"configmaps\",\"secrets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"planetscale-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"mysql\",\"vitess\",\"sharding\",\"database\"],\"labels\":{\"name\":\"planetscale-operator\"},\"links\":[{\"name\":\"PlanetScale\",\"url\":\"https://planetscale.com\"}],\"maintainers\":[{\"email\":\"contact@planetscale.com\",\"name\":\"PlanetScale\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"PlanetScale\"},\"selector\":{\"matchLabels\":{\"name\":\"planetscale-operator\"}},\"version\":\"0.1.7\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"psclusters.planetscale.com\"},\"spec\":{\"group\":\"planetscale.com\",\"names\":{\"kind\":\"PsCluster\",\"listKind\":\"PsClusterList\",\"plural\":\"psclusters\",\"singular\":\"pscluster\"},\"scope\":\"Namespaced\",\"version\":\"v1alpha1\"}}\nquay.io/bandrade/planetscale:0.1.70.1.7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00")

func testQeTestdataOpmIndex_34016DbBytes() ([]byte, error) {
	return _testQeTestdataOpmIndex_34016Db, nil
}

func testQeTestdataOpmIndex_34016Db() (*asset, error) {
	bytes, err := testQeTestdataOpmIndex_34016DbBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/index_34016.db", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "app.learn.com/v1",
          "kind": "Learn",
          "metadata": {
            "name": "example-learn"
          },
          "spec": {
            "size": 2
          }
        }
      ]
    capabilities: Basic Install
  name: learn-operator.v0.0.1
  namespace: learn
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Learn
      name: learns.app.learn.com
      version: v1
      description: An example to show how to make it managed by OLM
      displayName: Jian's Learn Operator 
  description: Placeholder description
  displayName: Learn Operator
  install:
    spec:
      deployments:
      - name: learn-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: learn-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: learn-operator
            spec:
              containers:
              - command:
                - learn-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: learn-operator
                image: quay.io/olmqe/learn-operator:v1
                imagePullPolicy: Always
                name: learn-operator
                resources: {}
              serviceAccountName: learn-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - learn-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - app.learn.com
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: learn-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  maturity: alpha
  provider: {}
  version: 0.0.1
`)

func testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYaml, nil
}

func testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/learn_operator/package/0.0.1/learn-operator.v0.0.1.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmLearn_operatorPackage001LearnCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: learns.app.learn.com
spec:
  group: app.learn.com
  names:
    kind: Learn
    listKind: LearnList
    plural: learns
    singular: learn
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: Learn is the Schema for the learns API
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LearnSpec defines the desired state of Learn
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: LearnStatus defines the observed state of Learn
            type: object
            x-kubernetes-preserve-unknown-fields: true  
`)

func testQeTestdataOpmLearn_operatorPackage001LearnCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmLearn_operatorPackage001LearnCrdYaml, nil
}

func testQeTestdataOpmLearn_operatorPackage001LearnCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmLearn_operatorPackage001LearnCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/learn_operator/package/0.0.1/learn.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYaml = []byte(`apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "app.learn.com/v1",
          "kind": "Learn",
          "metadata": {
            "name": "example-learn"
          },
          "spec": {
            "size": 2
          }
        }
      ]
    capabilities: Basic Install
  name: learn-operator.v0.0.2
  namespace: learn
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Learn
      name: learns.app.learn.com
      version: v1
      description: An example to show how to make it managed by OLM
      displayName: Jian's Learn Operator 
  description: Placeholder description
  displayName: Learn Operator
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      deployments:
      - name: learn-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: learn-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: learn-operator
            spec:
              containers:
              - command:
                - learn-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: learn-operator
                image: quay.io/jiazha/learn-operator-image
                imagePullPolicy: Always
                name: learn-operator
                resources: {}
              serviceAccountName: learn-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - learn-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - app.learn.com
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: learn-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  maturity: alpha
  provider: {}
  replaces: learn-operator.v0.0.1
  version: 0.0.2
`)

func testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYaml, nil
}

func testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/learn_operator/package/0.0.2/learn-operator.v0.0.2.clusterserviceversion.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmLearn_operatorPackage002LearnCrdYaml = []byte(`apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: learns.app.learn.com
spec:
  group: app.learn.com
  names:
    kind: Learn
    listKind: LearnList
    plural: learns
    singular: learn
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: Learn is the Schema for the learns API
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LearnSpec defines the desired state of Learn
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: LearnStatus defines the observed state of Learn
            type: object
            x-kubernetes-preserve-unknown-fields: true  

`)

func testQeTestdataOpmLearn_operatorPackage002LearnCrdYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmLearn_operatorPackage002LearnCrdYaml, nil
}

func testQeTestdataOpmLearn_operatorPackage002LearnCrdYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmLearn_operatorPackage002LearnCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/learn_operator/package/0.0.2/learn.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmLearn_operatorPackageLearnPackageYaml = []byte(`packageName: learn-operator
channels:
- currentCSV: learn-operator.v0.0.2
  name: alpha
defaultChannel: alpha
`)

func testQeTestdataOpmLearn_operatorPackageLearnPackageYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmLearn_operatorPackageLearnPackageYaml, nil
}

func testQeTestdataOpmLearn_operatorPackageLearnPackageYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmLearn_operatorPackageLearnPackageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/learn_operator/package/learn.package.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3Json = []byte(`{
    "schema": "olm.bundle",
    "name": "cockroachdb.v5.0.3",
    "package": "cockroachdb",
    "image": "quay.io/olmqe/cockroachdb-operator:5.0.3-2199",
    "properties": [
        {
            "type": "olm.channel",
            "value": {
                "name": "stable"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "charts.operatorhub.io",
                "kind": "Cockroachdb",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cockroachdb",
                "version": "5.0.3"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0"
        },
        {
            "name": "",
            "image": "quay.io/olmqe/cockroachdb-operator:5.0.3-2199"
        },
        {
            "name": "",
            "image": "quay.io/helmoperators/cockroachdb:v5.0.3"
        }
    ]
}
`)

func testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3Json, nil
}

func testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-bundle3.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4Json = []byte(`{
    "schema": "olm.bundle",
    "name": "cockroachdb.v5.0.4",
    "package": "cockroachdb",
    "image": "quay.io/olmqe/cockroachdb-operator:5.0.4-2199",
    "properties": [
        {
            "type": "olm.channel",
            "value": {
                "name": "stable",
                "replaces": "cockroachdb.v5.0.3"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "charts.operatorhub.io",
                "kind": "Cockroachdb",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "cockroachdb",
                "version": "5.0.4"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "quay.io/olmqe/cockroachdb-operator:5.0.4-2199"
        },
        {
            "name": "",
            "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0"
        },
        {
            "name": "",
            "image": "quay.io/helmoperators/cockroachdb:v5.0.4"
        }
    ]
}
`)

func testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4Json, nil
}

func testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-bundle4.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "cockroachdb",
    "defaultChannel": "stable",
    "icon": {
        "mediatype": "image/svg+xml"
    }
}
`)

func testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJson, nil
}

func testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4Json = []byte(`{
    "schema": "olm.bundle",
    "name": "windup-operator.0.0.4",
    "package": "mta-operator",
    "image": "quay.io/olmqe/mta-operator:v0.0.4-2199",
    "properties": [
        {
            "type": "olm.channel",
            "value": {
                "name": "alpha"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "windup.jboss.org",
                "kind": "Windup",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "mta-operator",
                "version": "0.0.4"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "quay.io/windupeng/windup-operator-native:0.0.4"
        },
        {
            "name": "",
            "image": "quay.io/olmqe/mta-operator:v0.0.4-2199"
        }
    ]
}
`)

func testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4Json, nil
}

func testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/configs/mta-operator/mta-operator-bundle4.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5Json = []byte(`{
    "schema": "olm.bundle",
    "name": "windup-operator.0.0.5",
    "package": "mta-operator",
    "image": "quay.io/olmqe/mta-operator:v0.0.5-2199",
    "properties": [
        {
            "type": "olm.channel",
            "value": {
                "name": "alpha",
                "replaces": "windup-operator.0.0.4"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "windup.jboss.org",
                "kind": "Windup",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "mta-operator",
                "version": "0.0.5"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "quay.io/olmqe/mta-operator:v0.0.5-2199"
        },
        {
            "name": "",
            "image": "quay.io/windupeng/windup-operator-native:0.0.5"
        }
    ]
}
`)

func testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5Json, nil
}

func testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/configs/mta-operator/mta-operator-bundle5.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "mta-operator",
    "defaultChannel": "alpha",
    "icon": {
        "mediatype": "image/png"
    }
}
`)

func testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJson, nil
}

func testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/configs/mta-operator/mta-operator-package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderDiffIndexLatest2Db = []byte("SQLite format 3\x00\x10\x00\x01\x01\x00@  \x00\x00\x00\n\x00\x00\x00\x85\x00\x00\x00*\x00\x00\x00\x10\x00\x00\x000\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00.K\x90\x05\x00\x00\x00\x01\x0f\xfb\x00\x00\x00\x00\t\x0f\xfb\r\xc5\r\x88\f\xbf\f\x90\v\x93\vd\t\xc9\b\xf5\a\x02\x05\x0f\x04\xad\x02\x8d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x83p\x1b\a\x17%%\x01\x87#tableapi_providerapi_provider\x03CREATE TABLE \"api_provider\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x81Q\x18\a\x17''\x01\x82atablerelated_imagerelated_image\x1bCREATE TABLE related_image (\n\t\t\timage TEXT,\n     \t\toperatorbundle_name TEXT,\n     \t\tFOREIGN KEY(operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)\x83\x18\x15\a\x17''\x01\x85otablechannel_entrychannel_entry\x16CREATE TABLE channel_entry (\n\t\t\tentry_id INTEGER PRIMARY KEY,\n\t\t\tchannel_name TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\treplaces INTEGER,\n\t\t\tdepth INTEGER,\n\t\t\tFOREIGN KEY(replaces) REFERENCES channel_entry(entry_id) DEFERRABLE INITIALLY DEFERRED, \n\t\t\tFOREIGN KEY(channel_name, package_name) REFERENCES channel(name, package_name) ON DELETE CASCADE\n\t\t)-\x14\x06\x17A\x1b\x01\x00indexsqlite_autoindex_channel_1channel\x15\x81z\x13\a\x17\x1b\x1b\x01\x83Ktablechannelchannel\x14CREATE TABLE channel (\n\t\t\tname TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\thead_operatorbundle_name TEXT,\n\t\t\tPRIMARY KEY(name, package_name),\n\t\t\tFOREIGN KEY(head_operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)-\x12\x06\x17A\x1b\x01\x00indexsqlite_autoindex_package_1package\x13\x81F\x11\a\x17\x1b\x1b\x01\x82ctablepackagepackage\x12CREATE TABLE package (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tdefault_channel TEXT,\n\t\t\tFOREIGN KEY(name, default_channel) REFERENCES channel(package_name,name) ON DELETE CASCADE\n\t\t);\x10\x06\x17O)\x01\x00indexsqlite_autoindex_operatorbundle_1operatorbundle\x11\x81J\x0f\a\x17))\x01\x82Otableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT)%\v\x06\x179\x13\x01\x00indexsqlite_autoindex_api_1api\f\x81\x1f\n\a\x17\x13\x13\x01\x82%tableapiapi\vCREATE TABLE api (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\tplural TEXT NOT NULL,\n\t\t\tPRIMARY KEY(group_name, version, kind)\n\t\t)\x81\"\x01\a\x17//\x01\x81stableschema_migrationsschema_migrations\x02CREATE TABLE schema_migrations (\n\t\tversion bigint NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTA\x00\x00\x00\a\x1b\r\x00\x00\x00\x01\x0f\xe7\x00\x0f\xe7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x01\x03\x013\f2021-08-04 02:18:52\r\x00\x00\x00\a\f\xe5\x00\x0f\x9f\x0f\"\x0e\xa7\x0e:\r\xd0\r^\f\xe5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00w\a\a\x1f\x1d5;\x17kbuild.devv1alpha1ClusterBuildStrategybuildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodepp\x06\a\x1f\x1d';\x17kbuild.devv1alpha1BuildStrategybuildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodeph\x05\a\x1f\x1d\x17;\x17kbuild.devv1alpha1Buildbuildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodepk\x04\a\x1f\x1d\x1d;\x17kbuild.devv1alpha1BuildRunbuildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodepy\x03\a7\x1d#1\x17scharts.operatorhub.iov1alpha1Cockroachdbcockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869-nodep{\x02\a7\x1d#1\x17wcharts.operatorhub.iov1alpha1Cockroachdbcockroachdb.v5.0.35.0.3quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack_\x01\a-\x11\x197\x17Ywindup.jboss.orgv1Windupwindup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\r\x00\x00\x00\x01\x0f\x85\x00\x0f\x85\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00y\x01\a3\x1d%;\x17koperator.tekton.devv1alpha1TektonConfigbuildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x00\x00\x00\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\n\x00\x00\x00\x04\x0e\xc4\x00\x0e\xc4\x0fg\x0f\x16\x0f\xba\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Q\x05;\x17k\x01buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x04P\x051\x17s\x01cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869-nodep\x03R\x051\x17w\x01cockroachdb.v5.0.35.0.3quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack\x02E\x057\x17Y\twindup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\r\r\xc5\x00\f\x06 \x00\x0f[\x0e\xb9\x0e\x92\x06 \r\x88\f\xbf\f\x90\v\x93\vd\t\xc9\b\xf5\a\x02\x05\x0f\x04\xad\x02\x8d\x00l\x00d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x06\x96\x1b5%\b\x87mtriggerapi_requirer_cleanupapi_requirerCREATE TRIGGER api_requirer_cleanup\n\t\tAFTER DELETE ON api_requirer\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\t\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, op\x81_\x0f\a\x17))\x01\x82ytableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT, substitutesfor TEXT)\x83p\x1b\a\x17%%\x01\x87#tableapi_providerapi_provider\x03CREATE TABLE \"api_provider\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x81Q\x18\a\x17''\x01\x82atablerelated_imagerelated_image\x1bCREATE TABLE related_image (\n\t\t\timage TEXT,\n     \t\toperatorbundle_name TEXT,\n     \t\tFOREIGN KEY(operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)\x83\x18\x15\a\x17''\x01\x85otablechannel_entrychannel_entry\x16CREATE TABLE channel_entry (\n\t\t\tentry_id INTEGER PRIMARY KEY,\n\t\t\tchannel_name TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\treplaces INTEGER,\n\t\t\tdepth INTEGER,\n\t\t\tFOREIGN KEY(replaces) REFERENCES channel_entry(entry_id) DEFERRABLE INITIALLY DEFERRED, \n\t\t\tFOREIGN KEY(channel_name, package_name) REFERENCES channel(name, package_name) ON DELETE CASCADE\n\t\t)-\x14\x06\x17A\x1b\x01\x00indexsqlite_autoindex_channel_1channel\x15\x81z\x13\a\x17\x1b\x1b\x01\x83Ktablechannelchannel\x14CREATE TABLE channel (\n\t\t\tname TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\thead_operatorbundle_name TEXT,\n\t\t\tPRIMARY KEY(name, package_name),\n\t\t\tFOREIGN KEY(head_operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)-\x12\x06\x17A\x1b\x01\x00indexsqlite_autoindex_package_1package\x13\x81F\x11\a\x17\x1b\x1b\x01\x82ctablepackagepackage\x12CREATE TABLE package (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tdefault_channel TEXT,\n\t\t\tFOREIGN KEY(name, default_channel) REFERENCES channel(package_name,name) ON DELETE CASCADE\n\t\t);\x10\x06\x17O)\x01\x00indexsqlite_autoindex_operatorbundle_1operatorbundle\x11\x00\x00\x00\xcd\x17))\x01\x82Otableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT)%\v\x06\x179\x13\x01\x00indexsqlite_autoindex_api_1api\f\x81\x1f\n\a\x17\x13\x13\x01\x82%tableapiapi\vCREATE TABLE api (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\tplural TEXT NOT NULL,\n\t\t\tPRIMARY KEY(group_name, version, kind)\n\t\t)\x81\"\x01\a\x17//\x01\x81stableschema_migrationsschema_migrations\x02CREATE TABLE schema_migrations (\n\t\tversion bigint NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n\t)\r\x00\x00\x00\x02\x0e\xca\x00\x0fp\x0e\xca\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81#\x02\a\x1b\x81 ;\x17kolm.gvk{\"group\":\"operator.tekton.dev\",\"kind\":\"TektonConfig\",\"version\":\"v1alpha1\"}buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x81\r\x01\x06#l1\x17wolm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.5\"}cockroachdb.v5.0.35.0.3quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack\r\x06\xbc\x00\b\x06\x1f\x00\x0e\r\r\xab\v\x8b\tj\b\x14\x06\xc4\x06\x1f\x06\x87\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00f\"\a\x17!!\x01\x81\x17tabledeprecateddeprecated\rCREATE TABLE deprecated (\n\t\t\toperatorbundle_name TEXT PRIMARY KEY\n\t\t)3#\x06\x17G!\x01\x00indexsqlite_autoindex_deprecated_1deprecated\x0e\x00\x00\x00\b\x00\x00\x00\x00\x82M!\a\x17!!\x01\x84etablepropertiesproperties\nCREATE TABLE properties (\n\t\t\ttype TEXT,\n\t\t\tvalue TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE\n\t\t)\x82S \a\x17%%\x01\x84itabledependenciesdependencies\bCREATE TABLE dependencies (\n\t\t\ttype TEXT,\n\t\t\tvalue TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE\n\t\t)\x84\x1e\x1f\a\x1b5%\b\x87mtriggerapi_requirer_cleanupapi_requirerCREATE TRIGGER api_requirer_cleanup\n\t\tAFTER DELETE ON api_requirer\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\t\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\r\x00\x00\x00\v\t\x86\x00\x0f|\x0e\xf0\x0ea\r\xb9\r,\f\x86\v\xf3\v[\n\xc7\n*\t\x86\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81!\v\a\x1b\x81\x1d;\x17kolm.gvk{\"group\":\"build.dev\",\"kind\":\"ClusterBuildStrategy\",\"version\":\"v1alpha1\"}buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x81\x1a\n\a\x1b\x81\x0f;\x17kolm.gvk{\"group\":\"build.dev\",\"kind\":\"BuildStrategy\",\"version\":\"v1alpha1\"}buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x81\x11\t\x06\x1b\x7f;\x17kolm.gvk{\"group\":\"build.dev\",\"kind\":\"Build\",\"version\":\"v1alpha1\"}buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x81\x15\b\a\x1b\x81\x05;\x17kolm.gvk{\"group\":\"build.dev\",\"kind\":\"BuildRun\",\"version\":\"v1alpha1\"}buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x81\x10\a\x06#u;\x17kolm.package{\"packageName\":\"buildv2-operator\",\"version\":\"0.3.0\"}buildv2-operator.v0.3.00.3.0quay.io/olmqe/buildv2-operator:0.3.0-1869-nodep\x81#\x06\a\x1b\x81#1\x17solm.gvk{\"group\":\"charts.operatorhub.io\",\"kind\":\"Cockroachdb\",\"version\":\"v1alpha1\"}cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869-nodep\x81\n\x05\x06#k1\x17solm.package{\"packageName\":\"cockroachdb\",\"version\":\"5.0.4\"}cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869-nodep\x81%\x04\a\x1b\x81#1\x17wolm.gvk{\"group\":\"charts.operatorhub.io\",\"kind\":\"Cockroachdb\",\"version\":\"v1alpha1\"}cockroachdb.v5.0.35.0.3quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack\x81\f\x03\x06#k1\x17wolm.package{\"packageName\":\"cockroachdb\",\"version\":\"5.0.3\"}cockroachdb.v5.0.35.0.3quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack\x81\t\x02\a\x1b\x81\x037\x17Yolm.gvk{\"group\":\"windup.jboss.org\",\"kind\":\"Windup\",\"version\":\"v1\"}windup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\x81\x01\x01\x06#m7\x17Yolm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.5\"}windup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\r\x00\x00\x00\a\x0e\xa2\x00\x0f\xda\x0f\x9f\x0fv\x0fS\x0f\x1f\x0e\xdd\x0e\xa2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x009\a\x053\x1d%'operator.tekton.devv1alpha1TektonConfigtektonconfigs@\x06\x05\x1f\x1d59build.devv1alpha1ClusterBuildStrategyclusterbuildstrategies2\x05\x05\x1f\x1d'+build.devv1alpha1BuildStrategybuildstrategies!\x04\x05\x1f\x1d\x17\x19build.devv1alpha1Buildbuilds'\x03\x05\x1f\x1d\x1d\x1fbuild.devv1alpha1BuildRunbuildruns9\x02\x057\x1d#%charts.operatorhub.iov1alpha1Cockroachdbcockroachdbs$\x01\x05-\x11\x19\x1bwindup.jboss.orgv1Windupwindups\n\x00\x00\x00\a\x0e\xf7\x00\x0fv\x0f\x93\x0fQ\x0f%\x0f\xb3\x0e\xf7\x0f\xe2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00-\x053\x1d%\x01operator.tekton.devv1alpha1TektonConfig\a+\x05\x1f\x1d5\x01build.devv1alpha1ClusterBuildStrategy\x06$\x05\x1f\x1d'\x01build.devv1alpha1BuildStrategy\x05\x1c\x05\x1f\x1d\x17\x01build.devv1alpha1Build\x04\x1f\x05\x1f\x1d\x1d\x01build.devv1alpha1BuildRun\x03.\x057\x1d#\x01charts.operatorhub.iov1alpha1Cockroachdb\x02\x1d\x05-\x11\x19\twindup.jboss.orgv1Windup\r\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\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\x05\x00\x00\x00\x03\x0f\xf1\x00\x00\x00\x00\x85\x0f\xfb\x0f\xf6\x0f\xf1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x8d/\x01\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.5{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.4.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\"\x00\x00\x00R\x03\x00\x00\x00;\x02\x00\x00\x00:\x01\n\x00\x00\x00\x04\x0f\x9d\x00\x0f\x9d\x0f\xd0\x0f\xb9\x0f\xe7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1b\x03;\x01buildv2-operator.v0.3.0\x04\x16\x031\x01cockroachdb.v5.0.4\x03\x16\x031\x01cockroachdb.v5.0.3\x02\x18\x037\twindup-operator.0.0.5\r\x00\x00\x00\x03\x0f\xba\x00\x0f\xea\x0f\xd4\x0f\xba\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x04\x03-\x17buildv2-operatoralpha\x14\x03\x03#\x19cockroachdbstable\x14\x01\x03%\x17mta-operatoralpha\n\x00\x00\x00\x03\x0f\xcb\x00\x0f\xcb\x0f\xe0\x0f\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x03-\x01buildv2-operator\x04\x0f\x03#\x01cockroachdb\x03\x0f\x03%\tmta-operator\r\x00\x00\x00\x03\x0fy\x00\x0f\xd4\x0f\xab\x0fy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x04\x04\x17-;alphabuildv2-operatorbuildv2-operator.v0.3.0'\x03\x04\x19#1stablecockroachdbcockroachdb.v5.0.4*\x01\x04\x17%7alphamta-operatorwindup-operator.0.0.5\n\x00\x00\x00\x03\x0f\xb8\x00\x0f\xb8\x0f\xea\x0f\xd3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x04\x17-\x01alphabuildv2-operator\x04\x16\x04\x19#\x01stablecockroachdb\x03\x15\x04\x17%\talphamta-operator\r\x0f\xa5\x00\x04\x0f\x16\x00\x0f\xd1\x0fK\x0fx\x0f\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x003\x04\a\x00\x17-;\x00\talphabuildv2-operatorbuildv2-operator.v0.3.0+\x02\a\x00\x19#1\x01\tstablecockroachdbcockroachdb.v5.0.4\x03+\x03\a\x00\x19#1\x00\x01stablecockroachdbcockroachdb.v5.0.3\x02\x00\x00\x00,\x19#1\x00\tstablecockroachdbcockroachdb.v5.0.4-\x01\a\x00\x17%7\x00\talphamta-operatorwindup-operator.0.0.5\x00\x00\x00\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\x00\x00\x00\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\x00\x00\x00\x18GnANnnat+tKuWrj46Pq8Ohv2DCwnYhQdih7zM+WNCNO2VNQ/MCwbEtRCjh+tk6au5MZSHAFRRJ0IiDAgwiFUbbhtkIreetogT2dWnoOSf7YMRop1YyNwyRD1bTFbfAC/q8Vs64Fpb49ZjfcVRglw8EpaZgDq+aN9vGoMqIOtDU9Tu/bQtVr1WAstkBoWN3gkkVGQ8BAlSztC/5Z8RQHPumEjLqudLulNdhs8PF+gEelzkE4qPD15UD1oMamvql4UIx8UsITeKMq+5mfzWgLFvPrqro1s2mFDsZBb2vTG+QzXrWqfceMB4iJAOM8SsZKLuGq3K5KrJ5wfqXEb3fKTDSW2MraDBNfylw9mytpZcWBEfJ7bhgNx9tJmloGxTdoZKWj1dykmL7+QxiVEbTdZEDDu1PZupnb0gGFIZ9wWLjjoM6zI0uZCn9W2chRGmSVo+0tmRNgpiTwtAgfrWlGf2aDVhvIRG8z9aAed9tOov4PUR7JSAkibc+kSkk2Y5IrJqSlCVNo1LdmKVjfPBgZEGtCHqLGPuJHZYAZsjVttUpQVYgAKRApjaWC73mQ8YIp2tz31YaLi6zmcIEOy0PmmABiHdu3AmOpRolAnEZtxjRy1IaDK91sZQw7AC+CjDRlokdT493Dw2MrCrF4EZLEw5ExKCaLH7LWHtmg5EYM6ie7SklnFUFNIJRk1YLUYrPXKmKrWKym/1oo2RlZCId2qHa+nbnXL9aSCD1yqU1pDG2yL3chqoy7YRUNkedHCclzaumBzu6txCzegBSePqCZd4IahJVzsNtU3taeZearIB7PVo0UEL+1hQrVwE91rRw3udyPkABak7sb7XOv3J9WL9nPIGq0rTe0QpQRtxiDBZ7UuNf580S7sE3BRGi/3h+oVEVKbzCYav5CM1DUJYfDhh3CRrQRTa/74ZFwk6bLBmy79zhTgTgrltjPlOJ8FjvZu2T+LD+a2zdX+mO+eFj+AEOFx0Bw1o7zuxJuuSP1qFRBMAI0qoWyyopmCRUQEmSFxONm38GNtwMQe7GXOiFRFtxVo8YLbUNZDs1GL5aS2trWCicTvCi2E/liXiQUaucrPu/gs8KhV1nEZQrS+77KeVjXVAteGhsR9ImQ7CLkF8cynFjKHGjug0bOFFXRP5EOTLgexszYggQ8x3XKRj9QuR2ygjoSyX/KcsfNzF5hAtQjDX9gMGM4+iagKTk/2q5D42tQBn4jNzENnL9WdlGkyNYF7rdr8Eb8o83Qp7y3MKXpiJ4EJFRD+rr2EURu97zoATAiFaM1q79f+qUkm/P5Aw0HdoYu6WloF4qLW1BgZ1D/1CFBCGFu9iaHCyuriRbuI3tC+9J7b3emdc7uPCchP4hEgi2FIfj3BoX1SUXWsBkqMdbje8kaOBfySiB7ehSwp8Ka1zahmQ2F2WtaO8Hsi9ZtGvzvCs0epB1+r9qlyHXUNAGHtAk1bS93acaOmnRrUTLW63Nr6hfHNJsBFYzhxeUKUMCzc0wa9eO+oLhga6gTPd0LR0g08xN1AWNqffPet4cUs+ijf7VLFJXt3rSWydm93t+3+vmuta8OnovC8kDeM0PlW4nsXa3Kt/rgRMVMo4e7dWM/aFrzLWVAvmGRJIbSN9rFhUDtqxuKCbAesxNoO1RWXTLLILWBjM2kcKK1fXejGWKKWvDVXezRt34pPoj4p2D/M4SQFx68piI+4qit8qK7iDbIrNXuTmeR5MlVwcN556v9ZmpqPfB0uB9Xv0abLLtKBu6OtSqSqvaJAqVbF7KI495S81XY0O3vW/RjustaiDdQzYb32azua+9yONhdj1V7Z+0wiYd81tFSvDkP4Du0SyBAkSdGujKgEFXqtA0O79gja89jeu8PUjFZrXAp58lOZFvgcKXp1erPfehRGuzwGJavdQCCrCLM4LS75Xu8GUYQefrh9bK8ltm1rhVw5oM3yLWyTustMm4WktraCBzWk89T+dQ6BMDgopKiN6V6LuGqxP2ub+Bnkr3aGe6Smic+rkh84b0T2vW4GGvi/23b5+Wr++gBtkgSY71bXeSyOmeEH7/WEqUcuMi2Xp10xW5Sj/auM1F8ViJWZ+NelZ4YytCB45bwAu7at2mwRCOAvqpcb8DOTFila4xAKToDDNFDJXJeMzVC6n2XV6DZY6OOXPbOfm0iGBDySQs1zjF+MqEo9k7cYM/nk7l7qnLXYGZMnIgAiw7xP2QGVWw9CKe8dPBOlkLKeVjEFmsGHTzttAWxQKYfKsys/UUAmqHM/tZtJ7Th17nt2MKLoRwgIV8LwwqO7xbw4uXJwk9PpFvTg39EOMPXva7it5lWpBcYUrgdtV9Alsf3oatZxCMhuQVrgROuAWG6EyhUxKL4vLZ6/zAHzj5LkNbl3T71DncwYuv6CzsjLI7ozNlbSdKmRz9ygyw5yB+eVyWU9eHXEVFRt0zLMwLtthwy9uunuK1r3aY7tTMWV26G1b5iUMsTNMIGAYUHbODUTnDpUGKquLbBRa6ulDMoWfwYcyPpOLdTh6UCXpl3YaihB9ONCxhlZBQh3zEp2aB/hnlm7AJVQCmnKEX9I7CSXQMj8xjzw4HfYx6A2Pc0RkId60BIpZKs2AXKRpm0jwjz5WlOiHl36knk4mCqtM0hcPSKnJ5+0o3x6hP3QLT/PtSA2+7jPtThufhnwKh2MxbL3WZln68DzrIxN2izl7s4fuQfkOZh6inbpPo/cYAUC7pBAZVOW5DvmHhTNjJWiPEEyVe0tIrdL0/4TMJAp2tAZCg1AXjtVabXsuRlAHcUmaNbDFlAraoqax3q+n0z4Zw9p3VcjrMtaydEuYT1At7UDNOmRJosvVv+1bUHl5ZD54hCxVVAHR45pIQ8bvKbG4Dxk4SmdKp1VT87BWlnNYe7vzo1VU62TWV4PziEIvTrnzM3Q4oXvJKT32s6RvdalKUhKFGMZrNq8S2sFRduvtbTYpIpw9iAHIIf+D9Q1WY/0Gd4ZeSSt/jeLZdVzK5Pixbyv0xu8feXteaffUfpFEef+nn3m75+XcHoYN9cAVnAferalA6FD7IDA3+qBnGJNwWWgpCk+iUfyqBF83Bpie99dLNwSkkO7NYGdABv0JXE/N4Bd1ADuuYoghxb/YIM1pMn81kJM5q70sDN2aiJaIX8pi+wk8dAaK+uJYIbh8srkp6sAsIEUuE89cZS1w0CPk+EXpmSvNvHh5bTErYVIPRNpc7GAhdODq0mPZ8hg6gHYYArw0dD9GAtsK+wM8ne37d0+Q4poe+XgLGppY/eAr9djsCCmdgJqhx/S8xip7o2a0GNeLSN9OR/+CWZyykgAGtlxHIjvwQGRnnbHd4dA0Ca7EdcVUcpsPWlrte03CiUtTIYtqvZ2Ard2REkvlBYxZiiVSrlr87YewSpa0XB6LlN+bWqZXcIDIe2e71Tipe8wjvRsu6pqRMDbU90uUg2Gue3OadNtNOKyA7m20McD37+ZCcKtzfLpZHcnm6FrWTmkps6Ptkmj5Ha0SKqCkiKvT5TPMI4vWwp2KV9I5z4BlNfzr7hJ7dWH86+Hq2AYyae98jULpPChIuSkp6qN2usjT7Tm1ibmQsKgo6YWzxOhAfNP7vg7zWwVLOuJU+0AQXLYOKY20nttrrB353GHAeQN+AtMQQJRizfCQFXHfRhbj8l1FMjdAd12WVkJ04TTImujcNRw6yME9YjQlrYO6mNDwDXd+sif9RH1TIHkIsiihxEgyeFn5EROT8gPPX0DHxztnQdAoqeStOmbc5MZWsk+etwbnfVFnf78IByMv5q15v8A/LsDpkefQncAAAxZaUNDUGljYwAAeJyVVwdYU8kWnltSSWiBUKSE3kSRGkBKCC2CgFRBVEISSCgxJgQVOyqr4NpFFMuKroq46OoKyFoQsbso9r5YUFHWxYINlTchAV195XuHb+78OXPmP4WZe2cA0Gnny2R5qC4A+dICeXxECGtsahqL9BAQ4B8FeIGhfIFCxomLiwZQBvp/ypurAFH1l1xVXN+P/1fRF4oUAgCQdIgzhQpBPsRNAODFApm8AABiKNTbTCmQqbAYYgM5DBDiGSqcrcbLVDhTjbf22yTGcyFuAIBM\x00\x00\x00\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\r\x00\x00\x00\n\rP\x00\x0f\xc0\x0fx\x0f8\x0e\xec\x0e\xad\x0ec\x0e#\r\xe4\r\x99\rP\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00G\n\x03g;quay.io/shipwright/shipwright-operator:v0.3.0buildv2-operator.v0.3.0I\t\x03k;quay.io/olmqe/buildv2-operator:0.3.0-1869-nodepbuildv2-operator.v0.3.0=\b\x03]1quay.io/helmoperators/cockroachdb:v5.0.4cockroachdb.v5.0.4>\a\x03_1gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0cockroachdb.v5.0.4H\x06\x03s1quay.io/olmqe/cockroachdb-operator:5.0.4-1869-nodepcockroachdb.v5.0.4=\x05\x03]1quay.io/helmoperators/cockroachdb:v5.0.3cockroachdb.v5.0.3J\x04\x03w1quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppackcockroachdb.v5.0.3>\x03\x03_1gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0cockroachdb.v5.0.3F\x02\x03i7quay.io/windupeng/windup-operator-native:0.0.5windup-operator.0.0.5>\x01\x03Y7quay.io/olmqe/mta-operator:v0.0.5-1869windup-operator.0.0.5\x00\x00\x00\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\x00\x00\x00\x1c,\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"createdAt\":\"2021-01-11\",\"description\":\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.5\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAkF3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtpdhu5koX/YxW9BMzDcjCe83bQy+/vIklJlq0a3uly2ZTIZCYSEXGHANLs//3PMf/Df7XmbGIqNbecLf/FFpvv/FDt89/z6my8/97/Tn995n5933x84Hkr8BqeX/N+Hd95P31+ocTX++PX902Zr/PU14leH7xPGHRlzw/rNcjXiYJ/3nev303zzw89f7md199Q7ik+Dv7+eyxMxkq8GbzxO7hg77/1uVJ4/nb+Zv51IXEg//Jz5BO9X3+fP/MxdX+YwI+fvs2fna/3w+d0PCd631b+Nk+v91368/zdWfo6Iuc/ruy/\x00\x00\x00\x1fLwF+KyIXopzfovWSuPRecHavVmlAq4TuJ/hyJbmzbwTrKOZ76vtVqfEm2JQ5wOwr/rQA57gLW60RRqt2wZjxjH70zwCzCVCVRmq8CTZmPjD7wifntarIW1/oAJdPwtE2FVAzgUUSrgtRwiJgprNdGskTJrV6Y1o3dD+JVVkKR1p3QC0BJkmNN8HGLAUme/cUMq04MvRlRErPjC3QdBg9EaxTXz6WU00Fm/IxML3juJyIEXlEefRavhrWhXLlalPt870LXC52I9hM5DO0p6J0ynfHIqphESd0gA8HdEA5E9zAe8AksR/BJuH6dO2pqI40kUdU6H4yU/KOkjo+pxqYzGkTdIIQgSwCJncclxORIo9Yj36i91IUzu7pCngJuEXsSYhA5gMzvXsKdSSNyW3h0WuZVqxxtEvTwK1YiQeCEEnMAW51tkuLaJFHvEevpWz5Uv553yyA+4FHaMJGGEEIIV6s1O0nLnxyXkSsk0eF0AG8X67ko7uuAVTtuF3ELrSWyKeh9ZIr5r6Fc9wFtmi0YZfedY4ZT1zns0GbS4BBNGM/uyA0kWJgENpcEpfe0zYit5VHP8EPO/hrz95kDE5PAz4Chon9CS3ABuCKfZsKD92xc3ur7UKLeo9+grN7cbvWuFLSDwEjsepvCUI4eRUY6UrtfugOrW0ncnt69JP4oLvCkZIOMBOYJ/YohIFZwEu+I4W0dPknEfppLB6SAdZ57G8RxkMihJhiJ9ZZBOtaslqrCL0BFnVRODung5WKOFHsVGgGy4BJ3gOFtFTddRF6I3hFKVIHpxtADvCB2KvQBKYCiw9vKjRviSJtGNF0h27WmvYjLjGBvwO9sM6cFoRg+NyyGf339iMuiSqRR51HP5n3lCJucDrAA8CDQILYslAHlcDDwB9qNhUyPUr1ELVCB2BbPstvno6n/Fiqf9yVLXYtnMQ6YKKrXVrRhBffhHP6Re2FRrfQ/Xw4oCPK6Qa4GWsjQlux8ZimBKvq8CvaW8WUvOhPsowJodeyeHA6KOXGSoC4Ruw9JnkbuAmtq3M2FcbMRRuxdIdzNhXScfSEaqz10YHAVkCL7Uc92n+vBwLXpo6dFFMijzmPfko4P7ATyuFyABdjlaxKFj1EJWVYBUc/0z6Pb8qWwzHZCUas3v0pWw6T1Ge4D60/AdoD/wUUiS6ihiL/PW2P1p8k9R0RsyKPaY9e1/hdKYWGp4E7gXjpFVtSBbyglLpXmz5yNh2QHhGhn8pCpXAP7gKoeKxqNg9Jr9iKh4An0LqqevMBrhLbFqHXx9Lz+mJWlgCkAj/DWorpID0TkRzFWjKdCxQZCe2Y9PX30isi9EZQWc7i83phnQLHbP8rSzomIijAOoX3GdDkfL0DEpKkV0ToTeeXSjE2C5zt0h3AAKy97yOkZ1qFtVh7xPO8hwp9qw7AU2LDIvRQs3hQZzAcYG2auRr4pYT1LRKePwW8A+zA9JGz+aD0igi9BVjxKYt/cUNtWP8T4C5gFNBGOicklAKrgeeB90GT8/IiGD5KekaE3kocL2bx+IG1/7oeeBzIABzSOY3CB+wHfg0sAIiG6i6RgCFdEALapZCzcT/JfbNBmwuATKAr1mmwy6SDGmSZv6+6Aploc0Fy3xEicvHokc+XM2/g6Np/gDIA3Finwk7zh/fnxHj3bPWH5YuwSn9Vo01SRl3O+S++JsYjQrcvn155KZUFebVjehfWeXIzgd5AIhAXpZdeA1QA27EOy3wZ8IAmocdALvngEzEOEXoUYposSnfg6JSKcrhqvX0S0AeYAVwF9LD5Vf4ILATeBbYB5aCrtc+L73AR0w6YoJTYggg9tvjihhkc37TKb/yqVvzn+L39AKztlf2BvkTOBJ8PyAe+A7YAeX6vvRWoBg1a027oeMa99o7cZBG6EDDcnziOyn07Tvd+8VjHUA3yPwT6Al38P4/3PyTc/uGBC+swyoYmXU2swwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\"]}],\"serviceAccountName\":\"windup-operator\"}],\"deployments\":[{\"name\":\"windup-operator.0.0.5\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"\x00\x00\x00 name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.4\",\"version\":\"0.0.5\"}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.4.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\",\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"createdAt\":\"2021-01-11\",\"description\"\x00\x00\x00!:\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.5\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"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\x00\x00\x00\"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\x00\x00\x00#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\x00\x00\x00$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\x00\x00\x00%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\x00\x00\x00&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\x00\x00\x00'NO3PHR30d+59dS66xgMOl52fgZR4PVKa/uQY+PqbSUzvxsaf34ByGLYRul/bJxJmFPUc5xKtGEO7s+2xB0N2fJK35Bh7//0+24u81OujxucRdZ9G5kWXMuS5N+zk2d3+W3pKZlzMCR2lqMhdwvHt34Xk63b86SkcI7Js3SWlXh9Vcm5cvWLv/cjLmIWFdhE6p3t0V0zeubj25F01mrId+c36mh/nP0/xWy/UeyabHTx5tWki04gNhPE/vYWB8xehfRH/QHSd7tFjV+hYS21brurHkTWrmvBpza75f2b/U3ej3El2DWyscF08edCcPXkqQ//8FtpTaROh+06sEcbwwq9Gu7PI/8k4fpj7JDVHjwT1qcrCfXx77YUUPvcYKrG7fcN1j0fC9SbQfdyF9HloLuaPERvGn9C0oa3sMEX9Z6VHNqaJDvgKMpTWGiMjk4OvzGXteZ35bvZPKS/Y6f8OH9pnvQCKVn7M+gl92DAxm8qdPzZqFlbX21azvg8G/HxT/1+AKp9Jtc8n4XoTOefq6znnxTci1bMbtR5d+SrKWD2+vxuosmtnOzqkYrjrXh30lZVgljXhWB6fF126HyM5DkfngXi2foOzR198hflow4lKTG9SUowztTPKWfcoyXusGF1VUbdQq0uJO6s/1PXgUgrPvgJOL/Fb+4BwZWSecYyzUlDq05QWbEfVtUpQU8zl64qIS0oWNQfB7i/+yca7rqs3Y7KViM/5Zne18paVsubCAbYWutDIMTn/ml0PaJYi9Eazc/EH5N0yDSMjPaKEPnntrmrDrrPEQtMpCWp2XaFNjdbyCvZ1ds5Uej71IromskpJa9NEdl7EmCcvCXJ2XcUlc/jwYZzl9t6XrVp4z0H6lOnsvPk21OB2EdUPTtl8EVvhevBLaOqEp7IzLdl+Q2tWX3sFxtDuYEbOjjelFM4InDywg/VgdEoPcBKvwiw6eGKWPCLampZBhc/EZ+pTQzgF3v0FIFtqm4+nhq+zeuAY0jVy7n3tbXY6cWLEQJk4nwddcwxqKq3ZZweouBSISwy43bReqvbQ/S+rwOGo8+l58LlHqfzofXA2IQfJ5/W3teKEGJW7A8QlNamt+oc9ZH64us5lOGUY/Dj3MYoWvo6Kk5OymxwWG4Yl8sHpESdyABxOnIZlrBowsfNaeh3iNiikw0MLcXfrjrN9BxzJbUAZ6JoavCXH8JWVUfLRQsr++EdU3x6Nu0mGgaprOUupxi+7eapQ1YdIeeoD3OnpONu1x9GmHSiF9tS2tZySf/yd0gcexRgRXFsVUHKMutvpF3qTHnTCKSJff+M01JBuoH2R1jzTr22Mk7yONyp6XikUlbS547dkLT9Em5FjiEvvhpGQhPaZVvEIw8DZPgV3t0zS7ryP7l+sI27UJejju1t+5OzdQ9tfPMxZXxTRZvhIq62JyVaCjtcLysDZLgV31+6kzZxN5paNxI28CH1kd1Bj8ipZVAlvuN6lC95DeyNR5KdounZwpgEP1iHq9qa8gIw31uDq0i2oEkDa68GZlkHX3z3OkYEDKJn3NLRUnlh1KV1fXYOrS1fMIEoMa68HZ0onuv7+CY6NGMXRPz0asK21s+syAxMeDK1PCtd9Efso+pdHP1XotvbkuuII3d7ZhCu98Xnn2ushZep1tL/7N+ji3WFvK644ur21Ald6tya01Uu7CVPp+Jsn0WW7z/DkZbJBJay4nA6++elka+ItwmOO04UOUG3r3j9WQPqLS3B2TGv6VlGt6TDpKhKv+Tno8PlCvb+ALk/+FWdKarPa2mb0RSRceRf4c/BPzngTwvSM9npZfWlffMeORObE22kx44kI5CSPbl+ha03y7DnEn9Wn2Z2vvV4y7n8Ec31BuBpL0t2/I753/+bvXdcmXX/zGHrLvhPhuuwnD7PIMzPRxEfUOnkDQj/JoyulsXGuu7l+Dx0uu7zhG+V0ohxOVANLir7KCjr/4+PwtHXbHjpMyGmwfFXQba2opOM778p+8hYI19fnDLHG5PahCpQG/2SccrhM7a2xrdDj75iBKyUNs6Y6oMcv+XIFpR+8jkpqg6NjF9pNmUFCr751T9hpjatjCnhrwBna+Un3pSNxZ/XErK4O6KWPf/E5ZUvfBsOBo0sW7SZNJbHvoACTi5q4zO5UHdqHkZouigwDhtasvXoC2ki2iyc/IXTldJknhO4rL8Jwtz0ADLbjjWg77eaAs9bK4eDA0/9N5fL3T8kAK//Ds6R//jEJ59R9JHxcWheoPgDOzJCG7W1+OhvtqdtYlMvFob88TfnCV08k43i2bKDi2WdJX7ychL6DoY7arEk9eqH2A6kiypATwRlvQXDAd7zgX2N0XXUMIN+WN0JrnB06BBzvlm9aR8X7fz4jzdPIzuTIX/6IcjoDiC4OZ5/skNeAi+/VH23WvRxTsWkdZS88dkbGndE/k6InZmPEuQIEASZtrr/MjoYY0TgNg3WRnPHWMPnaXw/DErqVbZlnT6Gb9R5/VHOoCJVc9zKI561PAmexaY2z29khKwXtnwsJmKUGULl9G6pTRt1tXf59wLZqrYnL7I1sOQ6tyE9kvNmXPF12ktBNa9J2s109en3TzNqk3pTUemeoHa46Q+VmKL3+t02zySmpyuUSdYYyXI/sjLdg2ewrOUnoftFviMqbJmtNQiMwtGZNVg9UZGe8BcuG2iJqBsBka/xRBfjkVguxio0y3oLBB1Td4h/OGae5vXy53ZEZlJRIcBLePrZXxlswnKLl0weE38ktjzxKvD6p3Blukdsr4y0Yvqtb6NZTTM77jTBPXiq70MIertsw4y0YtpwcmZwQesJZg8CuS2xRLnIhPJyS8RZ95CX2yT5T6EP/thRgu9z+yEB2oYUZTw1fd+2K7+jhaArXT2b7xe8uDjhG3yoWEBkil11o4SMKMt6CYWvdY3SLauBHMYXWC9fLvF4J18Ms8ijIeGuIHzlt23ldaVgLxRxahwrTOvRQCGO4Hh0Zbw2x8PSMzlOFboUx74pFtA4mslYeLqIs460h3j19j8YpQm879AKAbUCNmIYQLURZxltD1ADb2o+4NLDQB8x7A6AcqBDzEKKBKMx4a3AECJSPffl/qX+MrnU1sswmRIvIoy/jrSG2+zXckNB9AC+JmQh2D9ejNOOtIV7S5pmV288Quq94P8DLYiqCXYnyjLeGeNl36EjDQh+7S4NV+F2SZwT7Ef0Zb/WxFfBMO6QbFrp/nA6wWqwmhONFrIw3WSUPHzGS8VYfqwOVE6tT6AlnDQRYJKYTWpFLxlt4RR4DGW8NsSix97Dghe7f4LLUNpen6xdZfe/XWxHO5w2ZyIPZoKIMA93UAo9eT+yad+xkvDXE0osXLg1e6H6qgWURf2mGgfYFvrlxnVLQ5YV1vueacUHgyqlK4du/Cxo4KaUhTjkmSZuYZmAht+3ZE33wcJ3vJYztFvAhoFBU79nZ+HPZo4AYy3irj2XUc6xaYKFbY5ynIz8uNvCVHAto5ElDR5Iw4fozyjab63bT4fZfBTxaWXs8ePLXNFk8SqkzTzXVULEzP2DJ5/bnnkfK7T8/o62+/EKyHvwLpqdur60cBmXvLm9yBVm7EmMZbw3xdH0PuoCW0X7kZQCbsEHByNIPXg9Y7lj7fHT51aO0/9XjOLp1xdmzD+4xl5K+4h8kDx0V8DtrDh8Ad+cmihxKPd4zw3WlOPS/f8II0FbTU8PZd/2Krg88iTvrbNxZZ5E8fgJ9lyylw7CRgQ+pKPgBs32MzXvEXsZbvYNMYFPK2CmB5zACvdHv+ZfJHZF1ENgPdI/kqyyf+ybmf/w3KiEpYHjf/oKL6XCJ/yBGrdE+HzrQuFYpPEVHwOluUnsqfVBl+uo8ILF04RdUPvgjcWnpAbyzky4XXUb6ZRNRWIczaJ8PM+AYXFFaUICRlh5bIs/MtGbXY28JrS72AwfPf35e4z36SeH7ryP9Kh3Du1G8vOG5Q+31Wi9f/UGKIyGRg5de3uT21Gd6jkFdOPJ9flBtNYNoqzMxgd0/mRFT4XqMZrzVx68bimrqFXpS3xEAC4DSSB+nlz57D9V7fmj2hJRyOCn8f/+FMTwzTG1V7Lvup1Ts\x00\x00\x00(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\x00\x00\x00)wwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\"]}],\"serviceAccountName\":\"windup-operator\"}],\"deployments\":[{\"name\":\"windup-operator.0.0.5\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.4\",\"version\":\"0.0.5\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"labels\":{\"application\":\"windup\"},\"name\":\"windups.windup.jboss.org\"},\"spec\":{\"group\":\"windup.jboss.org\",\"names\":{\"kind\":\"Windup\",\"plural\":\"windups\",\"shortNames\":[\"w\"],\"singular\":\"windup\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"auto_deploy_exploded\":{\"default\":\"false\",\"type\":\"string\"},\"db_database\":{\"default\":\"mta\",\"type\":\"string\"},\"db_jndi\":{\"default\":\"java:jboss/datasources/WindupServicesDS\",\"type\":\"string\"},\"db_max_pool_size\":{\"type\":\"string\"},\"db_min_pool_size\":{\"type\":\"string\"},\"db_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"db_tx_isolation\":{\"type\":\"string\"},\"db_username\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"docker_image_executor\":{\"default\":\"windup-web-openshift-messaging-executor\",\"type\":\"string\"},\"docker_image_web\":{\"default\":\"windup-web-openshift\",\"type\":\"string\"},\"docker_images_repository\":{\"default\":\"quay.io\",\"type\":\"string\"},\"docker_images_tag\":{\"default\":\"5.1.4.Final\",\"type\":\"string\"},\"docker_images_user\":{\"default\":\"windupeng\",\"type\":\"string\"},\"executor_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"executor_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"executor_desired_replicas\":{\"default\":1,\"type\":\"integer\"},\"executor_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"executor_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"executor_mem_request\":{\"defaul\x00\x00\x00\x00t\":\"0.5Gi\",\"type\":\"string\"},\"executor_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"gc_max_metaspace_size\":{\"default\":512,\"type\":\"integer\"},\"hostname_http\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"jgroups_encrypt_keystore\":{\"default\":\"jgroups.jceks\",\"type\":\"string\"},\"jgroups_encrypt_name\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_password\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_secret\":{\"default\":\"eap-app-secret\",\"type\":\"string\"},\"max_post_size\":{\"default\":\"4294967296\",\"type\":\"string\"},\"messaging_serializer\":{\"default\":\"http.post.serializer\",\"type\":\"string\"},\"mq_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"mq_queues\":{\"default\":\"\",\"type\":\"string\"},\"mq_topics\":{\"default\":\"\",\"type\":\"string\"},\"mta_Volume_Capacity\":{\"default\":\"20G\",\"type\":\"string\"},\"postgresql_cpu_limit\":{\"default\":\"2\",\"type\":\"string\"},\"postgresql_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"postgresql_image\":{\"default\":\"centos/postgresql-96-centos7:latest\",\"type\":\"string\"},\"postgresql_max_connections\":{\"default\":\"200\",\"type\":\"string\"},\"postgresql_mem_limit\":{\"default\":\"2Gi\",\"type\":\"string\"},\"postgresql_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"postgresql_shared_buffers\":{\"type\":\"string\"},\"sso_bearer_only\":{\"default\":\"\",\"type\":\"string\"},\"sso_disable_ssl_certificate_validation\":{\"default\":\"true\",\"type\":\"string\"},\"sso_enable_cors\":{\"default\":\"false\",\"type\":\"string\"},\"sso_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_public_key\":{\"default\":\"\",\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_realm\":{\"default\":\"mta\",\"type\":\"string\"},\"sso_saml_certificate_name\":{\"default\":\"jboss\",\"type\":\"string\"},\"sso_saml_keystore\":{\"default\":\"keystore.jks\",\"type\":\"string\"},\"sso_saml_keystore_password\":{\"default\":\"mykeystorepass\",\"type\":\"string\"},\"sso_saml_keystore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_saml_logout_page\":{\"default\":\"/\",\"type\":\"string\"},\"sso_secret\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_service_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_truststore\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_username\":{\"default\":\"\",\"type\":\"string\"},\"tls_secret\":{\"default\":\"\",\"type\":\"string\"},\"volumeCapacity\":{\"default\":\"20G\",\"type\":\"string\"},\"webLivenessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webLivenessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webLivenessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"webReadinessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webReadinessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webReadinessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"web_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"web_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"web_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\",\"type\":\"string\"},\"web_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"web_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"web_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\",\"type\":\"string\"}},\"required\":[\"web_cpu_request\",\"web_mem_request\",\"executor_cpu_request\",\"executor_mem_request\",\"messaging_serializer\",\"mta_Volume_Capacity\",\"db_database\",\"volumeCapacity\",\"sso_url\",\"sso_realm\",\"docker_images_user\",\"docker_images_tag\",\"max_post_size\",\"executor_desired_replicas\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"items\":{\"properties\":{\"lastTransitionTime\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"reason\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\nquay.io/olmqe/mta-operator:v0.0.5-18690.0.5windup-operator.0.0.4\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00+\x00\x00\x00,\x00\x00\x00-\x00\x00\x00.\x00\x00\x00/\x00\x00\x000\x00\x00\x001\x00\x00\x002\x00\x00\x003\x00\x00\x004\x00\x00\x005\x00\x00\x006\x00\x00\x007\x00\x00\x008\x00\x00\x009nv\\\": [],\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n        },\\n        \\\"nodeAffinity\\\": {},\\n        \\\"nodeSelector\\\": {},\\n        \\\"podAffinity\\\": {},\\n        \\\"podAntiAffinity\\\": {\\n          \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\",\\n          \\\"type\\\": \\\"soft\\\",\\n          \\\"weight\\\": 100\\n        },\\n        \\\"podManagementPolicy\\\": \\\"Parallel\\\",\\n        \\\"priorityClassName\\\": \\\"\\\",\\n        \\\"replicas\\\": 3,\\n        \\\"resources\\\": {},\\n        \\\"secretMounts\\\": [],\\n        \\\"tolerations\\\": [],\\n        \\\"topologySpreadConstraints\\\": {\\n          \\\"maxSkew\\\": 1,\\n          \\\"topologyKey\\\": \\\"topology.kubernetes.io/zone\\\",\\n          \\\"whenUnsatisfiable\\\": \\\"ScheduleAnyway\\\"\\n        },\\n        \\\"updateStrategy\\\": {\\n          \\\"type\\\": \\\"RollingUpdate\\\"\\n        }\\n      },\\n      \\\"storage\\\": {\\n        \\\"hostPath\\\": \\\"\\\",\\n        \\\"persistentVolume\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"enabled\\\": true,\\n          \\\"labels\\\": {},\\n          \\\"size\\\": \\\"100Gi\\\",\\n          \\\"storageClass\\\": \\\"\\\"\\n        }\\n      },\\n      \\\"tls\\\": {\\n        \\\"certs\\\": {\\n          \\\"clientRootSecret\\\": \\\"cockroachdb-root\\\",\\n          \\\"nodeSecret\\\": \\\"cockroachdb-node\\\",\\n          \\\"provided\\\": false,\\n          \\\"tlsSecret\\\": false\\n        },\\n        \\\"enabled\\\": false,\\n        \\\"init\\\": {\\n          \\\"image\\\": {\\n            \\\"credentials\\\": {},\\n            \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n            \\\"repository\\\": \\\"cockroachdb/cockroach-k8s-request-cert\\\",\\n            \\\"tag\\\": \\\"0.4\\\"\\n          }\\n        },\\n        \\\"serviceAccount\\\": {\\n          \\\"create\\\": true,\\n          \\\"name\\\": \\\"\\\"\\n        }\\n      }\\n    }\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Database\",\"certified\":\"false\",\"containerImage\":\"quay.io/helmoperators/cockroachdb:v5.0.3\",\"createdAt\":\"2021-01-23T10-00-00Z\",\"description\":\"CockroachDB Operator based on the CockroachDB helm chart\",\"operators.operatorframework.io/builder\":\"operator-sdk-v1.3.0\",\"operators.operatorframework.io/project_layout\":\"helm.sdk.operatorframework.io/v1\",\"repository\":\"https://github.com/dmesser/cockroachdb-operator\",\"support\":\"dmesser\"},\"name\":\"cockroachdb.v5.0.3\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Represents a CockroachDB cluster\",\"displayName\":\"CockroachDB\",\"kind\":\"Cockroachdb\",\"name\":\"cockroachdbs.charts.operatorhub.io\",\"resources\":[{\"kind\":\"Deployment\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Service\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ReplicaSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Pod\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"Secret\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"PersistentVolumeClaim\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"StatefulSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Job\",\"name\":\"\",\"version\":\"batch/v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"CockroachDB is a scalable, survivable, strongly-consistent SQL database.\\n## About this Operator\\nThis Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.\\n\\n## Core capabilities\\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\\n## Using the cluster\\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\x00\x00\x00,\\u003cStatefulSet-name\\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\\n```\\nkubectl get service -l chart=cockroachdb-3.0.7\\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\n```\\nThen you can use the CockroachDB command line client to connect to the database cluster:\\n```\\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\\n```\\n## Before you start\\nThis Operator requires a cluster with PV support in order to run correctly.\\n## Supported configuration parameters\\n  | Parameter                                                 | Description                                                     | Default                                          |\\n  | ---------                                                 | -----------                                                     | -------                                          |\\n  | `clusterDomain`                                           | Cluster's default DNS domain                                    | `cluster.local`                                  |\\n  | `conf.attrs`                                              | CockroachDB node attributes                                     | `[]`                                             |\\n  | `conf.cache`                                              | Size of CockroachDB's in-memory cache                           | `25%`                                            |\\n  | `conf.cluster-name`                                       | Name of CockroachDB cluster                                     | `\\\"\\\"`                                             |\\n  | `conf.disable-cluster-name-verification`                  | Disable CockroachDB cluster name verification                   | `no`                                             |\\n  | `conf.join`                                               | List of already-existing CockroachDB instances                  | `[]`                                             |\\n  | `conf.max-disk-temp-storage`                              | Max storage capacity for temp data                              | `0`                                              |\\n  | `conf.max-offset`                                         | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\\n  | `conf.max-sql-memory`                                     | Max memory to use processing SQL querie                         | `25%`                                            |\\n  | `conf.locality`                                           | Locality attribute for this deployment                          | `\\\"\\\"`                                             |\\n  | `conf.single-node`                                        | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\\n  | `conf.sql-audit-dir`                                      | Directory for SQL audit log                                     | `\\\"\\\"`                                             |\\n  | `conf.port`                                               | CockroachDB primary serving port in Pods                        | `26257`                                          |\\n  | `conf.http-port`                                          | CockroachDB HTTP port in Pods                                   | `8080`                                           |\\n  | `image.repository`                                        | Container image name                                            | `cockroachdb/cockroach`                    \x00\x00\x00-      |\\n  | `image.tag`                                               | Container image tag                                             | `v20.2.3`                                        |\\n  | `image.pullPolicy`                                        | Container pull policy                                           | `IfNotPresent`                                   |\\n  | `image.credentials`                                       | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n  | `statefulset.replicas`                                    | StatefulSet replicas number                                     | `3`                                              |\\n  | `statefulset.updateStrategy`                              | Update strategy for StatefulSet Pods                            | `{\\\"type\\\": \\\"RollingUpdate\\\"}`                      |\\n  | `statefulset.podManagementPolicy`                         | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\\n  | `statefulset.budget.maxUnavailable`                       | k8s PodDisruptionBudget parameter                               | `1`                                              |\\n  | `statefulset.args`                                        | Extra command-line arguments                                    | `[]`                                             |\\n  | `statefulset.env`                                         | Extra env vars                                                  | `[]`                                             |\\n  | `statefulset.secretMounts`                                | Additional Secrets to mount at cluster members                  | `[]`                                             |\\n  | `statefulset.labels`                                      | Additional labels of StatefulSet and its Pods                   | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n  | `statefulset.annotations`                                 | Additional annotations of StatefulSet Pods                      | `{}`                                             |\\n  | `statefulset.nodeAffinity`                                | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\\n  | `statefulset.podAffinity`                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\\n  | `statefulset.podAntiAffinity`                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\\n  | `statefulset.podAntiAffinity.topologyKey`                 | The topologyKey for auto [anti-affinity rules][1]               | `kubernetes.io/hostname`                         |\\n  | `statefulset.podAntiAffinity.type`                        | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\\n  | `statefulset.podAntiAffinity.weight`                      | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\\n  | `statefulset.nodeSelector`                                | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\\n  | `statefulset.priorityClassName`                           | [PriorityClassName][4] for StatefulSet Pods                     | `\\\"\\\"`                                             |\\n  | `statefulset.tolerations`                                 | Node taints to tolerate by StatefulSet Pods                     | `[]`                                             |\\n  | `statefulset.topologySpreadConstraints`                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |\\n  | `statefulset.topologySpreadConstraints.maxSkew`           | Degre\x00\x00\x00.e to which Pods may be unevenly distributed                | `1`                                              |\\n  | `statefulset.topologySpreadConstraints.topologyKey`       | The key of node labels                                          | `topology.kubernetes.io/zone`                    |\\n  | `statefulset.topologySpreadConstraints.whenUnsatisfiable` | `ScheduleAnyway`/`DoNotSchedule` for unsatisfiable constraints  | `ScheduleAnyway`                                 |\\n  | `statefulset.resources`                                   | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\\n  | `service.ports.grpc.external.port`                        | CockroachDB primary serving port in Services                    | `26257`                                          |\\n  | `service.ports.grpc.external.name`                        | CockroachDB primary serving port name in Services               | `grpc`                                           |\\n  | `service.ports.grpc.internal.port`                        | CockroachDB inter-communication port in Services                | `26257`                                          |\\n  | `service.ports.grpc.internal.name`                        | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\\n  | `service.ports.http.port`                                 | CockroachDB HTTP port in Services                               | `8080`                                           |\\n  | `service.ports.http.name`                                 | CockroachDB HTTP port name in Services                          | `http`                                           |\\n  | `service.public.type`                                     | Public Service type                                             | `ClusterIP`                                      |\\n  | `service.public.labels`                                   | Additional labels of public Service                             | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n  | `service.public.annotations`                              | Additional annotations of public Service                        | `{}`                                             |\\n  | `service.discovery.labels`                                | Additional labels of discovery Service                          | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n  | `service.discovery.annotations`                           | Additional annotations of discovery Service                     | `{}`                                             |\\n  | `ingress.enabled`                                         | Enable ingress resource for CockroachDB                         | `false`                                          |\\n  | `ingress.labels`                                          | Additional labels of Ingress                                    | `{}`                                             |\\n  | `ingress.annotations`                                     | Additional annotations of Ingress                               | `{}`                                             |\\n  | `ingress.paths`                                           | Paths for the default host                                      | `[/]`                                            |\\n  | `ingress.hosts`                                           | CockroachDB Ingress hostnames                                   | `[]`                                             |\\n  | `ingress.tls[0].hosts`                                    | CockroachDB Ingress tls hostnames                               | `nil`                                            |\\n  | `ingress.tls[0].secretName`                               | CockroachDB Ingress tls secret name                             | `nil`                                            |\\n  | `serviceMonitor.enabled`                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/bl\x00\x00\x00/ob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | `false`                                             |\\n  | `serviceMonitor.labels`                                   | Additional labels of ServiceMonitor                             | `{}`                                             |\\n  | `serviceMonitor.annotations`                              | Additional annotations of ServiceMonitor                        | `{}`                                             |\\n  | `serviceMonitor.interval`                                 | ServiceMonitor scrape metrics interval                          | `10s`                                            |\\n  | `serviceMonitor.scrapeTimeout`                            | ServiceMonitor scrape timeout                                   | `nil`                                            |\\n  | `storage.hostPath`                                        | Absolute path on host to store data                             | `\\\"\\\"`                                             |\\n  | `storage.persistentVolume.enabled`                        | Whether to use PersistentVolume to store data                   | `yes`                                            |\\n  | `storage.persistentVolume.size`                           | PersistentVolume size                                           | `100Gi`                                          |\\n  | `storage.persistentVolume.storageClass`                   | PersistentVolume class                                          | `\\\"\\\"`                                             |\\n  | `storage.persistentVolume.labels`                         | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\\n  | `storage.persistentVolume.annotations`                    | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\\n  | `init.labels`                                             | Additional labels of init Job and its Pod                       | `{\\\"app.kubernetes.io/component\\\": \\\"init\\\"}`        |\\n  | `init.annotations`                                        | Additional labels of the Pod of init Job                        | `{}`                                             |\\n  | `init.affinity`                                           | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\\n  | `init.nodeSelector`                                       | Node labels for init Job Pod assignment                         | `{}`                                             |\\n  | `init.tolerations`                                        | Node taints to tolerate by init Job Pod                         | `[]`                                             |\\n  | `init.resources`                                          | Resource requests and limits for the Pod of init Job            | `{}`                                             |\\n  | `tls.enabled`                                             | Whether to run securely using TLS certificates                  | `no`                                             |\\n  | `tls.serviceAccount.create`                               | Whether to create a new RBAC service account                    | `yes`                                            |\\n  | `tls.serviceAccount.name`                                 | Name of RBAC service account to use                             | `\\\"\\\"`                                             |\\n  | `tls.certs.provided`                                      | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\\n  | `tls.certs.clientRootSecret`                              | If certs are provided, secret name for client root cert  \x00\x00\x000       | `cockroachdb-root`                               |\\n  | `tls.certs.nodeSecret`                                    | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\\n  | `tls.certs.tlsSecret`                                     | Own certs are stored in TLS secret                              | `no`                                             |\\n  | `tls.init.image.repository`                               | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert`         |\\n  | `tls.init.image.tag`                                      | Image tag to use for requesting TLS certificates                | `0.4`                                            |\\n  | `tls.init.image.pullPolicy`                               | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\\n  | `tls.init.image.credentials`                              | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n  | `networkPolicy.enabled`                                   | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\\n  | `networkPolicy.ingress.grpc`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n  | `networkPolicy.ingress.http`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n## Upgrading the cluster\\nAssuming the name of the `CockroachDB` instance is `example`, follow the steps below to update to a newer version (example used os v19.2.5-\\u003ev19.2.7) of CockroachDB:\\nLaunch a temporary interactive pod and start the built-in SQL client:\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=example-cockroachdb-public\\n```\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\\n```sql\\n\\u003e SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\\n```\\nExit the shell and delete the temporary pod:\\n```sql\\n\\u003e \\\\q\\n```\\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\\n```shell\\nkubectl delete job example-cockroachdb-init\\n```\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"image\\\":{\\\"tag\\\":\\\"v19.2.7\\\"}}}' --type merge\\n```\\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\\n```shell\\nkubectl get pods\\n```\\n```\\nNAME                                READY     STATUS              RESTARTS   AGE\\nexample-cockroachdb-0            1/1       Running             0          2m\\nexample-cockroachdb-1            1/1       Running             0          3m\\nexample-cockroachdb-2            1/1       Running             0          3m\\nexample-cockroachdb-3            0/1       ContainerCreating   0          25s\\nexample-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\\n```\\n```shell\\nkubectl get pods \\\\\\n-o jsonpath='{range .items[*]}{.m\x00\x00\x001etadata.name}{\\\"\\\\t\\\"}{.spec.containers[0].image}{\\\"\\\\n\\\"}'\\n```\\n```\\nexample-cockroachdb-0    cockroachdb/cockroach:v19.2.7\\nexample-cockroachdb-1    cockroachdb/cockroach:v19.2.7\\nexample-cockroachdb-2    cockroachdb/cockroach:v19.2.7\\n```\\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=example-cockroachdb-public\\n```\\n```sql\\n\\u003e RESET CLUSTER SETTING cluster.preserve_downgrade_option;\\n\\u003e \\\\q\\n```\\n\",\"displayName\":\"CockroachDB\",\"icon\":[{\"base64data\":\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=\",\"mediatype\":\"image/svg+xml\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\",\"clusterroles\",\"rolebindings\",\"clusterrolebindings\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}],\"serviceAccountName\":\"default\"}],\"deployments\":[{\"name\":\"cockroachdb-controller-manager\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\",\"--leader-election-id=cockroachdb\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"cockroachdb\"}],\"image\":\"quay.io/helmoperators/cockroachdb:v5.0.3\",\"name\":\"manager\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"60Mi\"}}}],\"terminationGracePeriodSeconds\":10}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\x00\x00\x002\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\",\"configmaps\",\"serviceaccounts\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"charts.operatorhub.io\"],\"resources\":[\"cockroachdbs\",\"cockroachdbs/status\",\"cockroachdbs/finalizers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"default\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"cockroach\",\"cockroachdb\"],\"links\":[{\"name\":\"Helm Chart Source\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb\"},{\"name\":\"Configuration Options\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration\"},{\"name\":\"CockroachDB Source\",\"url\":\"https://github.com/cockroachdb/cockroach\"}],\"maintainers\":[{\"email\":\"dmesser@redhat.com\",\"name\":\"Daniel Messer\"}],\"maturity\":\"stable\",\"minKubeVersion\":\"1.8.0\",\"provider\":{\"name\":\"Helm Community\",\"url\":\"https://artifacthub.io/packages/helm/cockroachdb/cockroachdb\"},\"version\":\"5.0.3\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"creationTimestamp\":null,\"name\":\"cockroachdbs.charts.operatorhub.io\"},\"spec\":{\"group\":\"charts.operatorhub.io\",\"names\":{\"kind\":\"Cockroachdb\",\"listKind\":\"CockroachdbList\",\"plural\":\"cockroachdbs\",\"singular\":\"cockroachdb\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Cockroachdb is the Schema for the cockroachdbs API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"Spec defines the desired state of Cockroachdb\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"Status defines the observed state of Cockroachdb\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":null,\"storedVersions\":null}}\n{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"control-plane\":\"controller-manager\"},\"name\":\"cockroachdb-controller-manager-metrics-service\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":8443,\"targetPort\":\"https\"}],\"selector\":{\"control-plane\":\"controller-manager\"}},\"status\":{\"loadBalancer\":{}}}\n{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"creationTimestamp\":null,\"name\":\"cockroachdb-metrics-reader\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"charts.operatorhub.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"Cockroachdb\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"cockroachdb-sample\\\"\\n    },\\n  \x00\x00\x003  \\\"spec\\\": {\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"conf\\\": {\\n        \\\"attrs\\\": [],\\n        \\\"cache\\\": \\\"25%\\\",\\n        \\\"cluster-name\\\": \\\"\\\",\\n        \\\"disable-cluster-name-verification\\\": false,\\n        \\\"http-port\\\": 8080,\\n        \\\"join\\\": [],\\n        \\\"locality\\\": \\\"\\\",\\n        \\\"logtostderr\\\": \\\"INFO\\\",\\n        \\\"max-sql-memory\\\": \\\"25%\\\",\\n        \\\"port\\\": 26257,\\n        \\\"single-node\\\": false,\\n        \\\"sql-audit-dir\\\": \\\"\\\"\\n      },\\n      \\\"image\\\": {\\n        \\\"credentials\\\": {},\\n        \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n        \\\"repository\\\": \\\"cockroachdb/cockroach\\\",\\n        \\\"tag\\\": \\\"v20.2.3\\\"\\n      },\\n      \\\"ingress\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"hosts\\\": [],\\n        \\\"labels\\\": {},\\n        \\\"paths\\\": [\\n          \\\"/\\\"\\n        ],\\n        \\\"tls\\\": []\\n      },\\n      \\\"init\\\": {\\n        \\\"affinity\\\": {},\\n        \\\"annotations\\\": {},\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"init\\\"\\n        },\\n        \\\"nodeSelector\\\": {},\\n        \\\"resources\\\": {},\\n        \\\"tolerations\\\": []\\n      },\\n      \\\"labels\\\": {},\\n      \\\"networkPolicy\\\": {\\n        \\\"enabled\\\": false,\\n        \\\"ingress\\\": {\\n          \\\"grpc\\\": [],\\n          \\\"http\\\": []\\n        }\\n      },\\n      \\\"service\\\": {\\n        \\\"discovery\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          }\\n        },\\n        \\\"ports\\\": {\\n          \\\"grpc\\\": {\\n            \\\"external\\\": {\\n              \\\"name\\\": \\\"grpc\\\",\\n              \\\"port\\\": 26257\\n            },\\n            \\\"internal\\\": {\\n              \\\"name\\\": \\\"grpc-internal\\\",\\n              \\\"port\\\": 26257\\n            }\\n          },\\n          \\\"http\\\": {\\n            \\\"name\\\": \\\"http\\\",\\n            \\\"port\\\": 8080\\n          }\\n        },\\n        \\\"public\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          },\\n          \\\"type\\\": \\\"ClusterIP\\\"\\n        }\\n      },\\n      \\\"serviceMonitor\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"interval\\\": \\\"10s\\\",\\n        \\\"labels\\\": {}\\n      },\\n      \\\"statefulset\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"args\\\": [],\\n        \\\"budget\\\": {\\n          \\\"maxUnavailable\\\": 1\\n        },\\n        \\\"env\\\": [],\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n        },\\n        \\\"nodeAffinity\\\": {},\\n        \\\"nodeSelector\\\": {},\\n        \\\"podAffinity\\\": {},\\n        \\\"podAntiAffinity\\\": {\\n          \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\",\\n          \\\"type\\\": \\\"soft\\\",\\n          \\\"weight\\\": 100\\n        },\\n        \\\"podManagementPolicy\\\": \\\"Parallel\\\",\\n        \\\"priorityClassName\\\": \\\"\\\",\\n        \\\"replicas\\\": 3,\\n        \\\"resources\\\": {},\\n        \\\"secretMounts\\\": [],\\n        \\\"tolerations\\\": [],\\n        \\\"topologySpreadConstraints\\\": {\\n          \\\"maxSkew\\\": 1,\\n          \\\"topologyKey\\\": \\\"topology.kubernetes.io/zone\\\",\\n          \\\"whenUnsatisfiable\\\": \\\"ScheduleAnyway\\\"\\n        },\\n        \\\"updateStrategy\\\": {\\n          \\\"type\\\": \\\"RollingUpdate\\\"\\n        }\\n      },\\n      \\\"storage\\\": {\\n        \\\"hostPath\\\": \\\"\\\",\\n        \\\"persistentVolume\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"enabled\\\": true,\\n          \\\"labels\\\": {},\\n          \\\"size\\\": \\\"100Gi\\\",\\n          \\\"storageClass\\\": \\\"\\\"\\n        }\\n      },\\n      \\\"tls\\\": {\\n        \\\"certs\\\": {\\n          \\\"clientRootSecret\\\": \\\"cockroachdb-root\\\",\\n          \\\"nodeSecret\\\": \\\"cockroachdb-node\\\",\\n          \\\"provided\\\": false,\\n          \\\"tlsSecret\\\": false\\n        },\\n        \\\"enabled\\\": false,\\n        \\\"init\\\": {\\n          \\\"image\\\": {\\n            \\\"credentials\\\": {},\\n            \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n            \\\"repository\\\": \\\"cockroachdb/cockroach-k8s-request-cert\\\",\\n            \\\"tag\\\": \\\"0.4\\\"\\n          }\\n        },\\n        \\\"serviceAccount\\\": {\\n          \\\"create\\\": true,\\n \x00\x00\x004         \\\"name\\\": \\\"\\\"\\n        }\\n      }\\n    }\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Database\",\"certified\":\"false\",\"containerImage\":\"quay.io/helmoperators/cockroachdb:v5.0.3\",\"createdAt\":\"2021-01-23T10-00-00Z\",\"description\":\"CockroachDB Operator based on the CockroachDB helm chart\",\"operators.operatorframework.io/builder\":\"operator-sdk-v1.3.0\",\"operators.operatorframework.io/project_layout\":\"helm.sdk.operatorframework.io/v1\",\"repository\":\"https://github.com/dmesser/cockroachdb-operator\",\"support\":\"dmesser\"},\"name\":\"cockroachdb.v5.0.3\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Represents a CockroachDB cluster\",\"displayName\":\"CockroachDB\",\"kind\":\"Cockroachdb\",\"name\":\"cockroachdbs.charts.operatorhub.io\",\"resources\":[{\"kind\":\"Deployment\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Service\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ReplicaSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Pod\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"Secret\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"PersistentVolumeClaim\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"StatefulSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Job\",\"name\":\"\",\"version\":\"batch/v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"CockroachDB is a scalable, survivable, strongly-consistent SQL database.\\n## About this Operator\\nThis Operator is based on a Helm chart for CockroachDB. It supports reconfiguration for some parameters, but notably does not handle scale down of the replica count in a seamless manner. Scale up works great.\\n\\n## Core capabilities\\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\\n## Using the cluster\\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\\u003cStatefulSet-name\\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\\n```\\nkubectl get service -l chart=cockroachdb-3.0.7\\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\n```\\nThen you can use the CockroachDB command line client to connect to the database cluster:\\n```\\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\\n```\\n## Before you start\\nThis Operator requires a cluster with PV support in order to run correctly.\\n## Supported configuration parameters\\n  | Parameter                                                 | Description                                                     | Default                                          |\\n  | ---------                                                 | -----------                                                     | -------                                          |\\n  | `clusterDomain`                                           | Cluster's default DNS domain                                    | `cluster.local`                                  |\\n  | `conf.attrs`                                              | CockroachDB node attributes                                     | `[]`                                             |\\n  \x00\x00\x005| `conf.cache`                                              | Size of CockroachDB's in-memory cache                           | `25%`                                            |\\n  | `conf.cluster-name`                                       | Name of CockroachDB cluster                                     | `\\\"\\\"`                                             |\\n  | `conf.disable-cluster-name-verification`                  | Disable CockroachDB cluster name verification                   | `no`                                             |\\n  | `conf.join`                                               | List of already-existing CockroachDB instances                  | `[]`                                             |\\n  | `conf.max-disk-temp-storage`                              | Max storage capacity for temp data                              | `0`                                              |\\n  | `conf.max-offset`                                         | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\\n  | `conf.max-sql-memory`                                     | Max memory to use processing SQL querie                         | `25%`                                            |\\n  | `conf.locality`                                           | Locality attribute for this deployment                          | `\\\"\\\"`                                             |\\n  | `conf.single-node`                                        | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\\n  | `conf.sql-audit-dir`                                      | Directory for SQL audit log                                     | `\\\"\\\"`                                             |\\n  | `conf.port`                                               | CockroachDB primary serving port in Pods                        | `26257`                                          |\\n  | `conf.http-port`                                          | CockroachDB HTTP port in Pods                                   | `8080`                                           |\\n  | `image.repository`                                        | Container image name                                            | `cockroachdb/cockroach`                          |\\n  | `image.tag`                                               | Container image tag                                             | `v20.2.3`                                        |\\n  | `image.pullPolicy`                                        | Container pull policy                                           | `IfNotPresent`                                   |\\n  | `image.credentials`                                       | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n  | `statefulset.replicas`                                    | StatefulSet replicas number                                     | `3`                                              |\\n  | `statefulset.updateStrategy`                              | Update strategy for StatefulSet Pods                            | `{\\\"type\\\": \\\"RollingUpdate\\\"}`                      |\\n  | `statefulset.podManagementPolicy`                         | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\\n  | `statefulset.budget.maxUnavailable`                       | k8s PodDisruptionBudget parameter                               | `1`                                              |\\n  | `statefulset.args`                                        | Extra command-line arguments                                    | `[]`                                             |\\n  | `statefulset.env`                                         | Extra env vars                                                  | `[]`                                             |\\n  | `statefulset.secretMounts`                                | Additional Secre\x00\x00\x006ts to mount at cluster members                  | `[]`                                             |\\n  | `statefulset.labels`                                      | Additional labels of StatefulSet and its Pods                   | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n  | `statefulset.annotations`                                 | Additional annotations of StatefulSet Pods                      | `{}`                                             |\\n  | `statefulset.nodeAffinity`                                | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\\n  | `statefulset.podAffinity`                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\\n  | `statefulset.podAntiAffinity`                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\\n  | `statefulset.podAntiAffinity.topologyKey`                 | The topologyKey for auto [anti-affinity rules][1]               | `kubernetes.io/hostname`                         |\\n  | `statefulset.podAntiAffinity.type`                        | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\\n  | `statefulset.podAntiAffinity.weight`                      | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\\n  | `statefulset.nodeSelector`                                | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\\n  | `statefulset.priorityClassName`                           | [PriorityClassName][4] for StatefulSet Pods                     | `\\\"\\\"`                                             |\\n  | `statefulset.tolerations`                                 | Node taints to tolerate by StatefulSet Pods                     | `[]`                                             |\\n  | `statefulset.topologySpreadConstraints`                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |\\n  | `statefulset.topologySpreadConstraints.maxSkew`           | Degree to which Pods may be unevenly distributed                | `1`                                              |\\n  | `statefulset.topologySpreadConstraints.topologyKey`       | The key of node labels                                          | `topology.kubernetes.io/zone`                    |\\n  | `statefulset.topologySpreadConstraints.whenUnsatisfiable` | `ScheduleAnyway`/`DoNotSchedule` for unsatisfiable constraints  | `ScheduleAnyway`                                 |\\n  | `statefulset.resources`                                   | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\\n  | `service.ports.grpc.external.port`                        | CockroachDB primary serving port in Services                    | `26257`                                          |\\n  | `service.ports.grpc.external.name`                        | CockroachDB primary serving port name in Services               | `grpc`                                           |\\n  | `service.ports.grpc.internal.port`                        | CockroachDB inter-communication port in Services                | `26257`                                          |\\n  | `service.ports.grpc.internal.name`                        | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\\n  | `service.ports.http.port`                                 | CockroachDB HTTP port in Services                               | `8080`                                           |\\n  | `service.ports.http.name`                                 | CockroachDB HTTP port name in Services                          | `http`                          \x00\x00\x007                 |\\n  | `service.public.type`                                     | Public Service type                                             | `ClusterIP`                                      |\\n  | `service.public.labels`                                   | Additional labels of public Service                             | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n  | `service.public.annotations`                              | Additional annotations of public Service                        | `{}`                                             |\\n  | `service.discovery.labels`                                | Additional labels of discovery Service                          | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n  | `service.discovery.annotations`                           | Additional annotations of discovery Service                     | `{}`                                             |\\n  | `ingress.enabled`                                         | Enable ingress resource for CockroachDB                         | `false`                                          |\\n  | `ingress.labels`                                          | Additional labels of Ingress                                    | `{}`                                             |\\n  | `ingress.annotations`                                     | Additional annotations of Ingress                               | `{}`                                             |\\n  | `ingress.paths`                                           | Paths for the default host                                      | `[/]`                                            |\\n  | `ingress.hosts`                                           | CockroachDB Ingress hostnames                                   | `[]`                                             |\\n  | `ingress.tls[0].hosts`                                    | CockroachDB Ingress tls hostnames                               | `nil`                                            |\\n  | `ingress.tls[0].secretName`                               | CockroachDB Ingress tls secret name                             | `nil`                                            |\\n  | `serviceMonitor.enabled`                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | `false`                                             |\\n  | `serviceMonitor.labels`                                   | Additional labels of ServiceMonitor                             | `{}`                                             |\\n  | `serviceMonitor.annotations`                              | Additional annotations of ServiceMonitor                        | `{}`                                             |\\n  | `serviceMonitor.interval`                                 | ServiceMonitor scrape metrics interval                          | `10s`                                            |\\n  | `serviceMonitor.scrapeTimeout`                            | ServiceMonitor scrape timeout                                   | `nil`                                            |\\n  | `storage.hostPath`                                        | Absolute path on host to store data                             | `\\\"\\\"`                                             |\\n  | `storage.persistentVolume.enabled`                        | Whether to use PersistentVolume to store data                   | `yes`                                            |\\n  | `storage.persistentVolume.size`                           | PersistentVolume size                                           | `100Gi`                                          |\\n  | `storage.persistentVolume.storageClass`                   | PersistentVolume class                                          | `\\\"\\\x00\x00\x008\"`                                             |\\n  | `storage.persistentVolume.labels`                         | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\\n  | `storage.persistentVolume.annotations`                    | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\\n  | `init.labels`                                             | Additional labels of init Job and its Pod                       | `{\\\"app.kubernetes.io/component\\\": \\\"init\\\"}`        |\\n  | `init.annotations`                                        | Additional labels of the Pod of init Job                        | `{}`                                             |\\n  | `init.affinity`                                           | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\\n  | `init.nodeSelector`                                       | Node labels for init Job Pod assignment                         | `{}`                                             |\\n  | `init.tolerations`                                        | Node taints to tolerate by init Job Pod                         | `[]`                                             |\\n  | `init.resources`                                          | Resource requests and limits for the Pod of init Job            | `{}`                                             |\\n  | `tls.enabled`                                             | Whether to run securely using TLS certificates                  | `no`                                             |\\n  | `tls.serviceAccount.create`                               | Whether to create a new RBAC service account                    | `yes`                                            |\\n  | `tls.serviceAccount.name`                                 | Name of RBAC service account to use                             | `\\\"\\\"`                                             |\\n  | `tls.certs.provided`                                      | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\\n  | `tls.certs.clientRootSecret`                              | If certs are provided, secret name for client root cert         | `cockroachdb-root`                               |\\n  | `tls.certs.nodeSecret`                                    | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\\n  | `tls.certs.tlsSecret`                                     | Own certs are stored in TLS secret                              | `no`                                             |\\n  | `tls.init.image.repository`                               | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert`         |\\n  | `tls.init.image.tag`                                      | Image tag to use for requesting TLS certificates                | `0.4`                                            |\\n  | `tls.init.image.pullPolicy`                               | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\\n  | `tls.init.image.credentials`                              | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n  | `networkPolicy.enabled`                                   | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\\n  | `networkPolicy.ingress.grpc`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n  | `networkPolicy.ingress.http`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n## Upgrading the cluster\\nAssumi\x00\x00\x009ng the name of the `CockroachDB` instance is `example`, follow the steps below to update to a newer version (example used os v19.2.5-\\u003ev19.2.7) of CockroachDB:\\nLaunch a temporary interactive pod and start the built-in SQL client:\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=example-cockroachdb-public\\n```\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\\n```sql\\n\\u003e SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\\n```\\nExit the shell and delete the temporary pod:\\n```sql\\n\\u003e \\\\q\\n```\\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\\n```shell\\nkubectl delete job example-cockroachdb-init\\n```\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"image\\\":{\\\"tag\\\":\\\"v19.2.7\\\"}}}' --type merge\\n```\\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\\n```shell\\nkubectl get pods\\n```\\n```\\nNAME                                READY     STATUS              RESTARTS   AGE\\nexample-cockroachdb-0            1/1       Running             0          2m\\nexample-cockroachdb-1            1/1       Running             0          3m\\nexample-cockroachdb-2            1/1       Running             0          3m\\nexample-cockroachdb-3            0/1       ContainerCreating   0          25s\\nexample-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\\n```\\n```shell\\nkubectl get pods \\\\\\n-o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.containers[0].image}{\\\"\\\\n\\\"}'\\n```\\n```\\nexample-cockroachdb-0    cockroachdb/cockroach:v19.2.7\\nexample-cockroachdb-1    cockroachdb/cockroach:v19.2.7\\nexample-cockroachdb-2    cockroachdb/cockroach:v19.2.7\\n```\\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=example-cockroachdb-public\\n```\\n```sql\\n\\u003e RESET CLUSTER SETTING cluster.preserve_downgrade_option;\\n\\u003e \\\\q\\n```\\n\",\"displayName\":\"CockroachDB\",\"icon\":[{\"base64data\":\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLj\x00\x00\x00\x00E0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=\",\"mediatype\":\"image/svg+xml\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\",\"clusterroles\",\"rolebindings\",\"clusterrolebindings\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}],\"serviceAccountName\":\"default\"}],\"deployments\":[{\"name\":\"cockroachdb-controller-manager\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\",\"--leader-election-id=cockroachdb\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"cockroachdb\"}],\"image\":\"quay.io/helmoperators/cockroachdb:v5.0.3\",\"name\":\"manager\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"60Mi\"}}}],\"terminationGracePeriodSeconds\":10}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\",\"configmaps\",\"serviceaccounts\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"charts.operatorhub.io\"],\"resources\":[\"cockroachdbs\",\"cockroachdbs/status\",\"cockroachdbs/finalizers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"default\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"cockroach\",\"cockroachdb\"],\"links\":[{\"name\":\"Helm Chart Source\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb\"},{\"name\":\"Configuration Options\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration\"},{\"name\":\"CockroachDB Source\",\"url\":\"https://github.com/cockroachdb/cockroach\"}],\"maintainers\":[{\"email\":\"dmesser@redhat.com\",\"name\":\"Daniel Messer\"}],\"maturity\":\"stable\",\"minKubeVersion\":\"1.8.0\",\"provider\":{\"name\":\"Helm Community\",\"url\":\"https://artifacthub.io/packages/helm/cockroachdb/cockroachdb\"},\"version\":\"5.0.3\"}}\nquay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack5.0.3\r\x00\x00\x00\x01\b\xf9\x00\b\xf9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x8d/\x01\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.5{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.4.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\"\x00\x00\x00\x1d\r\x00\x00\x00\x01\x0f\xa8\x00\x0f\xa8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x81\x0e1\x84\x83\x18\x84\xa4>w\r\x17\r\r\rcockroachdb.v5.0.3{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"charts.operatorhub.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"Cockroachdb\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"cockroachdb-sample\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"conf\\\": {\\n        \\\"attrs\\\": [],\\n        \\\"cache\\\": \\\"25%\\\",\\n        \\\"cluster-name\\\": \\\"\\\",\\n        \\\"disable-cluster-name-verification\\\": false,\\n        \\\"http-port\\\": 8080,\\n        \\\"join\\\": [],\\n        \\\"locality\\\": \\\"\\\",\\n        \\\"logtostderr\\\": \\\"INFO\\\",\\n        \\\"max-sql-memory\\\": \\\"25%\\\",\\n        \\\"port\\\": 26257,\\n        \\\"single-node\\\": false,\\n        \\\"sql-audit-dir\\\": \\\"\\\"\\n      },\\n      \\\"image\\\": {\\n        \\\"credentials\\\": {},\\n        \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n        \\\"repository\\\": \\\"cockroachdb/cockroach\\\",\\n        \\\"tag\\\": \\\"v20.2.3\\\"\\n      },\\n      \\\"ingress\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"hosts\\\": [],\\n        \\\"labels\\\": {},\\n        \\\"paths\\\": [\\n          \\\"/\\\"\\n        ],\\n        \\\"tls\\\": []\\n      },\\n      \\\"init\\\": {\\n        \\\"affinity\\\": {},\\n        \\\"annotations\\\": {},\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"init\\\"\\n        },\\n        \\\"nodeSelector\\\": {},\\n        \\\"resources\\\": {},\\n        \\\"tolerations\\\": []\\n      },\\n      \\\"labels\\\": {},\\n      \\\"networkPolicy\\\": {\\n        \\\"enabled\\\": false,\\n        \\\"ingress\\\": {\\n          \\\"grpc\\\": [],\\n          \\\"http\\\": []\\n        }\\n      },\\n      \\\"service\\\": {\\n        \\\"discovery\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          }\\n        },\\n        \\\"ports\\\": {\\n          \\\"grpc\\\": {\\n            \\\"external\\\": {\\n              \\\"name\\\": \\\"grpc\\\",\\n              \\\"port\\\": 26257\\n            },\\n            \\\"internal\\\": {\\n              \\\"name\\\": \\\"grpc-internal\\\",\\n              \\\"port\\\": 26257\\n            }\\n          },\\n          \\\"http\\\": {\\n            \\\"name\\\": \\\"http\\\",\\n            \\\"port\\\": 8080\\n          }\\n        },\\n        \\\"public\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          },\\n          \\\"type\\\": \\\"ClusterIP\\\"\\n        }\\n      },\\n      \\\"serviceMonitor\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"interval\\\": \\\"10s\\\",\\n        \\\"labels\\\": {}\\n      },\\n      \\\"stV\x02\n1\x00\x00w\r\x17\r\r\rcockroachdb.v5.0.3quay.io/olmqe/cockroachdb-operator:5.0.3-1869-deppack5.0.3\x00\x00\x00= \\\"enabled\\\": false,\\n        \\\"interval\\\": \\\"10s\\\",\\n        \\\"labels\\\": {}\\n      },\\n      \\\"statefulset\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"args\\\": [],\\n        \\\"budget\\\": {\\n          \\\"maxUnavailable\\\": 1\\n        },\\n        \\\"env\\\": [],\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n        },\\n        \\\"nodeAffinity\\\": {},\\n        \\\"nodeSelector\\\": {},\\n        \\\"podAffinity\\\": {},\\n        \\\"podAntiAffinity\\\": {\\n          \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\",\\n          \\\"type\\\": \\\"soft\\\",\\n          \\\"weight\\\": 100\\n        },\\n        \\\"podManagementPolicy\\\": \\\"Parallel\\\",\\n        \\\"priorityClassName\\\": \\\"\\\",\\n        \\\"replicas\\\": 3,\\n        \\\"resources\\\": {},\\n        \\\"secretMounts\\\": [],\\n        \\\"tolerations\\\": [],\\n        \\\"topologySpreadConstraints\\\": {\\n          \\\"maxSkew\\\": 1,\\n          \\\"topologyKey\\\": \\\"topology.kubernetes.io/zone\\\",\\n          \\\"whenUnsatisfiable\\\": \\\"ScheduleAnyway\\\"\\n        },\\n        \\\"updateStrategy\\\": {\\n          \\\"type\\\": \\\"RollingUpdate\\\"\\n        }\\n      },\\n      \\\"storage\\\": {\\n        \\\"hostPath\\\": \\\"\\\",\\n        \\\"persistentVolume\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"enabled\\\": true,\\n          \\\"labels\\\": {},\\n          \\\"size\\\": \\\"100Gi\\\",\\n          \\\"storageClass\\\": \\\"\\\"\\n        }\\n      },\\n      \\\"tls\\\": {\\n        \\\"certs\\\": {\\n          \\\"clientRootSecret\\\": \\\"cockroachdb-root\\\",\\n          \\\"nodeSecret\\\": \\\"cockroachdb-node\\\",\\n          \\\"provided\\\": false,\\n          \\\"tlsSecret\\\": false\\n        },\\n        \\\"enabled\\\": false,\\n        \\\"init\\\": {\\n          \\\"image\\\": {\\n            \\\"credentials\\\": {},\\n            \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n            \\\"repository\\\": \\\"cockroachdb/cockroach-k8s-request-cert\\\",\\n            \\\"tag\\\": \\\"0.4\\\"\\n          }\\n        },\\n        \\\"serviceAccount\\\": {\\n          \\\"create\\\": true,\\n          \\\"name\\\": \\\"\\\"\\n        }\\n      }\\n    }\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Database\",\"certified\":\"false\",\"containerImage\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"createdAt\":\"2021-01-23T10-00-00Z\",\"description\":\"CockroachDB Operator based on the CockroachDB helm chart\",\"operators.operatorframework.io/builder\":\"operator-sdk-v1.3.0\",\"operators.operatorframework.io/project_layout\":\"helm.sdk.operatorframework.io/v1\",\"repository\":\"https://github.com/dmesser/cockroachdb-operator\",\"support\":\"dmesser\"},\"name\":\"cockroachdb.v5.0.4\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Represents a CockroachDB cluster\",\"displayName\":\"CockroachDB\",\"kind\":\"Cockroachdb\",\"name\":\"cockroachdbs.charts.operatorhub.io\",\"resources\":[{\"kind\":\"Deployment\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Service\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ReplicaSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Pod\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"Secret\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"PersistentVolumeClaim\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"StatefulSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Job\",\"name\":\"\",\"version\":\"batch/v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"CockroachDB is a scalable, survivable, strongly-consistent SQL database.\\n## About this Operator\\nThis Operator is based on a Helm chart for CockroachDB. It supports the same parameters like the official [CockroachDB Helm Chart](https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb).\\n\\n## Core capabilities\\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.co\x00\x00\x00>m/helm/charts/blob/master/stable/cockroachdb/values.yaml).\\n## Using the cluster\\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\\u003cStatefulSet-name\\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\\n```\\nkubectl get service -l chart=cockroachdb-5.0.4\\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\n```\\nThen you can use the CockroachDB command line client to connect to the database cluster:\\n```\\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\\n```\\n## Before you start\\nThis Operator requires a cluster with PV support in order to run correctly.\\n\\nNote that for a production cluster, you will likely want to override the following parameters in [`values.yaml`](values.yaml) with your own values.\\n\\n- `statefulset.resources.requests.memory` and `statefulset.resources.limits.memory` allocate memory resources to CockroachDB pods in your cluster.\\n- `conf.cache` and `conf.max-sql-memory` are memory limits that we recommend setting to 1/4 of the above resource allocation. When running CockroachDB, you must set these limits explicitly to avoid running out of memory.\\n- `storage.persistentVolume.size` defaults to `100Gi` of disk space per pod, which you may increase or decrease for your use case.\\n- `storage.persistentVolume.storageClass` uses the default storage class for your environment. We strongly recommend that you specify a storage class which uses an SSD.\\n- `tls.enabled` must be set to `yes`/`true` to deploy in secure mode.\\n\\nFor more information on overriding the `values.yaml` parameters, please see:\\n\\u003e \\u003chttps://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-kubernetes.html#step-2-start-cockroachdb\\u003e\\n\\nIf you are running in secure mode (with configuration parameter `tls.enabled` set to `yes`/`true`) and `tls.certs.provided` set to `no`/`false`), then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nWhen `tls.certs.provided` is set to `yes`/`true`, this chart will use certificates created outside of Kubernetes. You may want to use this if you want to use a different certificate authority from the one being used by Kubernetes or if your Kubernetes cluster doesn't fully support certificate-signing requests. To use this, first set up your certificates and load them into your Kubernetes cluster as Secrets using the commands below:\\n\\n```\\nmkdir certs\\nmkdir my-safe-directory\\ncockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key\\ncockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key\\nkubectl create secret generic cockroachdb-root --from-file=certs\\ncockroach cert create-node --certs-dir=certs --ca-key=my-safe-directory/ca.key localhost 127.0.0.1 eerie-horse-cockroachdb-public eerie-horse-cockroachdb-public.default eerie-horse-cockroachdb-public.default.svc.cluster.local *.eerie-horse-cockroachdb *.eerie-horse-cockroachdb.default *.eerie-horse-cockroachdb.default.svc.cluster.local\\nkubectl create secret generic cockroachdb-node --from-file=certs\\n```\\n\\nSet `tls.certs.tlsSecret` to `yes/true` if you make use of [cert-manager][3] in your cluster.\\\x00\x00\x00?n\\n[cert-manager][3] stores generated certificates in dedicated TLS secrets. Thus, they are always named:\\n\\n* `ca.crt`\\n* `tls.crt`\\n* `tls.key`\\n\\nOn the other hand, CockroachDB also demands dedicated certificate filenames:\\n\\n* `ca.crt`\\n* `node.crt`\\n* `node.key`\\n* `client.root.crt`\\n* `client.root.key`\\n\\nBy activating `tls.certs.tlsSecret` we benefit from projected secrets and convert the TLS secret filenames to their according CockroachDB filenames.\\n\\nIf you are running in secure mode, then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nConfirm that all pods are `Running` successfully and init has been completed:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     STATUS      RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running     0          1m\\nmy-release-cockroachdb-1            1/1       Running     0          1m\\nmy-release-cockroachdb-2            1/1       Running     0          1m\\nmy-release-cockroachdb-init-k6jcr   0/1       Completed   0          1m\\n```\\n\\nConfirm that persistent volumes are created and claimed for each pod:\\n\\n```shell\\nkubectl get pv\\n```\\n\\n```\\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                      STORAGECLASS   REASON    AGE\\npvc-64878ebf-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-0   standard                 51s\\npvc-64945b4f-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-1   standard                 51s\\npvc-649d920d-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-2   standard                 51s\\n```\\n\\n## Upgrading the cluster\\n\\n### Chart version 3.0.0 and after\\n\\nLaunch a temporary interactive pod and start the built-in SQL client:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\\n\\n```sql\\n\\u003e SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\\n```\\n\\nExit the shell and delete the temporary pod:\\n\\n```sql\\n\\u003e \\\\q\\n```\\n\\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\\n\\n```shell\\nkubectl delete job my-release-cockroachdb-init\\n```\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"image\\\":{\\\"tag\\\":\\\"\\u003cnew version tag here\\u003e\\\"}}}' --type merge\\n```\\n\\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     ST\x00\x00\x00@ATUS              RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running             0          2m\\nmy-release-cockroachdb-1            1/1       Running             0          3m\\nmy-release-cockroachdb-2            1/1       Running             0          3m\\nmy-release-cockroachdb-3            0/1       ContainerCreating   0          25s\\nmy-release-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\\n```\\n\\n```shell\\nkubectl get pods \\\\\\n-o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.containers[0].image}{\\\"\\\\n\\\"}'\\n```\\n\\n```\\nmy-release-cockroachdb-0    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-1    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-2    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-3    cockroachdb/cockroach:v20.2.4\\n```\\n\\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n```sql\\n\\u003e RESET CLUSTER SETTING cluster.preserve_downgrade_option;\\n\\u003e \\\\q\\n```\\n\\n## Configuration\\n\\nThe following table lists the configurable parameters of the CockroachDB chart and their default values.\\nFor details see the [`values.yaml`](values.yaml) file.\\n\\n| Parameter                                                 | Description                                                     | Default                                          |\\n| ---------                                                 | -----------                                                     | -------                                          |\\n| `clusterDomain`                                           | Cluster's default DNS domain                                    | `cluster.local`                                  |\\n| `conf.attrs`                                              | CockroachDB node attributes                                     | `[]`                                             |\\n| `conf.cache`                                              | Size of CockroachDB's in-memory cache                           | `25%`                                            |\\n| `conf.cluster-name`                                       | Name of CockroachDB cluster                                     | `\\\"\\\"`                                             |\\n| `conf.disable-cluster-name-verification`                  | Disable CockroachDB cluster name verification                   | `no`                                             |\\n| `conf.join`                                               | List of already-existing CockroachDB instances                  | `[]`                                             |\\n| `conf.max-disk-temp-storage`                              | Max storage capacity for temp data                              | `0`                                              |\\n| `conf.max-offset`                                         | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\\n| `conf.max-sql-memory`                                     | Max memory to use processing SQL querie                         | `25%`                                            |\\n| `conf.locality`                                           | Locality attribute for this deployment                          | `\\\"\\\"`                                             |\\n| `conf.single-node`                                        | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\\n| `conf.sql-audit-dir`                                      | Directory for SQL audit log                                     | `\\\"\\\"`                                             |\\n| `conf.port`                                               | CockroachDB primary serving port in Pods                        | `26257`   \x00\x00\x00A                                       |\\n| `conf.http-port`                                          | CockroachDB HTTP port in Pods                                   | `8080`                                           |\\n| `image.repository`                                        | Container image name                                            | `cockroachdb/cockroach`                          |\\n| `image.tag`                                               | Container image tag                                             | `v20.2.4`                                        |\\n| `image.pullPolicy`                                        | Container pull policy                                           | `IfNotPresent`                                   |\\n| `image.credentials`                                       | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `statefulset.replicas`                                    | StatefulSet replicas number                                     | `3`                                              |\\n| `statefulset.updateStrategy`                              | Update strategy for StatefulSet Pods                            | `{\\\"type\\\": \\\"RollingUpdate\\\"}`                      |\\n| `statefulset.podManagementPolicy`                         | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\\n| `statefulset.budget.maxUnavailable`                       | k8s PodDisruptionBudget parameter                               | `1`                                              |\\n| `statefulset.args`                                        | Extra command-line arguments                                    | `[]`                                             |\\n| `statefulset.env`                                         | Extra env vars                                                  | `[]`                                             |\\n| `statefulset.secretMounts`                                | Additional Secrets to mount at cluster members                  | `[]`                                             |\\n| `statefulset.labels`                                      | Additional labels of StatefulSet and its Pods                   | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `statefulset.annotations`                                 | Additional annotations of StatefulSet Pods                      | `{}`                                             |\\n| `statefulset.nodeAffinity`                                | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\\n| `statefulset.podAffinity`                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\\n| `statefulset.podAntiAffinity`                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\\n| `statefulset.podAntiAffinity.topologyKey`                 | The topologyKey for auto [anti-affinity rules][1]               | `kubernetes.io/hostname`                         |\\n| `statefulset.podAntiAffinity.type`                        | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\\n| `statefulset.podAntiAffinity.weight`                      | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\\n| `statefulset.nodeSelector`                                | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\\n| `statefulset.priorityClassName`                           | [PriorityClassName][4] for StatefulSet Pods                     | `\\\"\\\"`                                             |\\n| `statefulset.tolerations`                                 | Node taints to tol\x00\x00\x00Berate by StatefulSet Pods                     | `[]`                                             |\\n| `statefulset.topologySpreadConstraints`                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |\\n| `statefulset.topologySpreadConstraints.maxSkew`           | Degree to which Pods may be unevenly distributed                | `1`                                              |\\n| `statefulset.topologySpreadConstraints.topologyKey`       | The key of node labels                                          | `topology.kubernetes.io/zone`                    |\\n| `statefulset.topologySpreadConstraints.whenUnsatisfiable` | `ScheduleAnyway`/`DoNotSchedule` for unsatisfiable constraints  | `ScheduleAnyway`                                 |\\n| `statefulset.resources`                                   | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\\n| `service.ports.grpc.external.port`                        | CockroachDB primary serving port in Services                    | `26257`                                          |\\n| `service.ports.grpc.external.name`                        | CockroachDB primary serving port name in Services               | `grpc`                                           |\\n| `service.ports.grpc.internal.port`                        | CockroachDB inter-communication port in Services                | `26257`                                          |\\n| `service.ports.grpc.internal.name`                        | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\\n| `service.ports.http.port`                                 | CockroachDB HTTP port in Services                               | `8080`                                           |\\n| `service.ports.http.name`                                 | CockroachDB HTTP port name in Services                          | `http`                                           |\\n| `service.public.type`                                     | Public Service type                                             | `ClusterIP`                                      |\\n| `service.public.labels`                                   | Additional labels of public Service                             | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.public.annotations`                              | Additional annotations of public Service                        | `{}`                                             |\\n| `service.discovery.labels`                                | Additional labels of discovery Service                          | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.discovery.annotations`                           | Additional annotations of discovery Service                     | `{}`                                             |\\n| `ingress.enabled`                                         | Enable ingress resource for CockroachDB                         | `false`                                          |\\n| `ingress.labels`                                          | Additional labels of Ingress                                    | `{}`                                             |\\n| `ingress.annotations`                                     | Additional annotations of Ingress                               | `{}`                                             |\\n| `ingress.paths`                                           | Paths for the default host                                      | `[/]`                                            |\\n| `ingress.hosts`                                           | CockroachDB Ingress hostnames                                   | `[]`                                             |\\n| `ingress.tls[0].hosts`                                    | CockroachDB Ingress tls hostnames                               | `nil`                                            |\\n| `ingress.tls[0].secret\x00\x00\x00CName`                               | CockroachDB Ingress tls secret name                             | `nil`                                            |\\n| `serviceMonitor.enabled`                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | `false`                                             |\\n| `serviceMonitor.labels`                                   | Additional labels of ServiceMonitor                             | `{}`                                             |\\n| `serviceMonitor.annotations`                              | Additional annotations of ServiceMonitor                        | `{}`                                             |\\n| `serviceMonitor.interval`                                 | ServiceMonitor scrape metrics interval                          | `10s`                                            |\\n| `serviceMonitor.scrapeTimeout`                            | ServiceMonitor scrape timeout                                   | `nil`                                            |\\n| `storage.hostPath`                                        | Absolute path on host to store data                             | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.enabled`                        | Whether to use PersistentVolume to store data                   | `yes`                                            |\\n| `storage.persistentVolume.size`                           | PersistentVolume size                                           | `100Gi`                                          |\\n| `storage.persistentVolume.storageClass`                   | PersistentVolume class                                          | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.labels`                         | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\\n| `storage.persistentVolume.annotations`                    | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\\n| `init.labels`                                             | Additional labels of init Job and its Pod                       | `{\\\"app.kubernetes.io/component\\\": \\\"init\\\"}`        |\\n| `init.annotations`                                        | Additional labels of the Pod of init Job                        | `{}`                                             |\\n| `init.affinity`                                           | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\\n| `init.nodeSelector`                                       | Node labels for init Job Pod assignment                         | `{}`                                             |\\n| `init.tolerations`                                        | Node taints to tolerate by init Job Pod                         | `[]`                                             |\\n| `init.resources`                                          | Resource requests and limits for the Pod of init Job            | `{}`                                             |\\n| `tls.enabled`                                             | Whether to run securely using TLS certificates                  | `no`                                             |\\n| `tls.serviceAccount.create`                               | Whether to create a new RBAC service account                    | `yes`                                            |\\n| `tls.serviceAccount.name`                                 | Name of RBAC service account to use                             | `\\\"\\\"`                                             |\\n| `tls.certs.provided`                \x00\x00\x00D                      | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\\n| `tls.certs.clientRootSecret`                              | If certs are provided, secret name for client root cert         | `cockroachdb-root`                               |\\n| `tls.certs.nodeSecret`                                    | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\\n| `tls.certs.tlsSecret`                                     | Own certs are stored in TLS secret                              | `no`                                             |\\n| `tls.init.image.repository`                               | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert`         |\\n| `tls.init.image.tag`                                      | Image tag to use for requesting TLS certificates                | `0.4`                                            |\\n| `tls.init.image.pullPolicy`                               | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\\n| `tls.init.image.credentials`                              | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `networkPolicy.enabled`                                   | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\\n| `networkPolicy.ingress.grpc`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n| `networkPolicy.ingress.http`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n\\n\\nOverride the default parameters using the `CockroachDB` custom resource.\\n\\n## Deep dive\\n\\n### Connecting to the CockroachDB cluster\\n\\nOnce you've created the cluster, you can start talking to it by connecting to its `-public` Service. CockroachDB is PostgreSQL wire protocol compatible, so there's a [wide variety of supported clients](https://www.cockroachlabs.com/docs/install-client-drivers.html). As an example, we'll open up a SQL shell using CockroachDB's built-in shell and play around with it a bit, like this (likely needing to replace `my-release-cockroachdb-public` with the name of the `-public` Service that was created with your installed chart):\\n\\n```shell\\nkubectl run cockroach-client --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host my-release-cockroachdb-public\\n```\\n\\n```\\nWaiting for pod default/cockroach-client to be running, status is Pending,\\npod ready: false\\nIf you don't see a command prompt, try pressing enter.\\nroot@my-release-cockroachdb-public:26257\\u003e SHOW DATABASES;\\n+--------------------+\\n|      Database      |\\n+--------------------+\\n| information_schema |\\n| pg_catalog         |\\n| system             |\\n+--------------------+\\n(3 rows)\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE DATABASE bank;\\nCREATE DATABASE\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE TABLE bank.accounts (id INT\\nPRIMARY KEY, balance DECIMAL);\\nCREATE TABLE\\nroot@my-release-cockroachdb-public:26257\\u003e INSERT INTO bank.accounts VALUES\\n(1234, 10000.50);\\nINSERT 1\\nroot@my-release-cockroachdb-public:26257\\u003e SELECT * FROM bank.accounts;\\n+------+---------+\\n|  id  | balance |\\n+------+---------+\\n| 1234 | 10000.5 |\\n+------+---------+\\n(1 row)\\nroot@my-release-cockroachdb-public:26257\\u003e \\\\q\\nWaiting for pod default/cockroach-client to terminate, status is Running\\npod \\\"cockroach-client\\\" deleted\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud\x00\x00\x00E/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\n### Cluster health\\n\\nBecause our pod spec includes regular health checks of the CockroachDB processes, simply running `kubectl get pods` and looking at the `STATUS` column is sufficient to determine the health of each instance in the cluster.\\n\\nIf you want more detailed information about the cluster, the best place to look is the Admin UI.\\n\\n### Accessing the Admin UI\\n\\nIf you want to see information about how the cluster is doing, you can try pulling up the CockroachDB Admin UI by port-forwarding from your local machine to one of the pods (replacing `my-release-cockroachdb-0` with the name of one of your pods:\\n\\n```shell\\nkubectl port-forward my-release-cockroachdb-0 8080\\n```\\n\\nYou should then be able to access the Admin UI by visiting \\u003chttp://localhost:8080/\\u003e in your web browser.\\n\\n### Failover\\n\\nIf any CockroachDB member fails, it is restarted or recreated automatically by the Kubernetes infrastructure, and will re-join the cluster automatically when it comes back up. You can test this scenario by killing any of the CockroachDB pods:\\n\\n```shell\\nkubectl delete pod my-release-cockroachdb-1\\n```\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nAfter a while:\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-1  1/1       Running       0          20s\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nYou can check the state of re-joining from the new pod's logs:\\n\\n```shell\\nkubectl logs my-release-cockroachdb-1\\n```\\n\\n```\\n[...]\\nI161028 19:32:09.754026 1 server/node.go:586  [n1] node connected via gossip and\\nverified as part of cluster {\\\"35ecbc27-3f67-4e7d-9b8f-27c31aae17d6\\\"}\\n[...]\\ncockroachdb-0.my-release-cockroachdb.default.svc.cluster.local:26257\\nbuild:      beta-20161027-55-gd2d3c7f @ 2016/10/28 19:27:25 (go1.7.3)\\nadmin:      http://0.0.0.0:8080\\nsql:\\npostgresql://root@my-release-cockroachdb-1.my-release-cockroachdb.default.svc.cluster.local:26257?sslmode=disable\\nlogs:       cockroach-data/logs\\nstore[0]:   path=cockroach-data\\nstatus:     restarted pre-existing node\\nclusterID:  {35ecbc27-3f67-4e7d-9b8f-27c31aae17d6}\\nnodeID:     2\\n[...]\\n```\\n\\n### NetworkPolicy\\n\\nTo enable NetworkPolicy for CockroachDB, install [a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin), and set `networkPolicy.enabled` to `yes`/`true`.\\n\\nFor Kubernetes v1.5 \\u0026 v1.6, you must also turn on NetworkPolicy by setting the `DefaultDeny` Namespace annotation. Note: this will enforce policy for _all_ pods in the Namespace:\\n\\n```shell\\nkubectl annotate namespace default \\\"net.beta.kubernetes.io/network-policy={\\\\\\\"ingress\\\\\\\":{\\\\\\\"isolation\\\\\\\":\\\\\\\"DefaultDeny\\\\\\\"}}\\\"\\n```\\n\\nFor more precise policy, set `networkPolicy.ingress.grpc` and `networkPolicy.ingress.http` rules. This will only allow pods that match the provided rules to connect to CockroachDB.\\n\\n### Scaling\\n\\nScaling should be managed via the `helm upgrade` command. After resizing your cluster on your cloud environment (e.g., GKE or EKS), run the following command to add a pod. This assumes you scaled from 3 to 4 nodes:\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"statefulset\\\":{\\\"replicas\\\":\\\"4\\\"}}}' --type mer\x00\x00\x00Fge\\n```\\n\\nNote, that if you are running in secure mode (`tls.enabled` is `yes`/`true`) and increase the size of your cluster, you will also have to approve the CSR (certificate-signing request) of each new node (using `kubectl get csr` and `kubectl certificate approve`).\\n\\n[1]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\\n[2]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity\\n[3]: https://cert-manager.io/\\n[4]: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\\n[5]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\\n\",\"displayName\":\"CockroachDB Helm Operator\",\"icon\":[{\"base64data\":\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=\",\"mediatype\":\"image/svg+xml\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\",\"clusterroles\",\"rolebindings\",\"clusterrolebindings\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}],\"serviceAccountName\":\"default\"}],\"deployments\":[{\"name\":\"cockroachdb-controller-manager\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\",\"--leader-election-id=cockroachdb\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"cockroachdb\"}],\"image\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"name\":\"manager\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"60Mi\"}}}],\"terminationGracePeriodSeconds\":10}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiG\x00\x00\x00Groups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\",\"configmaps\",\"serviceaccounts\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"charts.operatorhub.io\"],\"resources\":[\"cockroachdbs\",\"cockroachdbs/status\",\"cockroachdbs/finalizers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"default\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"cockroach\",\"cockroachdb\"],\"links\":[{\"name\":\"Helm Chart Source\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb\"},{\"name\":\"Configuration Options\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration\"},{\"name\":\"CockroachDB Source\",\"url\":\"https://github.com/cockroachdb/cockroach\"}],\"maintainers\":[{\"email\":\"dmesser@redhat.com\",\"name\":\"Daniel Messer\"}],\"maturity\":\"stable\",\"minKubeVersion\":\"1.8.0\",\"provider\":{\"name\":\"Helm Community\",\"url\":\"https://artifacthub.io/packages/helm/cockroachdb/cockroachdb\"},\"replaces\":\"cockroachdb.v5.0.3\",\"version\":\"5.0.4\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"creationTimestamp\":null,\"name\":\"cockroachdbs.charts.operatorhub.io\"},\"spec\":{\"group\":\"charts.operatorhub.io\",\"names\":{\"kind\":\"Cockroachdb\",\"listKind\":\"CockroachdbList\",\"plural\":\"cockroachdbs\",\"singular\":\"cockroachdb\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Cockroachdb is the Schema for the cockroachdbs API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"Spec defines the desired state of Cockroachdb\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"Status defines the observed state of Cockroachdb\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":null,\"storedVersions\":null}}\n{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"control-plane\":\"controller-manager\"},\"name\":\"cockroachdb-controller-manager-metrics-service\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":8443,\"targetPort\":\"https\"}],\"selector\":{\"control-plane\":\"controller-manager\"}},\"status\":{\"loadBalancer\":{}}}\n{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"creationTimestamp\":null,\"name\":\"cockroachdb-metrics-reader\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"charts.operatorhub.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"Cock\x00\x00\x00Hroachdb\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"cockroachdb-sample\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"conf\\\": {\\n        \\\"attrs\\\": [],\\n        \\\"cache\\\": \\\"25%\\\",\\n        \\\"cluster-name\\\": \\\"\\\",\\n        \\\"disable-cluster-name-verification\\\": false,\\n        \\\"http-port\\\": 8080,\\n        \\\"join\\\": [],\\n        \\\"locality\\\": \\\"\\\",\\n        \\\"logtostderr\\\": \\\"INFO\\\",\\n        \\\"max-sql-memory\\\": \\\"25%\\\",\\n        \\\"port\\\": 26257,\\n        \\\"single-node\\\": false,\\n        \\\"sql-audit-dir\\\": \\\"\\\"\\n      },\\n      \\\"image\\\": {\\n        \\\"credentials\\\": {},\\n        \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n        \\\"repository\\\": \\\"cockroachdb/cockroach\\\",\\n        \\\"tag\\\": \\\"v20.2.4\\\"\\n      },\\n      \\\"ingress\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"hosts\\\": [],\\n        \\\"labels\\\": {},\\n        \\\"paths\\\": [\\n          \\\"/\\\"\\n        ],\\n        \\\"tls\\\": []\\n      },\\n      \\\"init\\\": {\\n        \\\"affinity\\\": {},\\n        \\\"annotations\\\": {},\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"init\\\"\\n        },\\n        \\\"nodeSelector\\\": {},\\n        \\\"resources\\\": {},\\n        \\\"tolerations\\\": []\\n      },\\n      \\\"labels\\\": {},\\n      \\\"networkPolicy\\\": {\\n        \\\"enabled\\\": false,\\n        \\\"ingress\\\": {\\n          \\\"grpc\\\": [],\\n          \\\"http\\\": []\\n        }\\n      },\\n      \\\"service\\\": {\\n        \\\"discovery\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          }\\n        },\\n        \\\"ports\\\": {\\n          \\\"grpc\\\": {\\n            \\\"external\\\": {\\n              \\\"name\\\": \\\"grpc\\\",\\n              \\\"port\\\": 26257\\n            },\\n            \\\"internal\\\": {\\n              \\\"name\\\": \\\"grpc-internal\\\",\\n              \\\"port\\\": 26257\\n            }\\n          },\\n          \\\"http\\\": {\\n            \\\"name\\\": \\\"http\\\",\\n            \\\"port\\\": 8080\\n          }\\n        },\\n        \\\"public\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          },\\n          \\\"type\\\": \\\"ClusterIP\\\"\\n        }\\n      },\\n      \\\"serviceMonitor\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"interval\\\": \\\"10s\\\",\\n        \\\"labels\\\": {}\\n      },\\n      \\\"statefulset\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"args\\\": [],\\n        \\\"budget\\\": {\\n          \\\"maxUnavailable\\\": 1\\n        },\\n        \\\"env\\\": [],\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n        },\\n        \\\"nodeAffinity\\\": {},\\n        \\\"nodeSelector\\\": {},\\n        \\\"podAffinity\\\": {},\\n        \\\"podAntiAffinity\\\": {\\n          \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\",\\n          \\\"type\\\": \\\"soft\\\",\\n          \\\"weight\\\": 100\\n        },\\n        \\\"podManagementPolicy\\\": \\\"Parallel\\\",\\n        \\\"priorityClassName\\\": \\\"\\\",\\n        \\\"replicas\\\": 3,\\n        \\\"resources\\\": {},\\n        \\\"secretMounts\\\": [],\\n        \\\"tolerations\\\": [],\\n        \\\"topologySpreadConstraints\\\": {\\n          \\\"maxSkew\\\": 1,\\n          \\\"topologyKey\\\": \\\"topology.kubernetes.io/zone\\\",\\n          \\\"whenUnsatisfiable\\\": \\\"ScheduleAnyway\\\"\\n        },\\n        \\\"updateStrategy\\\": {\\n          \\\"type\\\": \\\"RollingUpdate\\\"\\n        }\\n      },\\n      \\\"storage\\\": {\\n        \\\"hostPath\\\": \\\"\\\",\\n        \\\"persistentVolume\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"enabled\\\": true,\\n          \\\"labels\\\": {},\\n          \\\"size\\\": \\\"100Gi\\\",\\n          \\\"storageClass\\\": \\\"\\\"\\n        }\\n      },\\n      \\\"tls\\\": {\\n        \\\"certs\\\": {\\n          \\\"clientRootSecret\\\": \\\"cockroachdb-root\\\",\\n          \\\"nodeSecret\\\": \\\"cockroachdb-node\\\",\\n          \\\"provided\\\": false,\\n          \\\"tlsSecret\\\": false\\n        },\\n        \\\"enabled\\\": false,\\n        \\\"init\\\": {\\n          \\\"image\\\": {\\n            \\\"credentials\\\": {},\\n            \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n            \\\"repository\\\": \\\"cockroachdb/cockroach-k8s-request-cert\\\",\\n            \\\"tag\\\": \\\"0.4\\\"\\n   \x00\x00\x00I       }\\n        },\\n        \\\"serviceAccount\\\": {\\n          \\\"create\\\": true,\\n          \\\"name\\\": \\\"\\\"\\n        }\\n      }\\n    }\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Database\",\"certified\":\"false\",\"containerImage\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"createdAt\":\"2021-01-23T10-00-00Z\",\"description\":\"CockroachDB Operator based on the CockroachDB helm chart\",\"operators.operatorframework.io/builder\":\"operator-sdk-v1.3.0\",\"operators.operatorframework.io/project_layout\":\"helm.sdk.operatorframework.io/v1\",\"repository\":\"https://github.com/dmesser/cockroachdb-operator\",\"support\":\"dmesser\"},\"name\":\"cockroachdb.v5.0.4\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Represents a CockroachDB cluster\",\"displayName\":\"CockroachDB\",\"kind\":\"Cockroachdb\",\"name\":\"cockroachdbs.charts.operatorhub.io\",\"resources\":[{\"kind\":\"Deployment\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Service\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ReplicaSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Pod\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"Secret\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"PersistentVolumeClaim\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"StatefulSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Job\",\"name\":\"\",\"version\":\"batch/v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"CockroachDB is a scalable, survivable, strongly-consistent SQL database.\\n## About this Operator\\nThis Operator is based on a Helm chart for CockroachDB. It supports the same parameters like the official [CockroachDB Helm Chart](https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb).\\n\\n## Core capabilities\\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\\n## Using the cluster\\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\\u003cStatefulSet-name\\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\\n```\\nkubectl get service -l chart=cockroachdb-5.0.4\\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\n```\\nThen you can use the CockroachDB command line client to connect to the database cluster:\\n```\\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\\n```\\n## Before you start\\nThis Operator requires a cluster with PV support in order to run correctly.\\n\\nNote that for a production cluster, you will likely want to override the following parameters in [`values.yaml`](values.yaml) with your own values.\\n\\n- `statefulset.resources.requests.memory` and `statefulset.resources.limits.memory` allocate memory resources to CockroachDB pods in your cluster.\\n- `conf.cache` and `conf.max-sql-memory` are memory limits that we recommend setting to 1/4 of the above resource allocation. When running CockroachDB, you must set these limits explicitly to avoid running out of memory.\\n- `storage.persistentVolume.size` defaults to `100Gi` of disk space per pod, which you may increase or decrease for your use case.\\n- `storage.persistentVolume.storageClass\x00\x00\x00J` uses the default storage class for your environment. We strongly recommend that you specify a storage class which uses an SSD.\\n- `tls.enabled` must be set to `yes`/`true` to deploy in secure mode.\\n\\nFor more information on overriding the `values.yaml` parameters, please see:\\n\\u003e \\u003chttps://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-kubernetes.html#step-2-start-cockroachdb\\u003e\\n\\nIf you are running in secure mode (with configuration parameter `tls.enabled` set to `yes`/`true`) and `tls.certs.provided` set to `no`/`false`), then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nWhen `tls.certs.provided` is set to `yes`/`true`, this chart will use certificates created outside of Kubernetes. You may want to use this if you want to use a different certificate authority from the one being used by Kubernetes or if your Kubernetes cluster doesn't fully support certificate-signing requests. To use this, first set up your certificates and load them into your Kubernetes cluster as Secrets using the commands below:\\n\\n```\\nmkdir certs\\nmkdir my-safe-directory\\ncockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key\\ncockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key\\nkubectl create secret generic cockroachdb-root --from-file=certs\\ncockroach cert create-node --certs-dir=certs --ca-key=my-safe-directory/ca.key localhost 127.0.0.1 eerie-horse-cockroachdb-public eerie-horse-cockroachdb-public.default eerie-horse-cockroachdb-public.default.svc.cluster.local *.eerie-horse-cockroachdb *.eerie-horse-cockroachdb.default *.eerie-horse-cockroachdb.default.svc.cluster.local\\nkubectl create secret generic cockroachdb-node --from-file=certs\\n```\\n\\nSet `tls.certs.tlsSecret` to `yes/true` if you make use of [cert-manager][3] in your cluster.\\n\\n[cert-manager][3] stores generated certificates in dedicated TLS secrets. Thus, they are always named:\\n\\n* `ca.crt`\\n* `tls.crt`\\n* `tls.key`\\n\\nOn the other hand, CockroachDB also demands dedicated certificate filenames:\\n\\n* `ca.crt`\\n* `node.crt`\\n* `node.key`\\n* `client.root.crt`\\n* `client.root.key`\\n\\nBy activating `tls.certs.tlsSecret` we benefit from projected secrets and convert the TLS secret filenames to their according CockroachDB filenames.\\n\\nIf you are running in secure mode, then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nConfirm that all pods are `Running` successfully and init has been completed:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     STATUS      RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running     0          1m\\nmy-release-cockroachdb-1            1/1       Running     0          1m\\nmy-release-cockroachdb-2            1/1       Running     0          1m\\nmy-release-cockroachdb-init-k6jcr   0/1       Completed   0          1m\\n```\\n\\nConfirm that persistent volumes are created and claimed for each pod:\\n\\n```shell\\nkubectl get pv\\n```\\n\\n```\\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                      STORAGECLASS   REASON    AGE\\npvc-64878ebf-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delet\x00\x00\x00Ke           Bound     default/datadir-my-release-cockroachdb-0   standard                 51s\\npvc-64945b4f-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-1   standard                 51s\\npvc-649d920d-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-2   standard                 51s\\n```\\n\\n## Upgrading the cluster\\n\\n### Chart version 3.0.0 and after\\n\\nLaunch a temporary interactive pod and start the built-in SQL client:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\\n\\n```sql\\n\\u003e SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\\n```\\n\\nExit the shell and delete the temporary pod:\\n\\n```sql\\n\\u003e \\\\q\\n```\\n\\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\\n\\n```shell\\nkubectl delete job my-release-cockroachdb-init\\n```\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"image\\\":{\\\"tag\\\":\\\"\\u003cnew version tag here\\u003e\\\"}}}' --type merge\\n```\\n\\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     STATUS              RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running             0          2m\\nmy-release-cockroachdb-1            1/1       Running             0          3m\\nmy-release-cockroachdb-2            1/1       Running             0          3m\\nmy-release-cockroachdb-3            0/1       ContainerCreating   0          25s\\nmy-release-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\\n```\\n\\n```shell\\nkubectl get pods \\\\\\n-o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.containers[0].image}{\\\"\\\\n\\\"}'\\n```\\n\\n```\\nmy-release-cockroachdb-0    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-1    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-2    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-3    cockroachdb/cockroach:v20.2.4\\n```\\n\\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n```sql\\n\\u003e RESET CLUSTER SETTING cluster.preserve_downgrade_option;\\n\\u003e \\\\q\\n```\\n\\n## Configuration\\n\\nThe following table lists the configurable parameters of the CockroachDB chart and their default values.\\nFor details see the [`values.yaml`](values.yaml) file.\\n\\n| Parameter                                                 | Description                                                     | Default                                          |\\n| ---------                                                 | -----------                                                     | -------                                          |\\n| `clusterDomain`                         \x00\x00\x00L                  | Cluster's default DNS domain                                    | `cluster.local`                                  |\\n| `conf.attrs`                                              | CockroachDB node attributes                                     | `[]`                                             |\\n| `conf.cache`                                              | Size of CockroachDB's in-memory cache                           | `25%`                                            |\\n| `conf.cluster-name`                                       | Name of CockroachDB cluster                                     | `\\\"\\\"`                                             |\\n| `conf.disable-cluster-name-verification`                  | Disable CockroachDB cluster name verification                   | `no`                                             |\\n| `conf.join`                                               | List of already-existing CockroachDB instances                  | `[]`                                             |\\n| `conf.max-disk-temp-storage`                              | Max storage capacity for temp data                              | `0`                                              |\\n| `conf.max-offset`                                         | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\\n| `conf.max-sql-memory`                                     | Max memory to use processing SQL querie                         | `25%`                                            |\\n| `conf.locality`                                           | Locality attribute for this deployment                          | `\\\"\\\"`                                             |\\n| `conf.single-node`                                        | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\\n| `conf.sql-audit-dir`                                      | Directory for SQL audit log                                     | `\\\"\\\"`                                             |\\n| `conf.port`                                               | CockroachDB primary serving port in Pods                        | `26257`                                          |\\n| `conf.http-port`                                          | CockroachDB HTTP port in Pods                                   | `8080`                                           |\\n| `image.repository`                                        | Container image name                                            | `cockroachdb/cockroach`                          |\\n| `image.tag`                                               | Container image tag                                             | `v20.2.4`                                        |\\n| `image.pullPolicy`                                        | Container pull policy                                           | `IfNotPresent`                                   |\\n| `image.credentials`                                       | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `statefulset.replicas`                                    | StatefulSet replicas number                                     | `3`                                              |\\n| `statefulset.updateStrategy`                              | Update strategy for StatefulSet Pods                            | `{\\\"type\\\": \\\"RollingUpdate\\\"}`                      |\\n| `statefulset.podManagementPolicy`                         | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\\n| `statefulset.budget.maxUnavailable`                       | k8s PodDisruptionBudget parameter                               | `1`                                              |\\n| `statefulset.args`                                        | Extra command-line arguments                                    | `[]`                                \x00\x00\x00M             |\\n| `statefulset.env`                                         | Extra env vars                                                  | `[]`                                             |\\n| `statefulset.secretMounts`                                | Additional Secrets to mount at cluster members                  | `[]`                                             |\\n| `statefulset.labels`                                      | Additional labels of StatefulSet and its Pods                   | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `statefulset.annotations`                                 | Additional annotations of StatefulSet Pods                      | `{}`                                             |\\n| `statefulset.nodeAffinity`                                | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\\n| `statefulset.podAffinity`                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\\n| `statefulset.podAntiAffinity`                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\\n| `statefulset.podAntiAffinity.topologyKey`                 | The topologyKey for auto [anti-affinity rules][1]               | `kubernetes.io/hostname`                         |\\n| `statefulset.podAntiAffinity.type`                        | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\\n| `statefulset.podAntiAffinity.weight`                      | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\\n| `statefulset.nodeSelector`                                | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\\n| `statefulset.priorityClassName`                           | [PriorityClassName][4] for StatefulSet Pods                     | `\\\"\\\"`                                             |\\n| `statefulset.tolerations`                                 | Node taints to tolerate by StatefulSet Pods                     | `[]`                                             |\\n| `statefulset.topologySpreadConstraints`                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |\\n| `statefulset.topologySpreadConstraints.maxSkew`           | Degree to which Pods may be unevenly distributed                | `1`                                              |\\n| `statefulset.topologySpreadConstraints.topologyKey`       | The key of node labels                                          | `topology.kubernetes.io/zone`                    |\\n| `statefulset.topologySpreadConstraints.whenUnsatisfiable` | `ScheduleAnyway`/`DoNotSchedule` for unsatisfiable constraints  | `ScheduleAnyway`                                 |\\n| `statefulset.resources`                                   | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\\n| `service.ports.grpc.external.port`                        | CockroachDB primary serving port in Services                    | `26257`                                          |\\n| `service.ports.grpc.external.name`                        | CockroachDB primary serving port name in Services               | `grpc`                                           |\\n| `service.ports.grpc.internal.port`                        | CockroachDB inter-communication port in Services                | `26257`                                          |\\n| `service.ports.grpc.internal.name`                        | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\\n| `service.ports.http.port`                                 | CockroachDB HTTP port in Services               \x00\x00\x00N                | `8080`                                           |\\n| `service.ports.http.name`                                 | CockroachDB HTTP port name in Services                          | `http`                                           |\\n| `service.public.type`                                     | Public Service type                                             | `ClusterIP`                                      |\\n| `service.public.labels`                                   | Additional labels of public Service                             | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.public.annotations`                              | Additional annotations of public Service                        | `{}`                                             |\\n| `service.discovery.labels`                                | Additional labels of discovery Service                          | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.discovery.annotations`                           | Additional annotations of discovery Service                     | `{}`                                             |\\n| `ingress.enabled`                                         | Enable ingress resource for CockroachDB                         | `false`                                          |\\n| `ingress.labels`                                          | Additional labels of Ingress                                    | `{}`                                             |\\n| `ingress.annotations`                                     | Additional annotations of Ingress                               | `{}`                                             |\\n| `ingress.paths`                                           | Paths for the default host                                      | `[/]`                                            |\\n| `ingress.hosts`                                           | CockroachDB Ingress hostnames                                   | `[]`                                             |\\n| `ingress.tls[0].hosts`                                    | CockroachDB Ingress tls hostnames                               | `nil`                                            |\\n| `ingress.tls[0].secretName`                               | CockroachDB Ingress tls secret name                             | `nil`                                            |\\n| `serviceMonitor.enabled`                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | `false`                                             |\\n| `serviceMonitor.labels`                                   | Additional labels of ServiceMonitor                             | `{}`                                             |\\n| `serviceMonitor.annotations`                              | Additional annotations of ServiceMonitor                        | `{}`                                             |\\n| `serviceMonitor.interval`                                 | ServiceMonitor scrape metrics interval                          | `10s`                                            |\\n| `serviceMonitor.scrapeTimeout`                            | ServiceMonitor scrape timeout                                   | `nil`                                            |\\n| `storage.hostPath`                                        | Absolute path on host to store data                             | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.enabled`                        | Whether to use PersistentVolume to store data                   | `yes`                                            |\\n| `storage.persistentVolume.size`                           | PersistentVolume size                                         \x00\x00\x00O  | `100Gi`                                          |\\n| `storage.persistentVolume.storageClass`                   | PersistentVolume class                                          | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.labels`                         | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\\n| `storage.persistentVolume.annotations`                    | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\\n| `init.labels`                                             | Additional labels of init Job and its Pod                       | `{\\\"app.kubernetes.io/component\\\": \\\"init\\\"}`        |\\n| `init.annotations`                                        | Additional labels of the Pod of init Job                        | `{}`                                             |\\n| `init.affinity`                                           | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\\n| `init.nodeSelector`                                       | Node labels for init Job Pod assignment                         | `{}`                                             |\\n| `init.tolerations`                                        | Node taints to tolerate by init Job Pod                         | `[]`                                             |\\n| `init.resources`                                          | Resource requests and limits for the Pod of init Job            | `{}`                                             |\\n| `tls.enabled`                                             | Whether to run securely using TLS certificates                  | `no`                                             |\\n| `tls.serviceAccount.create`                               | Whether to create a new RBAC service account                    | `yes`                                            |\\n| `tls.serviceAccount.name`                                 | Name of RBAC service account to use                             | `\\\"\\\"`                                             |\\n| `tls.certs.provided`                                      | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\\n| `tls.certs.clientRootSecret`                              | If certs are provided, secret name for client root cert         | `cockroachdb-root`                               |\\n| `tls.certs.nodeSecret`                                    | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\\n| `tls.certs.tlsSecret`                                     | Own certs are stored in TLS secret                              | `no`                                             |\\n| `tls.init.image.repository`                               | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert`         |\\n| `tls.init.image.tag`                                      | Image tag to use for requesting TLS certificates                | `0.4`                                            |\\n| `tls.init.image.pullPolicy`                               | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\\n| `tls.init.image.credentials`                              | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `networkPolicy.enabled`                                   | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\\n| `networkPolicy.ingress.grpc`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n| `networkPolicy.ingress.http`                              | Whitel\x00\x00\x00Pist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n\\n\\nOverride the default parameters using the `CockroachDB` custom resource.\\n\\n## Deep dive\\n\\n### Connecting to the CockroachDB cluster\\n\\nOnce you've created the cluster, you can start talking to it by connecting to its `-public` Service. CockroachDB is PostgreSQL wire protocol compatible, so there's a [wide variety of supported clients](https://www.cockroachlabs.com/docs/install-client-drivers.html). As an example, we'll open up a SQL shell using CockroachDB's built-in shell and play around with it a bit, like this (likely needing to replace `my-release-cockroachdb-public` with the name of the `-public` Service that was created with your installed chart):\\n\\n```shell\\nkubectl run cockroach-client --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host my-release-cockroachdb-public\\n```\\n\\n```\\nWaiting for pod default/cockroach-client to be running, status is Pending,\\npod ready: false\\nIf you don't see a command prompt, try pressing enter.\\nroot@my-release-cockroachdb-public:26257\\u003e SHOW DATABASES;\\n+--------------------+\\n|      Database      |\\n+--------------------+\\n| information_schema |\\n| pg_catalog         |\\n| system             |\\n+--------------------+\\n(3 rows)\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE DATABASE bank;\\nCREATE DATABASE\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE TABLE bank.accounts (id INT\\nPRIMARY KEY, balance DECIMAL);\\nCREATE TABLE\\nroot@my-release-cockroachdb-public:26257\\u003e INSERT INTO bank.accounts VALUES\\n(1234, 10000.50);\\nINSERT 1\\nroot@my-release-cockroachdb-public:26257\\u003e SELECT * FROM bank.accounts;\\n+------+---------+\\n|  id  | balance |\\n+------+---------+\\n| 1234 | 10000.5 |\\n+------+---------+\\n(1 row)\\nroot@my-release-cockroachdb-public:26257\\u003e \\\\q\\nWaiting for pod default/cockroach-client to terminate, status is Running\\npod \\\"cockroach-client\\\" deleted\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\n### Cluster health\\n\\nBecause our pod spec includes regular health checks of the CockroachDB processes, simply running `kubectl get pods` and looking at the `STATUS` column is sufficient to determine the health of each instance in the cluster.\\n\\nIf you want more detailed information about the cluster, the best place to look is the Admin UI.\\n\\n### Accessing the Admin UI\\n\\nIf you want to see information about how the cluster is doing, you can try pulling up the CockroachDB Admin UI by port-forwarding from your local machine to one of the pods (replacing `my-release-cockroachdb-0` with the name of one of your pods:\\n\\n```shell\\nkubectl port-forward my-release-cockroachdb-0 8080\\n```\\n\\nYou should then be able to access the Admin UI by visiting \\u003chttp://localhost:8080/\\u003e in your web browser.\\n\\n### Failover\\n\\nIf any CockroachDB member fails, it is restarted or recreated automatically by the Kubernetes infrastructure, and will re-join the cluster automatically when it comes back up. You can test this scenario by killing any of the CockroachDB pods:\\n\\n```shell\\nkubectl delete pod my-release-cockroachdb-1\\n```\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nAfter a while:\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-rele\x00\x00\x00Qase,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-1  1/1       Running       0          20s\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nYou can check the state of re-joining from the new pod's logs:\\n\\n```shell\\nkubectl logs my-release-cockroachdb-1\\n```\\n\\n```\\n[...]\\nI161028 19:32:09.754026 1 server/node.go:586  [n1] node connected via gossip and\\nverified as part of cluster {\\\"35ecbc27-3f67-4e7d-9b8f-27c31aae17d6\\\"}\\n[...]\\ncockroachdb-0.my-release-cockroachdb.default.svc.cluster.local:26257\\nbuild:      beta-20161027-55-gd2d3c7f @ 2016/10/28 19:27:25 (go1.7.3)\\nadmin:      http://0.0.0.0:8080\\nsql:\\npostgresql://root@my-release-cockroachdb-1.my-release-cockroachdb.default.svc.cluster.local:26257?sslmode=disable\\nlogs:       cockroach-data/logs\\nstore[0]:   path=cockroach-data\\nstatus:     restarted pre-existing node\\nclusterID:  {35ecbc27-3f67-4e7d-9b8f-27c31aae17d6}\\nnodeID:     2\\n[...]\\n```\\n\\n### NetworkPolicy\\n\\nTo enable NetworkPolicy for CockroachDB, install [a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin), and set `networkPolicy.enabled` to `yes`/`true`.\\n\\nFor Kubernetes v1.5 \\u0026 v1.6, you must also turn on NetworkPolicy by setting the `DefaultDeny` Namespace annotation. Note: this will enforce policy for _all_ pods in the Namespace:\\n\\n```shell\\nkubectl annotate namespace default \\\"net.beta.kubernetes.io/network-policy={\\\\\\\"ingress\\\\\\\":{\\\\\\\"isolation\\\\\\\":\\\\\\\"DefaultDeny\\\\\\\"}}\\\"\\n```\\n\\nFor more precise policy, set `networkPolicy.ingress.grpc` and `networkPolicy.ingress.http` rules. This will only allow pods that match the provided rules to connect to CockroachDB.\\n\\n### Scaling\\n\\nScaling should be managed via the `helm upgrade` command. After resizing your cluster on your cloud environment (e.g., GKE or EKS), run the following command to add a pod. This assumes you scaled from 3 to 4 nodes:\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"statefulset\\\":{\\\"replicas\\\":\\\"4\\\"}}}' --type merge\\n```\\n\\nNote, that if you are running in secure mode (`tls.enabled` is `yes`/`true`) and increase the size of your cluster, you will also have to approve the CSR (certificate-signing request) of each new node (using `kubectl get csr` and `kubectl certificate approve`).\\n\\n[1]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\\n[2]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity\\n[3]: https://cert-manager.io/\\n[4]: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\\n[5]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\\n\",\"displayName\":\"CockroachDB Helm Operator\",\"icon\":[{\"base64data\":\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy\x00\x00\x00\x000uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=\",\"mediatype\":\"image/svg+xml\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\",\"clusterroles\",\"rolebindings\",\"clusterrolebindings\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}],\"serviceAccountName\":\"default\"}],\"deployments\":[{\"name\":\"cockroachdb-controller-manager\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\",\"--leader-election-id=cockroachdb\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"cockroachdb\"}],\"image\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"name\":\"manager\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"60Mi\"}}}],\"terminationGracePeriodSeconds\":10}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\",\"configmaps\",\"serviceaccounts\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"charts.operatorhub.io\"],\"resources\":[\"cockroachdbs\",\"cockroachdbs/status\",\"cockroachdbs/finalizers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"default\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"cockroach\",\"cockroachdb\"],\"links\":[{\"name\":\"Helm Chart Source\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb\"},{\"name\":\"Configuration Options\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration\"},{\"name\":\"CockroachDB Source\",\"url\":\"https://github.com/cockroachdb/cockroach\"}],\"maintainers\":[{\"email\":\"dmesser@redhat.com\",\"name\":\"Daniel Messer\"}],\"maturity\":\"stable\",\"minKubeVersion\":\"1.8.0\",\"provider\":{\"name\":\"Helm Community\",\"url\":\"https://artifacthub.io/packages/helm/cockroachdb/cockroachdb\"},\"replaces\":\"cockroachdb.v5.0.3\",\"version\":\"5.0.4\"}}\nquay.io/olmqe/cockroachdb-operator:5.0.4-1869-nodep5.0.4cockroachdb.v5.0.3\r\x00\x00\x00\x01\x065\x00\x065\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\xd2k\x03\x0e1\x85\xc1:\x85\xe2`s\r\x171\r\rcockroachdb.v5.0.4{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"charts.operatorhub.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"Cockroachdb\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"cockroachdb-sample\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"conf\\\": {\\n        \\\"attrs\\\": [],\\n        \\\"cache\\\": \\\"25%\\\",\\n        \\\"cluster-name\\\": \\\"\\\",\\n        \\\"disable-cluster-name-verification\\\": false,\\n        \\\"http-port\\\": 8080,\\n        \\\"join\\\": [],\\n        \\\"locality\\\": \\\"\\\",\\n        \\\"logtostderr\\\": \\\"INFO\\\",\\n        \\\"max-sql-memory\\\": \\\"25%\\\",\\n        \\\"port\\\": 26257,\\n        \\\"single-node\\\": false,\\n        \\\"sql-audit-dir\\\": \\\"\\\"\\n      },\\n      \\\"image\\\": {\\n        \\\"credentials\\\": {},\\n        \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n        \\\"repository\\\": \\\"cockroachdb/cockroach\\\",\\n        \\\"tag\\\": \\\"v20.2.4\\\"\\n      },\\n      \\\"ingress\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"hosts\\\": [],\\n        \\\"labels\\\": {},\\n        \\\"paths\\\": [\\n          \\\"/\\\"\\n        ],\\n        \\\"tls\\\": []\\n      },\\n      \\\"init\\\": {\\n        \\\"affinity\\\": {},\\n        \\\"annotations\\\": {},\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"init\\\"\\n        },\\n        \\\"nodeSelector\\\": {},\\n        \\\"resources\\\": {},\\n        \\\"tolerations\\\": []\\n      },\\n      \\\"labels\\\": {},\\n      \\\"networkPolicy\\\": {\\n        \\\"enabled\\\": false,\\n        \\\"ingress\\\": {\\n          \\\"grpc\\\": [],\\n          \\\"http\\\": []\\n        }\\n      },\\n      \\\"service\\\": {\\n        \\\"discovery\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          }\\n        },\\n        \\\"ports\\\": {\\n          \\\"grpc\\\": {\\n            \\\"external\\\": {\\n              \\\"name\\\": \\\"grpc\\\",\\n              \\\"port\\\": 26257\\n            },\\n            \\\"internal\\\": {\\n              \\\"name\\\": \\\"grpc-internal\\\",\\n              \\\"port\\\": 26257\\n            }\\n          },\\n          \\\"http\\\": {\\n            \\\"name\\\": \\\"http\\\",\\n            \\\"port\\\": 8080\\n          }\\n        },\\n        \\\"public\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          },\\n          \\\"type\\\": \\\"ClusterIP\\\"\\n        }\\n      },\\n      \\\"serviceMonitor\\\": {\\n        \\\"annotations\\\": {},\\n       \x00\x00\x00<\x00\x00\x00Ttep-export\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":0},\\\"command\\\":[\\\"/cnb/lifecycle/exporter\\\"],\\\"args\\\":[\\\"-app=/workspace/source/$(build.source.contextDir)\\\",\\\"-layers=/layers\\\",\\\"-cache-dir=/cache\\\",\\\"-group=/layers/group.toml\\\",\\\"$(build.output.image)\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"cache-dir\\\",\\\"mountPath\\\":\\\"/cache\\\"},{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]}]}},{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"ClusterBuildStrategy\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildah\\\"},\\\"spec\\\":{\\\"buildSteps\\\":[{\\\"name\\\":\\\"step-buildah-bud\\\",\\\"image\\\":\\\"quay.io/buildah/stable:latest\\\",\\\"workingDir\\\":\\\"/workspace/source\\\",\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"command\\\":[\\\"/usr/bin/buildah\\\"],\\\"args\\\":[\\\"bud\\\",\\\"--tag=$(build.output.image)\\\",\\\"--file=$(build.dockerfile)\\\",\\\"$(build.source.contextDir)\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"buildah-images\\\",\\\"mountPath\\\":\\\"/var/lib/containers/storage\\\"}]},{\\\"name\\\":\\\"step-buildah-push\\\",\\\"image\\\":\\\"quay.io/buildah/stable:latest\\\",\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"command\\\":[\\\"/usr/bin/buildah\\\"],\\\"args\\\":[\\\"push\\\",\\\"--tls-verify=false\\\",\\\"docker://$(build.output.image)\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"buildah-images\\\",\\\"mountPath\\\":\\\"/var/lib/containers/storage\\\"}]}]}},{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"Build\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildah-golang-build\\\"},\\\"spec\\\":{\\\"source\\\":{\\\"url\\\":\\\"https://github.com/sbose78/taxi\\\",\\\"revision\\\":\\\"master\\\"},\\\"strategy\\\":{\\\"name\\\":\\\"buildah\\\",\\\"kind\\\":\\\"ClusterBuildStrategy\\\"},\\\"dockerfile\\\":\\\"Dockerfile\\\",\\\"output\\\":{\\\"image\\\":\\\"image-registry.openshift-image-registry.svc:5000/build-examples/taxi-app\\\"}}},{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"BuildRun\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildah-golang-buildrun\\\"},\\\"spec\\\":{\\\"buildRef\\\":{\\\"name\\\":\\\"buildah-golang-build\\\"},\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"1\\\",\\\"memory\\\":\\\"1Gi\\\"}}}}]\",\"capabilities\":\"Basic Install\",\"categories\":\"Developer Tools, OpenShift Optional\",\"containerImage\":\"quay.io/shipwright/shipwright-operator:v0.3.0\",\"createdAt\":\"2020-10-03T17:44:55Z\",\"description\":\"Build lean container images of your application on Kubernetes using buildah, s2i, buildpacks, kaniko, and more\",\"repository\":\"https://github.com/shipwright-io/build\"},\"name\":\"buildv2-operator.v0.3.0\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"BuildRun is the Schema representing an instance of build execution\",\"kind\":\"BuildRun\",\"name\":\"buildruns.build.dev\",\"statusDescriptors\":[{\"description\":\"Indicates if the build execution was successful.\",\"displayName\":\"Succeeded\",\"path\":\"succeeded\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]},{\"description\":\"Indicates the reason for build execution failure.\",\"displayName\":\"Reason\",\"path\":\"reason\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]}],\"version\":\"v1alpha1\"},{\"description\":\"Build is the Schema representing a Build definition\",\"kind\":\"Build\",\"name\":\"builds.build.dev\",\"statusDescriptors\":[{\"description\":\"Indicates if the build registration was successful.\",\"displayName\":\"Reason\",\"path\":\"reason\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]},{\"description\":\"Indicates the reason for Build Registration failure\",\"displayName\":\"Registered\",\"path\":\"registered\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]}],\"version\":\"v1alpha1\"},{\"description\":\"BuildStrategy is the Schema representing a strategy in the namespace scope to build images from source code.\",\"kind\":\"BuildStrategy\",\"name\":\"buildstrategies.build.dev\",\"version\":\"v1alpha1\"},{\"description\":\"ClusterBuildStrategy is the Schema representing a strategy in the cluster scope to build images from source code.\",\"kind\":\"ClusterBuildStrategy\",\"name\":\"clusterbuildstrategies.build.dev\",\"version\":\"v1alpha1\"}],\"required\":[{\"description\":\"Represents Installation of Tekton.\",\"displayName\":\"OpenShift Pipelines Config\",\"kind\":\"TektonConfig\",\"name\":\"tektonconfigs.operator.tekton.dev\",\"version\":\"v1alpha1\"}]},\"description\":\"\\n## Getting Started\\nThe Shipwright Build Project enables developers to build imag\x00\x00\x00Ues using diverse Build Strageties, namely, source-to-image,\\nbuildpacks-v3, Kaniko \\u0026 Buildah.\\n\\n### Installing Build strategies\\n\\nThe administrator may choose to install one of more build strategies in the cluster-scope or the namespace scope.\\n\\n#### Buildah \\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/buildah/buildstrategy_buildah_cr.yaml\\n```\\n#### Buildpacks-v3 \\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/buildpacks-v3/buildstrategy_buildpacks-v3_cr.yaml\\n```\\n#### Kaniko \\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/kaniko/buildstrategy_kaniko_cr.yaml\\n```\\n#### Source-to-Image (s2i)\\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/source-to-image/buildstrategy_source-to-image_cr.yaml\\n```\\n\\n### Build an image from source code\\n\\n\\n#### Configure a namespace-scoped Build.\\n```\\n  apiVersion: build.dev/v1alpha1\\n  kind: Build\\n  metadata:\\n    name: buildah-golang-build\\n  spec:\\n    source:\\n      url: https://github.com/sbose78/taxi\\n      revision: master\\n    strategy:\\n      name: buildah\\n      kind: ClusterBuildStrategy\\n    dockerfile: Dockerfile\\n    output:\\n      image: image-registry.openshift-image-registry.svc:5000/build-examples/taxi-app\\n```\\n### Trigger a build by creating a `BuildRun`\\n```\\n---\\n  apiVersion: build.dev/v1alpha1\\n  kind: BuildRun\\n  metadata:\\n    name: buildah-golang-buildrun\\n  spec:\\n    buildRef:\\n      name: buildah-golang-build\\n    resources:\\n      limits:\\n        cpu: \\\"1\\\"\\n        memory: \\\"1Gi\\\"\\n```\\n\",\"displayName\":\"Shipwright Build\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAtAAAAINCAYAAAAX90htAAAACXBIWXMAAC3cAAAt3AE8680MAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJzs3XmYVFedN/DvubV09b7v+97Q7DtkM6vRxGiiQU2IY8Z5zcxo8iaZ6KsBnHo10XGMNKJxBmfGKDTkFTVO3MYkJpAEQiBszdpNNw100zs03U2vVbfuef8gGwlLL7fr3Kr7/TzPPD4PaW5/mYaqb537u+cIEBGFgMd+sC7aFSk9EX5nvK7BIYA4AEBAxEghXZqAI/D2r2kS0QDckFKTmogHAEhEA4YbUmhSyHgAEFJECYGI8/8ZAkDCRb71+WtdyCmB2A9+oQDiAWhj+GN5AESO4esvQY4AYvAS/zEggb5L/U4hZC+kMC5yzSFADAOAAEYADAKABHQJee78rwsJyJ73Xa0X4u1rSdkvIPwAYABDEBiGIXUhxDkBOQRNDDsCRq/f0PyBKPSNDLuGqx5dOjSOPzwRUdAJ1QGIKLz9n3/ZFB8Z4U8OaEgUkAmGgUQIJAIyAVIkSoFEIZEIiWgIeACRAEiPBKLeLskRuEhZpbB1DoBfAj3vFXfZDwi/AM5KiREJ0SOE7L3gfyXOShnocTnQibOBTq/3/mHVfxAiCl8s0EQ0bg+uWRORoKeUSC1QLIA8QGRLiWwAuQCyAeTAlBVWojE7JyDaJGSXEOiUEq1SoFMAbdLQ2iHFvif/6fPNqkMSUWhigSaiMVm5amMlhPxbSHmrFCgH4FCdiWicmiGwCUKsfeJ/31uvOgwRhQ4WaCIalcer1s/RhHgSEh8FXzsovEgJ/EVCPP7dR+7dpzoMEVkf3wSJ6LK83mc8erz7XwD5IMb2gBxRqDEEsKbH0f2NHz/00IjqMERkXSzQRHRJ3qc3xeg+3+8A3KQ6C1EQveYfcd/x/W8s7VUdhIisiQWaiC7K+4N1abpL/AVSzFadhUiBPQGH+9bvPbS0S3UQIrIeFmgi+pBvrtmU6gj4XgEwTXUWIlWEQK3D57/e+/X721VnISJrYYEmogu8XZ5fBjBddRYi9eR+Z8Bxo/exe06rTkJE1sEHgojoXd/46YZER8D3F7A8E71NzNAdgZe9T21MUZ2EiKyDK9BEBADwVj2ToMP1VwBzVWchsqCagCtw4/e++jdnVAchIvW4Ak1E8K7alKTDtRksz0SXMtPhd7z4jZ9uSFQdhIjUY4EmsrlHVm2K1MXI8wBmqc5CZHFznCPyfx77wbpo1UGISC0WaCIb+/Lata5ojPwGEFerzkIUIhZGOrVfeb2bnaqDEJE6LNBEdiWlSBuKWQshPq46ClEokcBtevypX0BKPkdEZFMO1QGISI0ViaVPQeIfVecgCk1ixrXbD0S99sJzL6lOQkTBxxVoIhtaXlX9dUj8k+ocRCFN4GvLqzY8pjoGEQUfbz8R2czK1dXLpMQ68N8/kRkkpPzSE4/e94zqIEQUPHwDJbKRFaurb4fE7wDwASgi8/hhiE898U/3/ll1ECIKDhZoIpt4vGr9HA3iVQAxqrMQhaFBIYwbvvPwF3aoDkJEk48FmsgGvGuqc/QAtgPIUZ2FKIy1yYBY/ORj955UHYSIJhcfIiQKc9411XF6AH8GyzPRZMvUNPlnnlZIFP5YoInC2JfXrnXpAfwWwHTVWYjsQApMdY4Yv3twzZoI1VmIaPKwQBOFKylF2mD0fwC4SXUUInsR18UbiTxohSiM8SAVojC1IqHs2wAeUp2DyJ7EtOu2HxCvvfDcFtVJiMh8/HRMFIZWrFp/P4T4ueocRHYnJP7hO48u+3fVOYjIXCzQRGFmRdX6jwDiBQBu1VmICH5I3P7Eo8teVB2EiMzDAk0URr65pnqqI4A3AMSrzkJE7+oTUlvynUfvOaQ6CBGZgw8REoWJb/7kl8laAM+D5ZnIauIMYfzR+4N1aaqDEJE5WKCJwsCX1651abrj1wIoUZ2FiD5MAAW6U/yW29sRhQcWaKIwkDoY9RMhcb3qHER0OeLq+EDSWtUpiGjiWKCJQtzyquqvC4gvq85BRKPyNytWr/+a6hBENDF8iJAohD1eVf0xDfgDuKd7WJCGhM83An9Ah+73Qw/ocLlc8Lg9cDgdcDpdqiOSOQwpxV1PPnrv86qDENH4sEAThai3d9zYDiBOdRYanYHBAXR1tqOntwd9fT3o6+tD37leDPSfw7BvGNKQV7yGy+VGZGQkYmPjEB8Xj7jYBMTFxyMlORVJySnQBG8s\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00ZZze6zvYhYIHt8TQhkJocj+z0ZBTmpKEkLxMxNr6rMFpOhwNlBVkoK8gCbjz/821sbsexpg4cP9WB4ZHQ+MAUEgQ4/0whhwWaQo4GbJPAV1XnCBUupxNpyfHISktCVnoSstKSkJ6SAIemqY4WNgTeK9TzppUAOD8/fbq7Dx1netBxugenz/ah99wges4NYGBweFJyxEZHIjkxFsnxsUhNikdORjIy05LgdvGlfqJSk+KRmhSPhTPLIaXE6bN9aOk4g5aObrR0nEHH6R74/LrqmKFJ8gFCCj18VaWQY0B/XXAE+l0F2WlISYqD2+mEy+WEJ8KN+JgoJMZHIzEuBtE2eRjMahyahvSUBKSnJADlF/43vx5AT98A+voHMDjkw7DPh+ERP4aGRzA84sfwiO+iW6xpDg2RERGIinQj0hOBKM/5/42LiUJyQgxcTr6kB4MQ4t1CPWtK0bu/PjA4jO7efnT3nkNf/xCGhkfg8wfg8/txrKkdff2DClNblnTq8g3VIYjGivdsKSStWFXdCIFC1Tms4It33YDivEzVMYjoMp7942s43NCsOoblCIHa7zy8bIrqHERjxXu4FJo4M0dEFPKkAR7fTSGJBZpCk5DbVEcgIqKJkQBfyykksUBTSApogqsWREQhziX4Wk6hiQWaQtL3Hrz3CCC7VOcgIqJxEmj3PnJvo+oYROPBAk2hSQgJiO2qY9DkkwD2Hm7Eqmeex1v76/HhvSkoVO2vO4H//PVLaGrlZ2FbknhNdQSi8eKeRxSyJLBNAHeozkGT5/TZPvzhlbfQ2NwOAPj9KztxqKEJd968CPGx0YrT0XjpegAvbtuH7XtrAQD/uelFVJbm4dZr5yI+NkpxOgoiPgxOIYsFmkKWBu11CfUnvZH5BodHsPnNA9i5/ygM48I152NN7fhJ9Z9w85JZmDejFBqPoQ4pHWd68Os/b0PHmZ53f00COFjfhIamNlw7fxoWzyqH08m93sOdMBws0BSyWKApZHVEnduVNhg9CIBLVmEiYBjYe6gRL72xD4NDI5f8uuERP/6w+S3sOtiA22+Yj7zM1CCmpPEwDIlte47gle010C9xxPnwiB8vbt2LN/fV4fqF0zFnWjE/IIWvvtpcx37VIYjGix/xKWTt/uMfjWtvvfMWQBQojqLUrCmFSIqPVR1jQiSAw/VN2PCHV7HvyHH49cCofl//4DD2Hm5E77kB5GWlwsUjqy2pressqp/fjJra4zAucsLiB434/Kg73oK6xlNISogJ+b/fAHDw6El0dfepjmEdApv//UufX686BtF48d2GQpzYCuA61SlofCSAusZT2PzmAbR2do/vGlJi96FjONTQjKvnTsHi2RVws0hbgl8P4LWdB/H6rsMIGGMft2rrOotfPPcKCnLScP3C6SjKzZiElKSChOD+zxTS+C5DoU3KreAt3pB0rKkdL23bh5aOM6Zcb3jEh7++UYM39tTi6nlTsWhWOVyco1VCAjhU34QXX9+Ls339E77eiVOdeObUy8jLTMW1CypRVpgN/qsPbZrB/Z8ptLFAU0hzOsUbegABcBwpJEgARxqasWXHAbR1nZ2U7zE4PPLuHO1HFkzDnMpiOBzcsTNYjjd34C+v7xn3HYXLaWrrQvXzW5CTkYzrFkxHeRGLdIjyO6LPvaU6BNFE8LWHQt6Kquq9AGapzqHKF++6AcV5mapjXNaIz4+9hxuxo+YoTp8N7hxobHQkFswoxbzppYiJ8gT1e9tJV3cvXty6F7WNLUH7nmlJ8Vg4swyzphZZfmzn2T++hsMNzapjWMX2Jx5ZtkR1CKKJsPYrDtEoSCm2CiFtW6CtrLvnHHYdbMCuAw0YGvEpyXBuYAgvb9+PLTsPYkpRDpbMmYLczBQlWcJR++kebNt9BPtH+YCgmTq7e/GHzW/hxW37ML08H4tnVSAtOT6oGWgcJPd/ptDHAk2hT5NbIfFV1THoPCkljp5oxZv76nDsZJtlTg4MBAwcrG/Cwfom5GWlYtGsckwpzoHTwemfsZIAjp1sw7Y9R9Bwsk11HIz4/Nh1oAG7DzSgOD8TC2eWo7wwC4LPR1iTJlmgKeSxQFPIk1K+JjiNpFxXdy/2HTmOmtrj6D03qDrOZTW1dqGptQuREW5UluVhVkUh8rLT+LfoCoZH/Nh7+Bh27q8P+ijOaEgADSfb0HCyDXExUZg1pRAzpxQiLYmr0hZiOI0IFmgKeXy/oLCwoqq6FkC56hwqqJyB7ukbwKH6Jhw4etK03TRUSYiLxtSSXEwtzkVuVioP8HibYUjUn2xFzZHjqG08Neo9uq0kOz0Z08vyUVmah4Q4NUfAcwb6XfueeGTZbNUhiCaKK9AUFqTAZiHtWaCDrau7F7WNLThU3xTypfn9evoG8MaeWryxpxbRUR5UFOWgND8TRbkZiPS4VccLqoBh4MSpDhw+dgqH65vQPzisOtKEtHScQUvHGfzl9T3ISktCZWkeKopzuDKtgpCbVUcgMgMLNIUFzZCbpRB/rzpHOBrx+XGsqR31J1vRcLINPX0DqiNNuoHBYew+2IDdBxugCYGs9CSU5GUiPzsNuZkpiHC7VEc03bmBIRxv7kDdiRYcPd6KYUUPfU621s5utHZ246Vt+5AQF43S/CyUFpz/oBSOP1erkYaDBZrCAgs0hQVHQG7RnUKCY0kT1j84jJOtnTjZ0oWTLZ1o7zob9N0VrMSQEqfaz+BU+/nVdk0IpKUkID8rFbmZKchITURKYhwcWmjtNd17bgDN7Wdw4lQHGps70NXdqzpS0PX0DeCtA/V460A9NE0gMzUJ+dmpyM9KQ352GqIjI1RHDDcBlxjhASoUFlg2KGysqKo+CKBSdY5gG+8MtCElevoG0N51Fm1dZ9HedRbtp8/aYoXZbA6HhvTkBKSnJCA9OQFJCbFIToxFUlwMnIpPQ9QDAXT39uN0dx/au86eH2fo7MZAiI9lBENiXAwy0xKRmZqIjNQkZKYmIC42elxvnJyBBgCx64lH7p2vOgWRGbgCTeFkC2xYoC8mYBgYHBrBwNAIBgaH0D84goHBYXT39qO79xy6e86h59wAAgFDddSwEAgY744GvJ8AEBcbjcT4aMTHRCE6yoO4mCjERHkQGx2JSE8EPG4XPB43IlwuaNrYqtnwiB9+XUf/wDD6BgYxMDiMvv5BnBscRnfPOZzpOYfevgFb30GYiLN9/Tjb139B8XU6HUiKj0FyQiyS4mORGB+N6EgPYqIiERUVgehID1euL0Vy/pnCBws0hQ0p5GYhxVdU5wi2376wHUII+P06JBC2s6uhSOL8qETvudGt6rucDkS4XXBd5lS94REfdH/oiPEAACAASURBVN2AX9dNSkljoesBdJ7pReeZy4+8aJpAhMsFCMAT4eaKPwBIsUV1BCKzsEBT2DCcxhaH32EACK1h1Ak6NzCkOgKZxK8HQnKbOPoww5Dvnr45NMwPtQB0p4sHqFD4sFXRoPD2va/+zRlAHlSdg4iIPmS396Fl1jt9h2icWKApzGicsSMishghwNdmCiss0BRmjC2qExAR0YWkwQJN4YUFmsKKE/oWABwiJSKyDv9wwNimOgSRmVigKax4H7m/B0LuV52DJkd+VmrIHVhCHxbpcWPutJIxb9tHIWvnU1/7AjeYp7DCXTgo7AipbZaQs1XnIPPkZqbg5iWzUJibjqbWLjz7p9fRz91HQlJiXAzu+9T1SE2Kw9Vzp+CPm3fhWFOb6lg0ubaoDkBkNrVHZBFNgms/dpcbwD2qc9DEZaYl4s6bFuOWq2cjMT4GABAfG43pZfk40dLJLfxCTHZ6Mu7/zE1IjIsGAERFRmDmlEKkJMahtbMbwyN+xQlpMmgavv3qX547rjoHkZm4Ak1hxz/sft0V4QuAHxBDVkpiHG5YPAPTyvIvemxyfGwU/tfSW/Di1r14c18deM6e9c2pLMbt18+Dy3nh244AMKO8AJUledi5/yhe3XkQA0MjakLSZPBpnoHtqkMQmY0DaBSWVlRV7wQwX3UOGpvM1EQsmVOBGeWFo56PbTjZht++uJ0jHRYV4XbhjhsWYEZFwai+fsTnx/Z9ddi+txaDLNLh4LUn\x00\x00\x00[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\x00\x00\x00\\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\x00\x00\x00]EaH/hMO4XgyRqwBMdDpPRhHshOp9PDGQiKgPG2giogPU1i4vSFT0nKcqVwOY7XQeh9UL5Ketrr2/vWfRoh6nwxARZQo20EREh6Iq19310CcFWCzAx5E/3y9NAE8ZBpbdvPjC550OQ0SUifLlDYGIKGm1dz5QFRd8DZBLAFQ4nSdFogr9vZlwLb39qgvWOh2GiCiTsYEmIhqkb9/xq/LCgqLzFXo5cmSetEDWq5o/dRcW/qr2f85tdzoPEVE2YANNRDREtbW1Rtw37VSoLobgDGTf91ITwAuqxjLObyYiGrps+6ZPRJRRblh6/9GAXAbIhQDKnc5zBPsE8hsXcG/tFQubnA5DRJSt2EATEdlg//YOMf8LKnOdzvMedQL5eVc88dCPrr6ow+kwRETZjg00EZHNbrz7oXmmaX5DIAvh3OEsbQr9ncL439uuWLjaoQxERDmJDTQRUYrULnvQm0jIeQr9bwA1abpsnUB+7irwPMyHAomIUoMNNBFRGty49MEPK3QhIAsAjLS5/A4B/pCAPnDbFV980+baRET0HmygiYjSaMHy5a4Z22KnAHoRgLOR/IOHnQI8barxgCc67pna2lPiNsYkIqLDYANNROSQq354f2mxy/iMiiwA9OMASo7wkjYAz6rIck9r75O1tRd3pyEmERG9BxtoIqIMcMWdy4tLjd6PQvU4QKYAKBcVNUXbIBIWU/8Vcbf8455Fi3qcTUpERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERElBqSssrz57vLm/dWGW6ZDVOqVHScKsaLYByAIgBlADwHvCIGoF2hbSKyHYrdCmwDdIOKe317YW8IjY29KctLREREh1U+c+YIjXtmi2KqCKZCZSqAceh7Ty8E4Ov/VAXQCqAbQBcE70ClSdVs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\x00\x00\x00^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\x00\x00\x00_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\x00\x00\x00`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\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"services\",\"services/finalizers\",\"endpoints\",\"persistentvolumeclaims\",\"events\",\"configmaps\",\"secrets\",\"serviceaccounts\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"\x00\x00\x00averbs\":[\"get\",\"create\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"build-operator\"],\"resources\":[\"deployments/finalizers\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\",\"deployments\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"build.dev\"],\"resources\":[\"*\",\"buildstrategies\",\"clusterbuildstrategies\",\"buildruns\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"tekton.dev\"],\"resources\":[\"tasks\",\"taskruns\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]}],\"serviceAccountName\":\"build-operator\"}],\"deployments\":[{\"name\":\"build-operator\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"build-operator\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"name\":\"build-operator\"}},\"spec\":{\"containers\":[{\"command\":[\"build-operator\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"build-operator\"}],\"image\":\"quay.io/shipwright/shipwright-operator:v0.3.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"stat\",\"/tmp/operator-sdk-ready\"]},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"build-operator\",\"readinessProbe\":{\"exec\":{\"command\":[\"stat\",\"/tmp/operator-sdk-ready\"]},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{}}],\"serviceAccountName\":\"build-operator\"}}}}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"API\",\"Cloud-native\",\"Build\"],\"maintainers\":[{\"email\":\"shipwright-dev@lists.shipwright.io\",\"name\":\"Shipwright\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Project Shipwright\"},\"replaces\":\"buildv2-operator.v0.1.0\",\"version\":\"0.3.0\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"buildruns.build.dev\"},\"spec\":{\"group\":\"build.dev\",\"names\":{\"kind\":\"BuildRun\",\"listKind\":\"BuildRunList\",\"plural\":\"buildruns\",\"shortNames\":[\"br\",\"brs\"],\"singular\":\"buildrun\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"description\":\"The Succeeded status of the BuildRun\",\"jsonPath\":\".status.conditions[?(@.type==\\\"Succeeded\\\")].status\",\"name\":\"Succeeded\",\"type\":\"string\"},{\"description\":\"The Succeeded reason of the BuildRun\",\"jsonPath\":\".status.conditions[?(@.type==\\\"Succeeded\\\")].reason\",\"name\":\"Reason\",\"type\":\"string\"},{\"description\":\"The start time of this BuildRun\",\"jsonPath\":\".status.startTime\",\"name\":\"StartTime\",\"type\":\"date\"},{\"description\":\"The completion time of this BuildRun\",\"jsonPath\":\".status.completionTime\",\"name\":\"CompletionTime\",\"type\":\"date\"}],\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"BuildRun is the Schema representing an instance of build execution\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BuildRunSpec defines the desired state of BuildRun\",\"properties\":{\"buildRef\":{\"description\":\"BuildRef refers to the Build\",\"properties\":{\"apiVersion\":{\"description\":\"API version of the referent\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"output\":{\"des\x00\x00\x00bcription\":\"Output refers to the location where the generated image would be pushed to. It will overwrite the output image in build spec\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"serviceAccount\":{\"description\":\"ServiceAccount refers to the kubernetes serviceaccount which is used for resource control. Default serviceaccount will be set if it is empty\",\"properties\":{\"generate\":{\"description\":\"If generates a new ServiceAccount for the build\",\"type\":\"boolean\"},\"name\":{\"description\":\"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\"type\":\"string\"}},\"type\":\"object\"},\"timeout\":{\"description\":\"Timeout defines the maximum run time of this BuildRun.\",\"format\":\"duration\",\"type\":\"string\"}},\"required\":[\"buildRef\"],\"type\":\"object\"},\"status\":{\"description\":\"BuildRunStatus defines the observed state of BuildRun\",\"properties\":{\"buildSpec\":{\"description\":\"BuildSpec is the Build Spec of this BuildRun.\",\"properties\":{\"builder\":{\"description\":\"BuilderImage refers to the image containing the build tools inside which the source code would be built.\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"dockerfile\":{\"description\":\"Dockerfile is the path to the Dockerfile to be used for build strategies which bank on the Dockerfile for building an image.\",\"type\":\"string\"},\"output\":{\"description\":\"Output refers to the location where the generated image would be pushed to.\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"parameters\":{\"description\":\"Parameters contains name-value that could be used to loosely type parameters in the BuildStrategy.\",\"items\":{\"description\":\"Parameter defines the data structure that would be used for expressing arbitrary key/value pairs for the execution of a build\",\"properties\":{\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"runtime\":{\"description\":\"Runtime represents the runtime-image\",\"properties\":{\"base\":{\"description\":\"Base runtime base image.\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"entrypoint\":{\"description\":\"Entrypoint runtime-image entrypoint.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"env\":{\"additionalProperties\":{\"type\":\"string\"},\"des\x00\x00\x00ccription\":\"Env environment variables for runtime.\",\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels map of additional labels to be applied on image.\",\"type\":\"object\"},\"paths\":{\"description\":\"Paths list of directories/files to be copied into runtime-image, using colon \\\":\\\" to split up source and destination paths.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"run\":{\"description\":\"Run arbitrary commands to run before copying data into runtime-image.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"user\":{\"description\":\"User definitions of user and group for runtime-image.\",\"properties\":{\"group\":{\"description\":\"Group group name or GID employed in runtime-image.\",\"type\":\"string\"},\"name\":{\"description\":\"Name user name to be employed in runtime-image.\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"workDir\":{\"description\":\"WorkDir runtime image working directory `WORKDIR`.\",\"type\":\"string\"}},\"type\":\"object\"},\"source\":{\"description\":\"Source refers to the Git repository containing the source code to be built.\",\"properties\":{\"contextDir\":{\"description\":\"ContextDir is a path to subfolder in the repo. Optional.\",\"type\":\"string\"},\"credentials\":{\"description\":\"SecretRef refers to the secret that contains credentials to access the git repo. Optional.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"flavor\":{\"description\":\"Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.\",\"type\":\"string\"},\"httpProxy\":{\"description\":\"HTTPProxy is optional.\",\"type\":\"string\"},\"httpsProxy\":{\"description\":\"HTTPSProxy is optional.\",\"type\":\"string\"},\"noProxy\":{\"description\":\"NoProxy can be used to specify domains for which no proxying should be performed. Optional.\",\"type\":\"string\"},\"revision\":{\"description\":\"Ref is a git reference. Optional. \\\"master\\\" is used by default.\",\"type\":\"string\"},\"url\":{\"description\":\"URL of the git repo\",\"type\":\"string\"}},\"required\":[\"url\"],\"type\":\"object\"},\"strategy\":{\"description\":\"StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy\",\"properties\":{\"apiVersion\":{\"description\":\"API version of the referent\",\"type\":\"string\"},\"kind\":{\"description\":\"BuildStrategyKind indicates the kind of the buildstrategy, namespaced or cluster scoped.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"timeout\":{\"description\":\"Timeout defines the maximum run time of a build run.\",\"format\":\"duration\",\"type\":\"string\"}},\"required\":[\"output\",\"source\",\"strategy\"],\"type\":\"object\"},\"completionTime\":{\"description\":\"CompletionTime is the time the build completed.\",\"format\":\"date-time\",\"type\":\"string\"},\"conditions\":{\"description\":\"Conditions\",\"items\":{\"description\":\"Condition defines the required fields for populating Build controllers Conditions\",\"properties\":{\"lastTransitionTime\":{\"description\":\"LastTransitionTime last time the condition transit from one status to another.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"A human readable message indicating details about the transition.\",\"type\":\"string\"},\"reason\":{\"description\":\"The reason for the condition last transition.\",\"type\":\"string\"},\"status\":{\"description\":\"Status of the condition, one of True, False, Unknown.\",\"type\":\"string\"},\"type\":{\"description\":\"Type of condition\",\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"failedAt\":{\"description\":\"FailedAt points to the resource where the BuildRun failed\",\"properties\":{\"container\":{\"type\":\"string\"},\"pod\":{\"type\":\"string\"}},\"type\":\"object\"},\"latestTaskRunRef\":{\"description\":\"PodName is the name of the pod responsible for executing this task's steps.\",\"type\":\"string\"},\"reason\":{\"description\":\"The Succeeded reason of the Ta\x00\x00\x00dskRun\",\"type\":\"string\"},\"startTime\":{\"description\":\"StartTime is the time the build is actually started.\",\"format\":\"date-time\",\"type\":\"string\"},\"succeeded\":{\"description\":\"The Succeeded status of the TaskRun\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"builds.build.dev\"},\"spec\":{\"group\":\"build.dev\",\"names\":{\"kind\":\"Build\",\"listKind\":\"BuildList\",\"plural\":\"builds\",\"singular\":\"build\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"description\":\"The register status of the Build\",\"jsonPath\":\".status.registered\",\"name\":\"Registered\",\"type\":\"string\"},{\"description\":\"The reason of the registered Build, either an error or succeed message\",\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"},{\"description\":\"The BuildStrategy type which is used for this Build\",\"jsonPath\":\".spec.strategy.kind\",\"name\":\"BuildStrategyKind\",\"type\":\"string\"},{\"description\":\"The BuildStrategy name which is used for this Build\",\"jsonPath\":\".spec.strategy.name\",\"name\":\"BuildStrategyName\",\"type\":\"string\"},{\"description\":\"The create time of this Build\",\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"CreationTime\",\"type\":\"date\"}],\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Build is the Schema representing a Build definition\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BuildSpec defines the desired state of Build\",\"properties\":{\"builder\":{\"description\":\"BuilderImage refers to the image containing the build tools inside which the source code would be built.\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"dockerfile\":{\"description\":\"Dockerfile is the path to the Dockerfile to be used for build strategies which bank on the Dockerfile for building an image.\",\"type\":\"string\"},\"output\":{\"description\":\"Output refers to the location where the generated image would be pushed to.\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"parameters\":{\"description\":\"Parameters contains name-value that could be used to loosely type parameters in the BuildStrategy.\",\"items\":{\"description\":\"Parameter defines the data structure that would be used for expressing arbitrary key/value pairs for the execution of a build\",\"properties\":{\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"runtime\":{\"description\":\"Runt\x00\x00\x00eime represents the runtime-image\",\"properties\":{\"base\":{\"description\":\"Base runtime base image.\",\"properties\":{\"credentials\":{\"description\":\"SecretRef is a reference to the Secret containing the credentials to push the image to the registry\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"image\":{\"description\":\"ImageURL is the URL where the image will be pushed to.\",\"type\":\"string\"}},\"required\":[\"image\"],\"type\":\"object\"},\"entrypoint\":{\"description\":\"Entrypoint runtime-image entrypoint.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"env\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Env environment variables for runtime.\",\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"Labels map of additional labels to be applied on image.\",\"type\":\"object\"},\"paths\":{\"description\":\"Paths list of directories/files to be copied into runtime-image, using colon \\\":\\\" to split up source and destination paths.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"run\":{\"description\":\"Run arbitrary commands to run before copying data into runtime-image.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"user\":{\"description\":\"User definitions of user and group for runtime-image.\",\"properties\":{\"group\":{\"description\":\"Group group name or GID employed in runtime-image.\",\"type\":\"string\"},\"name\":{\"description\":\"Name user name to be employed in runtime-image.\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"workDir\":{\"description\":\"WorkDir runtime image working directory `WORKDIR`.\",\"type\":\"string\"}},\"type\":\"object\"},\"source\":{\"description\":\"Source refers to the Git repository containing the source code to be built.\",\"properties\":{\"contextDir\":{\"description\":\"ContextDir is a path to subfolder in the repo. Optional.\",\"type\":\"string\"},\"credentials\":{\"description\":\"SecretRef refers to the secret that contains credentials to access the git repo. Optional.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"flavor\":{\"description\":\"Flavor of the git provider like github, gitlab, bitbucket, generic, etc. Optional.\",\"type\":\"string\"},\"httpProxy\":{\"description\":\"HTTPProxy is optional.\",\"type\":\"string\"},\"httpsProxy\":{\"description\":\"HTTPSProxy is optional.\",\"type\":\"string\"},\"noProxy\":{\"description\":\"NoProxy can be used to specify domains for which no proxying should be performed. Optional.\",\"type\":\"string\"},\"revision\":{\"description\":\"Ref is a git reference. Optional. \\\"master\\\" is used by default.\",\"type\":\"string\"},\"url\":{\"description\":\"URL of the git repo\",\"type\":\"string\"}},\"required\":[\"url\"],\"type\":\"object\"},\"strategy\":{\"description\":\"StrategyRef refers to the BuildStrategy to be used to build the container image. There are namespaced scope and cluster scope BuildStrategy\",\"properties\":{\"apiVersion\":{\"description\":\"API version of the referent\",\"type\":\"string\"},\"kind\":{\"description\":\"BuildStrategyKind indicates the kind of the buildstrategy, namespaced or cluster scoped.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"timeout\":{\"description\":\"Timeout defines the maximum run time of a build run.\",\"format\":\"duration\",\"type\":\"string\"}},\"required\":[\"output\",\"source\",\"strategy\"],\"type\":\"object\"},\"status\":{\"description\":\"BuildStatus defines the observed state of Build\",\"properties\":{\"message\":{\"description\":\"The message of the registered Build, either an error or succeed message\",\"type\":\"string\"},\"reason\":{\"description\":\"The reason of the registered Build, it's an one-word camelcase\",\"type\":\"string\"},\"registered\":{\"description\":\"The Register status of the Build\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"serve\x00\x00\x00fd\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"buildstrategies.build.dev\"},\"spec\":{\"group\":\"build.dev\",\"names\":{\"kind\":\"BuildStrategy\",\"listKind\":\"BuildStrategyList\",\"plural\":\"buildstrategies\",\"shortNames\":[\"bs\",\"bss\"],\"singular\":\"buildstrategy\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"BuildStrategy is the Schema representing a strategy in the namespace scope to build images from source code.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BuildStrategySpec defines the desired state of BuildStrategy\",\"properties\":{\"buildSteps\":{\"items\":{\"description\":\"BuildStep defines a partial step that needs to run in container for building the image.\",\"properties\":{\"args\":{\"description\":\"Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"command\":{\"description\":\"Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"env\":{\"description\":\"List of environment variables to set in the container. Cannot be updated.\",\"items\":{\"description\":\"EnvVar represents an environment variable present in a Container.\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable. Must be a C_IDENTIFIER.\",\"type\":\"string\"},\"value\":{\"description\":\"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\"type\":\"string\"},\"valueFrom\":{\"description\":\"Source for the environment variable's value. Cannot be used if value is not empty.\",\"properties\":{\"configMapKeyRef\":{\"description\":\"Selects a key of a ConfigMap.\",\"properties\":{\"key\":{\"description\":\"The key to select.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the C\x00\x00\x00gonfigMap or its key must be defined\",\"type\":\"boolean\"}},\"required\":[\"key\"],\"type\":\"object\"},\"fieldRef\":{\"description\":\"Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\",\"properties\":{\"apiVersion\":{\"description\":\"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\"type\":\"string\"},\"fieldPath\":{\"description\":\"Path of the field to select in the specified API version.\",\"type\":\"string\"}},\"required\":[\"fieldPath\"],\"type\":\"object\"},\"resourceFieldRef\":{\"description\":\"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\"properties\":{\"containerName\":{\"description\":\"Container name: required for volumes, optional for env vars\",\"type\":\"string\"},\"divisor\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\"pattern\":\"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\"x-kubernetes-int-or-string\":true},\"resource\":{\"description\":\"Required: resource to select\",\"type\":\"string\"}},\"required\":[\"resource\"],\"type\":\"object\"},\"secretKeyRef\":{\"description\":\"Selects a key of a secret in the pod's namespace\",\"properties\":{\"key\":{\"description\":\"The key of the secret to select from.  Must be a valid secret key.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the Secret or its key must be defined\",\"type\":\"boolean\"}},\"required\":[\"key\"],\"type\":\"object\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"envFrom\":{\"description\":\"List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.\",\"items\":{\"description\":\"EnvFromSource represents the source of a set of ConfigMaps\",\"properties\":{\"configMapRef\":{\"description\":\"The ConfigMap to select from\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the ConfigMap must be defined\",\"type\":\"boolean\"}},\"type\":\"object\"},\"prefix\":{\"description\":\"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\",\"type\":\"string\"},\"secretRef\":{\"description\":\"The Secret to select from\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the Secret must be defined\",\"type\":\"boolean\"}},\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"image\":{\"description\":\"Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.\",\"type\":\"string\"},\"imagePullPolicy\":{\"description\":\"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\",\"type\":\"string\"},\"lifecycle\":{\"description\":\"Actions that \x00\x00\x00hthe management system should take in response to container lifecycle events. Cannot be updated.\",\"properties\":{\"postStart\":{\"description\":\"PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"}},\"type\":\"object\"},\"preStop\":{\"description\":\"PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"\x00\x00\x00itype\":\"object\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"},\"livenessProbe\":{\"description\":\"Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"failureThreshold\":{\"description\":\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"initialDelaySeconds\":{\"description\":\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"},\"periodSeconds\":{\"description\":\"How ofte\x00\x00\x00jn (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"successThreshold\":{\"description\":\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"},\"timeoutSeconds\":{\"description\":\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"name\":{\"description\":\"Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.\",\"type\":\"string\"},\"ports\":{\"description\":\"List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\\"0.0.0.0\\\" address inside a container will be accessible from the network. Cannot be updated.\",\"items\":{\"description\":\"ContainerPort represents a network port in a single container.\",\"properties\":{\"containerPort\":{\"description\":\"Number of port to expose on the pod's IP address. This must be a valid port number, 0 \\u003c x \\u003c 65536.\",\"format\":\"int32\",\"type\":\"integer\"},\"hostIP\":{\"description\":\"What host IP to bind the external port to.\",\"type\":\"string\"},\"hostPort\":{\"description\":\"Number of port to expose on the host. If specified, this must be a valid port number, 0 \\u003c x \\u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\",\"format\":\"int32\",\"type\":\"integer\"},\"name\":{\"description\":\"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\",\"type\":\"string\"},\"protocol\":{\"default\":\"TCP\",\"description\":\"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \\\"TCP\\\".\",\"type\":\"string\"}},\"required\":[\"containerPort\"],\"type\":\"object\"},\"type\":\"array\",\"x-kubernetes-list-map-keys\":[\"containerPort\",\"protocol\"],\"x-kubernetes-list-type\":\"map\"},\"readinessProbe\":{\"description\":\"Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"failureThreshold\":{\"description\":\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to\x00\x00\x00k connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"initialDelaySeconds\":{\"description\":\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"},\"periodSeconds\":{\"description\":\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"successThreshold\":{\"description\":\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"},\"timeoutSeconds\":{\"description\":\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"resources\":{\"description\":\"Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\"properties\":{\"limits\":{\"additionalProperties\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\"x-kubernetes-int-or-string\":true},\"description\":\"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\"type\":\"object\"},\"requests\":{\"additionalProperties\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\"x-kubernetes-int-or-string\":true},\"description\":\"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\"type\":\"object\"}},\"type\":\"object\"},\"securityContext\":{\"description\":\"Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\",\"properties\":{\"allowPrivilegeEscalation\":{\"description\":\"AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls i\x00\x00\x00lf the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN\",\"type\":\"boolean\"},\"capabilities\":{\"description\":\"The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.\",\"properties\":{\"add\":{\"description\":\"Added capabilities\",\"items\":{\"description\":\"Capability represent POSIX capabilities type\",\"type\":\"string\"},\"type\":\"array\"},\"drop\":{\"description\":\"Removed capabilities\",\"items\":{\"description\":\"Capability represent POSIX capabilities type\",\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"privileged\":{\"description\":\"Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.\",\"type\":\"boolean\"},\"procMount\":{\"description\":\"procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.\",\"type\":\"string\"},\"readOnlyRootFilesystem\":{\"description\":\"Whether this container has a read-only root filesystem. Default is false.\",\"type\":\"boolean\"},\"runAsGroup\":{\"description\":\"The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"format\":\"int64\",\"type\":\"integer\"},\"runAsNonRoot\":{\"description\":\"Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"type\":\"boolean\"},\"runAsUser\":{\"description\":\"The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"format\":\"int64\",\"type\":\"integer\"},\"seLinuxOptions\":{\"description\":\"The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"properties\":{\"level\":{\"description\":\"Level is SELinux level label that applies to the container.\",\"type\":\"string\"},\"role\":{\"description\":\"Role is a SELinux role label that applies to the container.\",\"type\":\"string\"},\"type\":{\"description\":\"Type is a SELinux type label that applies to the container.\",\"type\":\"string\"},\"user\":{\"description\":\"User is a SELinux user label that applies to the container.\",\"type\":\"string\"}},\"type\":\"object\"},\"windowsOptions\":{\"description\":\"The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"properties\":{\"gmsaCredentialSpec\":{\"description\":\"GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.\",\"type\":\"string\"},\"gmsaCredentialSpecName\":{\"description\":\"GMSACredentialSpecName is the name of the GMSA credential spec to use.\",\"type\":\"string\"},\"runAsUserName\":{\"description\":\"The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the valu\x00\x00\x00me specified in SecurityContext takes precedence.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"startupProbe\":{\"description\":\"StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"failureThreshold\":{\"description\":\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"initialDelaySeconds\":{\"description\":\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"},\"periodSeconds\":{\"description\":\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"successThreshold\":{\"description\":\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"},\"timeoutSeconds\":{\"description\":\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"\x00\x00\x00n},\"stdin\":{\"description\":\"Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.\",\"type\":\"boolean\"},\"stdinOnce\":{\"description\":\"Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false\",\"type\":\"boolean\"},\"terminationMessagePath\":{\"description\":\"Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.\",\"type\":\"string\"},\"terminationMessagePolicy\":{\"description\":\"Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\",\"type\":\"string\"},\"tty\":{\"description\":\"Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.\",\"type\":\"boolean\"},\"volumeDevices\":{\"description\":\"volumeDevices is the list of block devices to be used by the container.\",\"items\":{\"description\":\"volumeDevice describes a mapping of a raw block device within a container.\",\"properties\":{\"devicePath\":{\"description\":\"devicePath is the path inside of the container that the device will be mapped to.\",\"type\":\"string\"},\"name\":{\"description\":\"name must match the name of a persistentVolumeClaim in the pod\",\"type\":\"string\"}},\"required\":[\"devicePath\",\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"volumeMounts\":{\"description\":\"Pod volumes to mount into the container's filesystem. Cannot be updated.\",\"items\":{\"description\":\"VolumeMount describes a mounting of a Volume within a container.\",\"properties\":{\"mountPath\":{\"description\":\"Path within the container at which the volume should be mounted.  Must not contain ':'.\",\"type\":\"string\"},\"mountPropagation\":{\"description\":\"mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.\",\"type\":\"string\"},\"name\":{\"description\":\"This must match the Name of a Volume.\",\"type\":\"string\"},\"readOnly\":{\"description\":\"Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.\",\"type\":\"boolean\"},\"subPath\":{\"description\":\"Path within the volume from which the container's volume should be mounted. Defaults to \\\"\\\" (volume's root).\",\"type\":\"string\"},\"subPathExpr\":{\"description\":\"Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\\"\\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.\",\"type\":\"string\"}},\"required\":[\"mountPath\",\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"workingDir\":{\"description\":\"Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\x00\x00\x00o\"type\":\"array\"}},\"type\":\"object\"},\"status\":{\"description\":\"BuildStrategyStatus defines the observed state of BuildStrategy\",\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"name\":\"clusterbuildstrategies.build.dev\"},\"spec\":{\"group\":\"build.dev\",\"names\":{\"kind\":\"ClusterBuildStrategy\",\"listKind\":\"ClusterBuildStrategyList\",\"plural\":\"clusterbuildstrategies\",\"shortNames\":[\"cbs\",\"cbss\"],\"singular\":\"clusterbuildstrategy\"},\"scope\":\"Cluster\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ClusterBuildStrategy is the Schema representing a strategy in the cluster scope to build images from source code.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BuildStrategySpec defines the desired state of BuildStrategy\",\"properties\":{\"buildSteps\":{\"items\":{\"description\":\"BuildStep defines a partial step that needs to run in container for building the image.\",\"properties\":{\"args\":{\"description\":\"Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"command\":{\"description\":\"Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"env\":{\"description\":\"List of environment variables to set in the container. Cannot be updated.\",\"items\":{\"description\":\"EnvVar represents an environment variable present in a Container.\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable. Must be a C_IDENTIFIER.\",\"type\":\"string\"},\"value\":{\"description\":\"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\"type\":\"string\"},\"valueFrom\":{\"description\":\"Source for the environment variable's value. Cannot be used if value is not empty.\",\"properties\":{\"configMapKeyRef\":{\"description\":\"Selects a key of a ConfigMap.\",\"properties\":{\"key\":{\"description\":\"The key to select.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More \x00\x00\x00pinfo: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the ConfigMap or its key must be defined\",\"type\":\"boolean\"}},\"required\":[\"key\"],\"type\":\"object\"},\"fieldRef\":{\"description\":\"Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\",\"properties\":{\"apiVersion\":{\"description\":\"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\"type\":\"string\"},\"fieldPath\":{\"description\":\"Path of the field to select in the specified API version.\",\"type\":\"string\"}},\"required\":[\"fieldPath\"],\"type\":\"object\"},\"resourceFieldRef\":{\"description\":\"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\"properties\":{\"containerName\":{\"description\":\"Container name: required for volumes, optional for env vars\",\"type\":\"string\"},\"divisor\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\"pattern\":\"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\"x-kubernetes-int-or-string\":true},\"resource\":{\"description\":\"Required: resource to select\",\"type\":\"string\"}},\"required\":[\"resource\"],\"type\":\"object\"},\"secretKeyRef\":{\"description\":\"Selects a key of a secret in the pod's namespace\",\"properties\":{\"key\":{\"description\":\"The key of the secret to select from.  Must be a valid secret key.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the Secret or its key must be defined\",\"type\":\"boolean\"}},\"required\":[\"key\"],\"type\":\"object\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"envFrom\":{\"description\":\"List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.\",\"items\":{\"description\":\"EnvFromSource represents the source of a set of ConfigMaps\",\"properties\":{\"configMapRef\":{\"description\":\"The ConfigMap to select from\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the ConfigMap must be defined\",\"type\":\"boolean\"}},\"type\":\"object\"},\"prefix\":{\"description\":\"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\",\"type\":\"string\"},\"secretRef\":{\"description\":\"The Secret to select from\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"},\"optional\":{\"description\":\"Specify whether the Secret must be defined\",\"type\":\"boolean\"}},\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"image\":{\"description\":\"Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.\",\"type\":\"string\"},\"imagePullPolicy\":{\"description\":\"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest\x00\x00\x00q tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\",\"type\":\"string\"},\"lifecycle\":{\"description\":\"Actions that the management system should take in response to container lifecycle events. Cannot be updated.\",\"properties\":{\"postStart\":{\"description\":\"PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"}},\"type\":\"object\"},\"preStop\":{\"description\":\"PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructio\x00\x00\x00rns ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"},\"livenessProbe\":{\"description\":\"Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"failureThreshold\":{\"description\":\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"initialDelaySeconds\":{\"description\":\"Number of seconds after the container has started be\x00\x00\x00sfore liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"},\"periodSeconds\":{\"description\":\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"successThreshold\":{\"description\":\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"},\"timeoutSeconds\":{\"description\":\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"name\":{\"description\":\"Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.\",\"type\":\"string\"},\"ports\":{\"description\":\"List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\\"0.0.0.0\\\" address inside a container will be accessible from the network. Cannot be updated.\",\"items\":{\"description\":\"ContainerPort represents a network port in a single container.\",\"properties\":{\"containerPort\":{\"description\":\"Number of port to expose on the pod's IP address. This must be a valid port number, 0 \\u003c x \\u003c 65536.\",\"format\":\"int32\",\"type\":\"integer\"},\"hostIP\":{\"description\":\"What host IP to bind the external port to.\",\"type\":\"string\"},\"hostPort\":{\"description\":\"Number of port to expose on the host. If specified, this must be a valid port number, 0 \\u003c x \\u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\",\"format\":\"int32\",\"type\":\"integer\"},\"name\":{\"description\":\"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\",\"type\":\"string\"},\"protocol\":{\"default\":\"TCP\",\"description\":\"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \\\"TCP\\\".\",\"type\":\"string\"}},\"required\":[\"containerPort\"],\"type\":\"object\"},\"type\":\"array\",\"x-kubernetes-list-map-keys\":[\"containerPort\",\"protocol\"],\"x-kubernetes-list-type\":\"map\"},\"readinessProbe\":{\"description\":\"Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"failureThreshold\":{\"description\":\"Minimum consecutive failures for the probe to be considered failed after having \x00\x00\x00tsucceeded. Defaults to 3. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"initialDelaySeconds\":{\"description\":\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"},\"periodSeconds\":{\"description\":\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"successThreshold\":{\"description\":\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"},\"timeoutSeconds\":{\"description\":\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"resources\":{\"description\":\"Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\"properties\":{\"limits\":{\"additionalProperties\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\"x-kubernetes-int-or-string\":true},\"description\":\"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\"type\":\"object\"},\"requests\":{\"additionalProperties\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"pattern\":\"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\"x-kubernetes-int-or-string\":true},\"description\":\"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\"type\":\"object\"}},\"type\":\"object\"},\"securityContext\":{\"description\":\"Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/se\x00\x00\x00ucurity-context/\",\"properties\":{\"allowPrivilegeEscalation\":{\"description\":\"AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN\",\"type\":\"boolean\"},\"capabilities\":{\"description\":\"The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.\",\"properties\":{\"add\":{\"description\":\"Added capabilities\",\"items\":{\"description\":\"Capability represent POSIX capabilities type\",\"type\":\"string\"},\"type\":\"array\"},\"drop\":{\"description\":\"Removed capabilities\",\"items\":{\"description\":\"Capability represent POSIX capabilities type\",\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"privileged\":{\"description\":\"Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.\",\"type\":\"boolean\"},\"procMount\":{\"description\":\"procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.\",\"type\":\"string\"},\"readOnlyRootFilesystem\":{\"description\":\"Whether this container has a read-only root filesystem. Default is false.\",\"type\":\"boolean\"},\"runAsGroup\":{\"description\":\"The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"format\":\"int64\",\"type\":\"integer\"},\"runAsNonRoot\":{\"description\":\"Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"type\":\"boolean\"},\"runAsUser\":{\"description\":\"The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"format\":\"int64\",\"type\":\"integer\"},\"seLinuxOptions\":{\"description\":\"The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"properties\":{\"level\":{\"description\":\"Level is SELinux level label that applies to the container.\",\"type\":\"string\"},\"role\":{\"description\":\"Role is a SELinux role label that applies to the container.\",\"type\":\"string\"},\"type\":{\"description\":\"Type is a SELinux type label that applies to the container.\",\"type\":\"string\"},\"user\":{\"description\":\"User is a SELinux user label that applies to the container.\",\"type\":\"string\"}},\"type\":\"object\"},\"windowsOptions\":{\"description\":\"The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"properties\":{\"gmsaCredentialSpec\":{\"description\":\"GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.\",\"type\":\"string\"},\"gmsaCredentialSpecName\":{\"description\":\"GMSACredentialSpecName is the name of the GMSA credential spec to use.\",\"type\":\"string\"},\"runAsUserName\":{\"description\":\"The UserName in Windows to run the\x00\x00\x00v entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"startupProbe\":{\"description\":\"StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"properties\":{\"exec\":{\"description\":\"One and only one of the following should be specified. Exec specifies the action to take.\",\"properties\":{\"command\":{\"description\":\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"failureThreshold\":{\"description\":\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"httpGet\":{\"description\":\"HTTPGet specifies the http request to perform.\",\"properties\":{\"host\":{\"description\":\"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\"type\":\"string\"},\"httpHeaders\":{\"description\":\"Custom headers to set in the request. HTTP allows repeated headers.\",\"items\":{\"description\":\"HTTPHeader describes a custom header to be used in HTTP probes\",\"properties\":{\"name\":{\"description\":\"The header field name\",\"type\":\"string\"},\"value\":{\"description\":\"The header field value\",\"type\":\"string\"}},\"required\":[\"name\",\"value\"],\"type\":\"object\"},\"type\":\"array\"},\"path\":{\"description\":\"Path to access on the HTTP server.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true},\"scheme\":{\"description\":\"Scheme to use for connecting to the host. Defaults to HTTP.\",\"type\":\"string\"}},\"required\":[\"port\"],\"type\":\"object\"},\"initialDelaySeconds\":{\"description\":\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"},\"periodSeconds\":{\"description\":\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"successThreshold\":{\"description\":\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\"format\":\"int32\",\"type\":\"integer\"},\"tcpSocket\":{\"description\":\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\"properties\":{\"host\":{\"description\":\"Optional: Host name to connect to, defaults to the pod IP.\",\"type\":\"string\"},\"port\":{\"anyOf\":[{\"type\":\"integer\"},{\"type\":\"string\"}],\"description\":\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\"x-kubernetes-int-or-string\":true}},\"required\":[\"port\"],\"type\":\"object\"},\"timeoutSeconds\":{\"description\":\"Number of seconds after which the\x00\x00\x00w probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\"format\":\"int32\",\"type\":\"integer\"}},\"type\":\"object\"},\"stdin\":{\"description\":\"Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.\",\"type\":\"boolean\"},\"stdinOnce\":{\"description\":\"Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false\",\"type\":\"boolean\"},\"terminationMessagePath\":{\"description\":\"Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.\",\"type\":\"string\"},\"terminationMessagePolicy\":{\"description\":\"Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\",\"type\":\"string\"},\"tty\":{\"description\":\"Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.\",\"type\":\"boolean\"},\"volumeDevices\":{\"description\":\"volumeDevices is the list of block devices to be used by the container.\",\"items\":{\"description\":\"volumeDevice describes a mapping of a raw block device within a container.\",\"properties\":{\"devicePath\":{\"description\":\"devicePath is the path inside of the container that the device will be mapped to.\",\"type\":\"string\"},\"name\":{\"description\":\"name must match the name of a persistentVolumeClaim in the pod\",\"type\":\"string\"}},\"required\":[\"devicePath\",\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"volumeMounts\":{\"description\":\"Pod volumes to mount into the container's filesystem. Cannot be updated.\",\"items\":{\"description\":\"VolumeMount describes a mounting of a Volume within a container.\",\"properties\":{\"mountPath\":{\"description\":\"Path within the container at which the volume should be mounted.  Must not contain ':'.\",\"type\":\"string\"},\"mountPropagation\":{\"description\":\"mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.\",\"type\":\"string\"},\"name\":{\"description\":\"This must match the Name of a Volume.\",\"type\":\"string\"},\"readOnly\":{\"description\":\"Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.\",\"type\":\"boolean\"},\"subPath\":{\"description\":\"Path within the volume from which the container's volume should be mounted. Defaults to \\\"\\\" (volume's root).\",\"type\":\"string\"},\"subPathExpr\":{\"description\":\"Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\\"\\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.\",\"type\":\"string\"}},\"required\":[\"mountPath\",\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"workingDir\":{\"description\":\"Container's wor\x00\x00\x00xking directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"status\":{\"description\":\"BuildStrategyStatus defines the observed state of BuildStrategy\",\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"BuildStrategy\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildpacks-v3-heroku\\\"},\\\"spec\\\":{\\\"buildSteps\\\":[{\\\"name\\\":\\\"step-prepare\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":0,\\\"capabilities\\\":{\\\"add\\\":[\\\"CHOWN\\\"]}},\\\"command\\\":[\\\"/bin/bash\\\"],\\\"args\\\":[\\\"-c\\\",\\\"chown -R \\\\\\\"1000:1000\\\\\\\" \\\\\\\"/workspace/source\\\\\\\" \\u0026\\u0026 chown -R \\\\\\\"1000:1000\\\\\\\" \\\\\\\"/tekton/home\\\\\\\"\\\\n\\\"]},{\\\"name\\\":\\\"step-detect\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":1000},\\\"command\\\":[\\\"/cnb/lifecycle/detector\\\"],\\\"args\\\":[\\\"-app=/workspace/source/$(build.source.contextDir)\\\",\\\"-group=/layers/group.toml\\\",\\\"-plan=/layers/plan.toml\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]},{\\\"name\\\":\\\"step-restore\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":1000},\\\"command\\\":[\\\"/cnb/lifecycle/restorer\\\"],\\\"args\\\":[\\\"-layers=/layers\\\",\\\"-cache-dir=/cache\\\",\\\"-group=/layers/group.toml\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"cache-dir\\\",\\\"mountPath\\\":\\\"/cache\\\"},{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]},{\\\"name\\\":\\\"step-build\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":1000},\\\"command\\\":[\\\"/cnb/lifecycle/builder\\\"],\\\"args\\\":[\\\"-app=/workspace/source/$(build.source.contextDir)\\\",\\\"-layers=/layers\\\",\\\"-group=/layers/group.toml\\\",\\\"-plan=/layers/plan.toml\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]},{\\\"name\\\":\\\"step-export\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":0},\\\"command\\\":[\\\"/cnb/lifecycle/exporter\\\"],\\\"args\\\":[\\\"-app=/workspace/source/$(build.source.contextDir)\\\",\\\"-layers=/layers\\\",\\\"-cache-dir=/cache\\\",\\\"-group=/layers/group.toml\\\",\\\"$(build.output.image)\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"cache-dir\\\",\\\"mountPath\\\":\\\"/cache\\\"},{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]}]}},{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"ClusterBuildStrategy\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildah\\\"},\\\"spec\\\":{\\\"buildSteps\\\":[{\\\"name\\\":\\\"step-buildah-bud\\\",\\\"image\\\":\\\"quay.io/buildah/stable:latest\\\",\\\"workingDir\\\":\\\"/workspace/source\\\",\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"command\\\":[\\\"/usr/bin/buildah\\\"],\\\"args\\\":[\\\"bud\\\",\\\"--tag=$(build.output.image)\\\",\\\"--file=$(build.dockerfile)\\\",\\\"$(build.source.contextDir)\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"buildah-images\\\",\\\"mountPath\\\":\\\"/var/lib/containers/storage\\\"}]},{\\\"name\\\":\\\"step-buildah-push\\\",\\\"image\\\":\\\"quay.io/buildah/stable:latest\\\",\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"command\\\":[\\\"/usr/bin/buildah\\\"],\\\"args\\\":[\\\"push\\\",\\\"--tls-verify=false\\\",\\\"docker://$(build.output.image)\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"buildah-images\\\",\\\"mountPath\\\":\\\"/var/lib/containers/storage\\\"}]}]}},{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"Build\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildah-golang-build\\\"},\\\"spec\\\":{\\\"source\\\":{\\\"url\\\":\\\"https://github.com/sbose78/taxi\\\",\\\"revision\\\":\\\"master\\\"},\\\"strategy\\\":{\\\"name\\\":\\\"buildah\\\",\\\"kind\\\":\\\"ClusterBuildStrategy\\\"},\\\"dockerfile\\\":\\\"Dockerfile\\\",\\\"output\\\":{\\\"image\\\":\\\"image-registry.openshift-image-registry.svc:5000/build-examples/taxi-app\\\"}}},{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"BuildRun\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildah-golang-buildrun\\\"},\\\"spec\\\":{\\\"buildRef\\\":{\\\"name\\\":\\\"buildah-golang-build\\\"},\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"1\\\",\\\"memory\\\":\\\"1Gi\\\"}}}}]\",\"capabilities\":\"Basic Install\",\"categories\":\"Developer Tools, OpenShift Optional\",\"containerImage\":\"quay.io/sh\x00\x00\x00yipwright/shipwright-operator:v0.3.0\",\"createdAt\":\"2020-10-03T17:44:55Z\",\"description\":\"Build lean container images of your application on Kubernetes using buildah, s2i, buildpacks, kaniko, and more\",\"repository\":\"https://github.com/shipwright-io/build\"},\"name\":\"buildv2-operator.v0.3.0\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"BuildRun is the Schema representing an instance of build execution\",\"kind\":\"BuildRun\",\"name\":\"buildruns.build.dev\",\"statusDescriptors\":[{\"description\":\"Indicates if the build execution was successful.\",\"displayName\":\"Succeeded\",\"path\":\"succeeded\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]},{\"description\":\"Indicates the reason for build execution failure.\",\"displayName\":\"Reason\",\"path\":\"reason\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]}],\"version\":\"v1alpha1\"},{\"description\":\"Build is the Schema representing a Build definition\",\"kind\":\"Build\",\"name\":\"builds.build.dev\",\"statusDescriptors\":[{\"description\":\"Indicates if the build registration was successful.\",\"displayName\":\"Reason\",\"path\":\"reason\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]},{\"description\":\"Indicates the reason for Build Registration failure\",\"displayName\":\"Registered\",\"path\":\"registered\",\"x-descriptors\":[\"urn:alm:descriptor:text\"]}],\"version\":\"v1alpha1\"},{\"description\":\"BuildStrategy is the Schema representing a strategy in the namespace scope to build images from source code.\",\"kind\":\"BuildStrategy\",\"name\":\"buildstrategies.build.dev\",\"version\":\"v1alpha1\"},{\"description\":\"ClusterBuildStrategy is the Schema representing a strategy in the cluster scope to build images from source code.\",\"kind\":\"ClusterBuildStrategy\",\"name\":\"clusterbuildstrategies.build.dev\",\"version\":\"v1alpha1\"}],\"required\":[{\"description\":\"Represents Installation of Tekton.\",\"displayName\":\"OpenShift Pipelines Config\",\"kind\":\"TektonConfig\",\"name\":\"tektonconfigs.operator.tekton.dev\",\"version\":\"v1alpha1\"}]},\"description\":\"\\n## Getting Started\\nThe Shipwright Build Project enables developers to build images using diverse Build Strageties, namely, source-to-image,\\nbuildpacks-v3, Kaniko \\u0026 Buildah.\\n\\n### Installing Build strategies\\n\\nThe administrator may choose to install one of more build strategies in the cluster-scope or the namespace scope.\\n\\n#### Buildah \\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/buildah/buildstrategy_buildah_cr.yaml\\n```\\n#### Buildpacks-v3 \\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/buildpacks-v3/buildstrategy_buildpacks-v3_cr.yaml\\n```\\n#### Kaniko \\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/kaniko/buildstrategy_kaniko_cr.yaml\\n```\\n#### Source-to-Image (s2i)\\n```\\nkubectl apply  -f https://raw.githubusercontent.com/redhat-developer/build/v0.3.0/samples/buildstrategy/source-to-image/buildstrategy_source-to-image_cr.yaml\\n```\\n\\n### Build an image from source code\\n\\n\\n#### Configure a namespace-scoped Build.\\n```\\n  apiVersion: build.dev/v1alpha1\\n  kind: Build\\n  metadata:\\n    name: buildah-golang-build\\n  spec:\\n    source:\\n      url: https://github.com/sbose78/taxi\\n      revision: master\\n    strategy:\\n      name: buildah\\n      kind: ClusterBuildStrategy\\n    dockerfile: Dockerfile\\n    output:\\n      image: image-registry.openshift-image-registry.svc:5000/build-examples/taxi-app\\n```\\n### Trigger a build by creating a `BuildRun`\\n```\\n---\\n  apiVersion: build.dev/v1alpha1\\n  kind: BuildRun\\n  metadata:\\n    name: buildah-golang-buildrun\\n  spec:\\n    buildRef:\\n      name: buildah-golang-build\\n    resources:\\n      limits:\\n        cpu: \\\"1\\\"\\n        memory: \\\"1Gi\\\"\\n```\\n\",\"displayName\":\"Shipwright Build\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAtAAAAINCAYAAAAX90htAAAACXBIWXMAAC3cAAAt3AE8680MAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJzs3XmYVFedN/DvubV09b7v+97Q7DtkM6vRxGiiQU2IY8Z5zcxo8iaZ6KsBnHo10XGMNKJxBmfGKDTkFTVO3MYkJpAEQiBsz\x00\x00\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\x00\x00\x00{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\x00\x00\x00|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\x00\x00\x00}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\x00\x00\x00~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\x00\x00\x00\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\x00\x00\x00\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\x00\x00\x00\x81Mi55yacDkNEA2MDTZQlamtrjVjFtM8ZilsVOt3pPERkDwWaDcjtayd4fsXGmSg7sIEmyjLvNtKi5u2A+J3OQ0RJ2yyQJa7I+F/X1p4SdzoMEQ0eG2iiLPWN++7zjOkqOV9NqYVgqtN5iGjQtkD1xxH3vp/ds2hRj9NhiGjo2EATZbna2uUFCV/sywq9CcB4p/MQ0UB0N8T4sbu19+7a2ou7nU5DRMljA02UIy5btqywIjHiSyr6PSjGOp2HiPbbA5EfdZieZUuvPLfL6TBEZB0baKIcc9UP7y8tcsnXIHIdgNFO5yHKY3sB/YnbJXfWLrow6nQYIrIPG2iiHHXN95f73EW9i0WxGMBwp/MQ5ZG9AJb29vYs+8E1X21zOgwR2Y8NNFGOq713eVm8p+erMORabu0gSqk9gN4b6ylcese150acDkNEqcMGmihPHLC149vgw4ZEdnoHIne6i9vvqb3kkk6nwxBR6rGBJsoz+x82hN4IYKLTeYiy2C6ILOXDgUT5hw00UZ6qrV1ekKjoOU8V3+WBLERDsgmqS93R+H0cR0eUn9hAE+W5/QeyqNwAYJrTeYgylQLNonoXD0AhIjbQRATgwCPC9RYAM5zOQ5QpFGgyIHfwyG0iehcbaCI6yAGN9PcAHO10HiIHNYroD9aOL3zokXPPTTgdhogyBxtoIjqk2tpaI+adfoaIeROAeU7nIUqjBhH9ERtnIhoIG2giOjxVuX7p784UMW8EcLzTcYhSqF5FlixZfMEfIaJOhyGizMUGmogG7YalD50G0Vug+JDTWYhstFLVuH3JFec/xcaZiAaDDTQRDdn1dz98kpj6PUBPdToLkQWvqBp3LLnygiedDkJE2YUNNBEl7fq7Hz5JEuY1EJzpdBaiIXgFkNpbr1j4d6eDEFF2YgNNRJb1rUibNwL4uNNZiAaiwDMGjFtuueKClU5nIaLsxgaaiGxz3dKH5hjQKwFcAMDldB4iACYUf1HILUuuXPgvp8MQUW5gA01Etrth2e/9Eo8vUgPfgKLI6TyUl3oB/CGRMG67/aoL1jodhohyCxtoIkqZ2h/8Zmzc474ckMsAlDidh/JChyh+ZarrR0u+df4Wp8MQUW5iA01EKVf7o4dHxl2JS/sb6eFO56GcFAX0fxMe84e3X/qlvU6HIaLcxgaaiNKm9t7lZfGenq9C5GoAE5zOQzlhF6A/i/UULr3j2nMjTochovzABpqI0q62dnlBoqLnPKhxvUKnO52Hso8CTaK6zB2N31dbe3G303mIKL+wgSYix9TW1hox7/QzRPS7gB7ndB7KCvUieufa8YUPPXLuuQmnwxBRfmIDTUQZ4YalD50GaC2ADzudhTJS36mBPG6biDIAG2giyigHnG54Bvg9Kt8pFE+rS29fsviLrzodhojoXXxzIqKMdN1dDwcMNa8CcD4At9N5KK1MKP4iLqm9ZfHCOqfDEBG9FxtoIspoN9xz/1SJGZfzUJZ8oD2ALIcht9y6eOEGp9MQEQ2EDTQRZYXr7np4jKGJbwJyOQCf03nIVm2i+I3L47qj9rLztzsdhojoSNhAE1FWqV32oDduyjehejWAEU7nISt0N4CfxguNu7//3wv3OZ2GiGiw2EATUVa6bNmywgpz2BdU5ToAM5zOQ0OhYSjucZd2/qL2kks6nU5DRDRUbKCJKKvtnyUN81oITnQ6Dx3WKypy9/rxnsc4w5mIshkbaCLKGTfe/dA8NXUxgAsAuJzOQwDenaghxm23XHHBSqfDEBHZgQ00EeWcG5b93i/x+CIVfA1AidN58lS7Qh82TfPHt3/rS+udDkNEZCc20ESUs76zbPkolxn7ClQXARjvdJ48sQvQnyU85j23X/qlvU6HISJKBTbQRJTzDnjg8FoARzudJ0dtgOq9HSj8+dIrz+1yOgwRUSqxgSaivLH/gUMxFwE4zek8OeIVVeOOJVec/xRE1OkwRETpwAaaiPLSdUsfONboO5SFR4UPXd+DgYZ56y2XX/S602GIiNKNDTQR5bX9R4ULvgqg1Ok8Ga7vxECX+ePaxRdtdjoMEZFT2EATEaH/hMO4XgyRqwBMdDpPRhHshOp9PDGQiKgPG2giogPU1i4vSFT0nKcqVwOY7XQeh9UL5Ketrr2/vWfRoh6nwxARZQo20EREh6Iq19310CcFWCzAx5E/3y9NAE8ZBpbdvPjC550OQ0SUifLlDYGIKGm1dz5QFRd8DZBLAFQ4nSdFogr9vZlwLb39qgvWOh2GiCiTsYEmIhqkb9/xq/LCgqLzFXo5cmSetEDWq5o/dRcW/qr2f85tdzoPEVE2YANNRDREtbW1Rtw37VSoLobgDGTf91ITwAuqxjLObyYiGrps+6ZPRJRRblh6/9GAXAbIhQDKnc5zBPsE8hsXcG/tFQubnA5DRJSt2EATEdlg//YOMf8LKnOdzvMedQL5eVc88dCPrr6ow+kwRETZjg00EZHNbrz7oXmmaX5DIAvh3OEsbQr9ncL439uuWLjaoQxERDmJDTQRUYrULnvQm0jIeQr9bwA1abpsnUB+7irwPMyHAomIUoMNNBFRGty49MEPK3QhIAsAjLS5/A4B/pCAPnDbFV980+baRET0HmygiYjSaMHy5a4Z22KnAHoRgLOR/IOHnQI8barxgCc67pna2lPiNsYkIqLDYANNROSQq354f2mxy/iMiiwA9OMASo7wkjYAz6rIck9r75O1tRd3pyEmERG9BxtoIqIMcMWdy4tLjd6PQvU4QKYAKBcVNUXbIBIWU/8Vcbf8455Fi3qcTUpERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERElBqSssrz57vLm/dWGW6ZDVOqVHScKsaLYByAIgBlADwHvCIGoF2hbSKyHYrdCmwDdIOKe317YW8IjY29KctLREREh1U+c+YIjXtmi2KqCKZCZSqAceh7Ty8E4Ov/VAXQCqAbQBcE70ClSdVsUgNNpsu9oXPdqu3O/C6IrLOtgR4/fl5JR0n8JBPmKWLKKRDMQd8Xk13iKtIINV+D4nXD0JcioTVhG+sfkq8qcKxCrrRUxNQ3ok3Bu2yKlDRfZeCXakiRlRpRn/ti1NXFrNTwVlZfAMM43UoNqD4YDQf/aqVEyeR549zu+N2WcliipkIiAADBPjG1S0S3q7q2Gxrb2qod69Dc3J3ORF5/4CJAzrRap8Dd/dU969a12ZEpWWVVNbMMxU3Jvl6h/24LB39oZ6ZkeP3VlwLGyUkXEF0RDQV/esTrVFb/GGJMSvo6Folq1BRJiJrtKtItwC5TZatIYic88XVta9fudSrbQHyVNdeqgdlWapgwbmsPrXrLrkx2880ITEVcPq7QEwB8CMAMu2oLsE2BlwF9xWXqS/s2rmlAX+Oddt7K6tNhGBdYKqL6VDQc/L1NkZLiO6p6mBYY91gqoro3Gg4uPtKnef2B30LEZelaWcxt6dXz5nnK98U/IYae366xs6AoE0iq1rXdoloDSA0El6gKvP7AegDPCPBEJBxcAcC0+6ImdJIoFlqpISKlABxvoFVwPlRLLBXZVfB19N0tsGIeVC39N4VoHQBLDbTLFS8HdIGlHBbJu+8VCkAAhQBiwhQXvPAmUBXYANUgIK+YIs+3h+obUxtIdkGt/zeJxYseBfAHGxIlTYAvWvnzFeBjmDXrbofvfBmAfAfQ8UlXMPH4oD5P5BOAzkr6Ohap9H89iOx/CzFEARhArABef2A7gAZA/2WI64VWtK9EKNTjVF4AUNHToPiolRouQDx2FQAAIABJREFUJH4NIKMa6PIp1TMNl\x00\x00\x00\x823xOgXM0jmNT1dMqMAHAeYCclzAEXn9gk4r83p1IPLxv45pgSi46UBaRY8Ti+5IA2wE42kD3FhklnoS134cCWwEcsYEGsBCqbKCHYuSMGeW9iYKvoTV2OQRHOfPzIgBgOoDpCiwu9we2QuQhxM3/a2tuWOtYIiL7uKCYCchMAOcaqvD6q3dAjcdUEg+3hdeshM3vbFGf+wVvJNYCxXArdRT6WTjdQKt+3mKJCm+P+5Qo8KwtgZJQPjXwYQDJN89Aj9softquPA4b3/chnzDVvNGLkk74A38XkYci3SVPYuvKLqcDZrX5892+rS1nw8RlKjjZobf1yaJ6TcIwrvH5A2ug+GnE6Py10z8oER2KMaTPnj/f7a0K/HdvvHAjVO4EcFRqYg2dABNF9RpxyVveysATZdOqk7/lSZSxZBxE/0dgvOL116z3+qsvHT9+nrW7Cgeqq4sJ9M82VDoDU6ZY2i5khbdyzvEA/FbrqOIcG+IkTQx8zmKJZ1tCr0dtCZN5SgCcpap/8Ba27/T6q5dVTJ072elQWaeqqtBbVX2Fd0tLkyoeUUFGvHcqMFsFP/Vq8cZyf823Rs2aVeZ0JqIDDbqBrqiqmevb0vImFPcCGJHCTFYJBJ82TPmHzx9Y4fNXz3M6EFFqaBUg97QXx5rL/dXfxqxZBbZUNfFHG8qUlbu9H7OhTlJETFu25gj0bGCBU7coBcBnLdZ41I4gmU+8gFxmGokNXn/gt8OrAhOdTpQFxOsPnOc1S97uXxBzbP/74ck4gf6op9vVVO4PfAmpHH5ANASDaqC9lYHFpupKBapTHchOCnxEIf/yVtbc6XQWohQaJZA7vN2uBm9VzSesFosOK3gOwD6rdUTFsdVbheWV23eNLqtae5JNtYak3D/7BFi7yxeTmD5pV54s4QFwUVzxtq+y+hrMm+c54ivyUNm02Ud7/YFXAfwOgqlO5xmkUQL8X7k/8Ly3cs40p8MQHaGBXuDy+gP/C8FdsHeiRjoZaoDj7ygfTIfqX8v9Nfehqir5r9e+KSs2NF56thMNjHdqzQcAVNpVz3DoBwFRsfpDwN8jmxss/yCUpcpU5Pve1tirvqrZlrfy5BDDW1V9hcs06tA3USPrCHAKxAx6/TWXOZ2F8tvADfT8+W6ff+0jAP4rfXFSwjSQ+IXTIYjSRaDf8GrJK8XTayYkW0PFllv/Fb59vR+xoc6QiGHvZBXpW81O921jgVhroG36M8x2x6kab3j91Z9yOojTyqfPG1nuDzwHlTsVKHY6j0VFgC7zVVX/2tJiAZEFAzbQ3s0tdyvE6v67TPBcOuZFE2WYeZ6EvpLsrc42dD4LqOWHz9RI++qtKGB1+sZBFJjgnVpzvJ01j6T/elYeiIsrXE/YlSfLVQDyRP/+2bxUPqV6piRirwlwqtNZ7KQqF3vNkn+UzJhrZVINUVIO2UB7KwOLIfjvdIdJBYXc53QGIodMhiT+4ZsRGPoex1CoByJPWU7QN8ViaNN+LPBWBT4IYIrddW2YhjHE61kcwSfyYnto1W6b4uQCtwC/9lZWW5s/n4V8/sCp4pKVsGEqTUYSfNAdT6xgE03p9r43trKquceI4HYnwthPd7RVuK03AURZS8ZpHE/7jqoeNtRXqood0zjGlPvnnGBDncExU3MwjtpwuMyQrgdr4/NEuX3jEAyI/KbCX3OK00HSxecPnArgKQAVTmdJsWnueOLF0imzxjodhPLH+xpoQxM/z4H9UX1Efm712GmiHHC0euRBDHEfb1si8gwAy8dxiybStY3D8r7hw1SeOmzq7EBKar9H/+hNK6uFZjwRt2OWdy7ymNBHrDwfkC3KK2tOUsUTOfN+fmTTDZfrWSfnz1N+OaiBLq8KnAXgwym+ZhuAJihWA3gFwN8BrATwJvqOwUzYdJ24G/ilTbWIst3pPn/114b0iubmbgB/sXxlkXOQhofw+se+pewgjYQrRc35e5gWp28o9KWO5sadduXJQSM8Jn6DHJ4nPGzq7ICI+TQEpU5nSSPTUPys//sWUcoddJS3ANfbfQEB1ij0cYjxipEw1rZuXLXp8K9Y4KqYsmFSwtDZBjBboSdCcBKAod6CfrolFNyabG6iXKPAj0pmzH26c92q7YN9jYg+qipfsHjpKb6qwNxIKPimxTqHJWIssPdg8/fU7xtnd1PqrtB/HbG4fSNvDk+xQPVj3qqaC6Oh+gecjmK3iilzKhKG+RgAbxov2y7ARlU0AxpRMToBwFB1qYhXoKMBVCmQqpX/XoFcFGmq/0OK6hO9z/4GumLanDmmaX7ArsICfTwB+W57OLhmaK98JNHajGYAzejbuwUAhq9y9rEqcpZAzh7kgS4/G9p1iZKySaBJrRgmBGUC8QnEp6pjBDgWwDwA05CS1THxumOJ6wH8z2BfUdpZ8HR7UazD6kqWqnwWfXeZUkWQ4mO3FZhdPqV6Zltzw9pUXaNi6qwaE5hhoYQZd7sfsy3QEIlgAVQ3DvV1JrRQID5AfBAMh4lZMHAcFDVI1RkEqjdj1qw/oLExl84JMEzDvB+pf2Bwr4g+oSoroMbKaNPqDYN50cgZM8p7E0UnqqkfMQRn2nI4m6IDhnwuEqp/1nItGhIRfACqKbmTo5CvweIYZQV+YUBTNkhifwOtpmnX08n7xDS/ENm45jmb6gGAGWla8waANwB8t7Syutol8lUACwGMPMTnN0XDwb/ZeH2igXRHwg11dhYsq5o7ykD8Qii+BsgxdtaG4GsVU+f+4Mh3gvps317XWV4V+Kuo1SkUugDAjdZqDKzcP+dEwLRyat+gGG75LJC6h6xNw/15WFtGf3UodxjslhCzsT205m3bCs6aVVDW5T7TEP0agI8DsPNY9SneHtfXosBPbazpqHJ/zRWAfjpF5U0AfwX0J9FJI57DihXxoRbYs25dG4Bn+z+uq6iqmWsqvgLoVwCUDDmRoAWCM6Kh+teG/FqyLJV3Fb3+mtMtfi+EiO6IhOx9fz7QgXugLR8BDCBiiuskm5vn9+loamiIhoOXRxPRSQL5LwDrD/z3ovIL9H2xE2Wd9tCq3dFQw9JouGGWQs4BdIeN5QsSLvObQ3mBKOyYxjGjbNrso22oc0gCMy1TMjTFq9xI8m7Gf16eY9s3Ght725vqH4uGg6dDjaNF8ZKt9RWLbK3noIopc6aI6vdSVP4J0zBnR8PBM6LhhmeSaZ4PpTVUvyoarr8sYZqVUFkKDP7UYAG2mZCTo6Egm2dyhAEA5TNnjlBgtg31FrWHVr1lQ53BaW7ujoTr74uGg0cDOB+QEIDehOiv05aBKIXawvWPSwyz7DxVTlS/CCwY9EpeYVHiKQG6rF7XZRqpaj4NsfnwlMM4Lqm52oNQ5g/MBmDlhww11PW4XXkyTbRp9YZIU3A+gMUAbGngAMwo988+0aZajjJd5r0peGhwi5jmx6Ph4GfaN9h4Z+E9Ojau2RVtqr/SFDkWfUMFjmSDJIyT2kP1janKRHQkfSvQvYVHw/qey+ZoOOjUAxlmNBz8fbTCfYwAn2oPB99xKAeR7SKbG/a1hYLnArDr62u8r3LtoGfh7m5sbAfE8v5CBVJysmn51MCHU/hw0vtoQs9ORV1DLP4QoPjXYLfmZDGNhoPLRGQhbLrLKGpk/eEq5f7qswGcbmdNgT4uMa1J9R3lA7WH6huj4eBJULkJA//5rkqY5v9rbV7dnK5cRIfy7haO6ZYrqT4GqxtWrKqri0XCwRcczUCUGmZUOr+uQNCWamJ8bCifbtMK+Dzf9OpKG+ocRIz0HnICTc3x5Fb3mdt5lyLTRUL1y1X0B7YUE5xmSx3niPQ1nDZWxF2RcMPnI5sb9tlad3DMaFP9zaryGQCRg2IpXnKp55SOjWt2OZCL6CB9DbToCBsqNVmuQUQDC4V6XJDL7SilMId0GluBq/vPACzPVzVNw+7VWwNIz3zmA5xo97HB5VMDM6xuozPEdGz6hhOKCs0lNj0fMH14VWCiDXUcUV4VOBOCOXbVU9HvR0PBK+Dwc0RtTfVPCfSjELT0BcOTkd7ST+5rqosc4aVEaWEAgEDLrRYSHfzmfyJKTmu4/kX0HT5kkczFrFkFg/3sP\x00\x00\x00\x83evWtUGsX1dUbd3GUVZV/f8A2NrMDoLhiSU+Y2dBMeRciyXejITWhG0JkyV2Nza2Q+RWO2olTHzQjjpOEOAGG2v9si3UcJ1d9ayKhBvqXAnzFADLokcNPwdbV1p+FoPILv0r0HZsvRDr20CI6IgE+ogNZdzlHcaQtlOoPdM4TiyZPG+cDXUAAIZppHf7Rj+1eNjJIepZWkWXPNq+cSATrkdgx0qpYcM2Rgf4qgLHQmHX+Q11Eem8FE5vxXyPfRvXBKPh4GK7Jn8Q2cUAAFVpt1pIgXN5Bj1R6sXc7qdgx5uce2g/9LoSxp8xhDFTAzA8rrhdq7cGxEzxWLkBzS+fPu9QM+iHzDe9ulJUa6zUMOOaV9s33tUeWrUbUBvmvOo06zXST4Ev2lSqU8T8AkKhHpvqEeW8d1egW2yodZTXKF9iQx0iOozOdau2C2D5sAxDdexQPr+1eXUrgOetXlcNe1Zv+7ZvSPKr2bL/pNNkuBHvtefAirhhafuGAA2pPB0x8xmvW62gauH/I6fMn++G4jx7isn3820LEJFVfQ104uCDSJImcmV5ZeA2HHxACxHZTAHLoxpNMcqGfF07tgqozvdOnDXcahnDtLBvWLFa1bR0oqAY9kzjUFFL4+tUxY6tNdlLsduGKkP+WnCab9OeUwAM6YfgQ1FgazQR+aENkYjySl+jW9j7Fmza9ySC73j9gVe8VYEP2VGPiA7JcgMtZhIPD7t7/wTrh1h4tNBldfXWgCT/QKIYeKQtvGalAluTTqD42PCqD3qTfj2A/kNZjrVSwzSMvG6gxYavBRWx/CB9upkuOdWmUnejudnyhB2ifGMAQNvatXtVxJ75sn0+BMVKr7/mFV9V9QLMm+exsTYRiThyl6dt7dq9EHnRah2BtW0cPn9gvpXtG2oajwBQgfzJQozCuNl1hoXXw4zrAlg7xGpdWk9/zUhq9RAwiGrCjiTpJCrzLRdRdLjV8wvraYjyzwFvwuYz9pfXE1Vlubc19o63KvCQr6rm3GGV83z2X4covygw2nINQ9qSeZ2oaceK5ydGzpiR9KqfAlamb7wZbVq9AQAMEUtbUtTiDwIiVmdY63Jrr89+amCMDWWcODAkaaNmzSoDMM9yIcGTnKtMlBz3/n8yjd9A9BpYP9L7UCqguEChFyQklvD6q98UyApVXeE2Sv7ZEno9moJrZgyFnuD1B552OgeAQqcDkD1EzdFWv1QNNZOavmO6Ch6TROxeHPj9Y+gKY4miTwFIogFc4ALWJd24isr+MYCtoWkve/3r3kGSP5CI4PQxgUDprmCwY6ivHe6fPSmuOD6Z677LMM28HF93EBOjrL5rqaDVnjDp0d3pmisGLN/ZNQ/4WiDrFPic1x+Y5WiIhPJ9Pk32vwG2NdWv9/oDfwXwqRRf0wXI8QocD5Gr49qVKK+qWSOKlwX4Z68L/+xaX78txRnSbQyA050OQbnBNyMwVeOwPDXAVCOpSR5t6+v2lPsDLwlgaQ+mqp6DJBpoX+XaUxSS9Aq8SvyAFfRHEorAnwX4epLlSjo75OMAHh/qC2PiWiBqaftBU+vGxnoLr88VJ1quoLZMokofF2bY8NSSafTGV1gPQweo7P+gPHDQPkqXaV4LIN17wVx9M1D1UoX+3pPQrd7KQJPXH7jf56/+ev9DNkTUT+Nqad/tAZKevmPTwR1nJDM73hRLh6e8EQ03hg78BbG4jUM0uVnUotYOT1Hh9o2SGXPHQ2BphjYAGKpZNcLNULE8t1qAxujWxuz6wYEogxzUQO/buCYIlWVOhdlPMBXAFxXyc42jyesPrPP6q5d5/dWfGsrxw0S5SS6woUisbZh7Y7IvTiTMR2H9h+2ycrf3Y0N7yQKXQM9O9oJ6iFMcoz73C5Zm4Yt8eqjfl4qn10wA1NKkIsPUvN++4Yqb58OWbYfyhvUaaWX55EQFVtsRhChfve9J/mhx/FpA/+1EmMOYDshlgPzF2+PaUe6v/lnZtOqTwXnTlGd8VYHPAzjBeiX5N+rqYsm+umPjml0C/NNqCgNDG0Xnm/r2qbDwAKUhh2g66+piUDyZbE0APm+3a0jbWTxx/Tysff9qjjStseEEvuzlO6p6mEC/Y0MpFdPIqv+WiqEdgjRAkaxadSfKNO//Bt7Y2Jsw9dMANqQ/ziAohgvkEsOUf3grAyGvv+ay8ePnlTgdiyjVhlXO86mJH9hU7gWrBRTWtj4AgKqchfnzB/0womlY2L4h+NdAp61ZPSBGMMTtGGJt+4YAf4RNs/uzlRbIEgAjbCi1vv+UzawhNhz8oqKb7MhClK8O+cbVsXHNruH+2R+Nw3gGgLNPlB6OYCqgy9qLYzd6/TX3GAm5J9u+ERINysQTihNG5yNQ2PJMgJr6N6s1Eon4Iy6X6y5YW0kd4du8d34E+PsRP3P+fLdsaUl++4ZiwIkDbej8mxfFUUCSOhhFgbMxf/43sWLFEQ+ZKZ0yaywsPvhmy4mQWcxXWfNfqvpNe6pl3yQKtaGBNjS5MZapVDpl1lh3gZHUgpjLlN6WUDD5g5GIhmjAN76W8JotRsI4CdBMGL92JKMAvdl0mevK/dVfRmpG8RE5wlc12+8t7HgOqkPcLzwAxca2jUHL2y86mht3AlhpPY4MahuHd+u+jwIYlexlXInDnNgXCvUAYuV73ciKra0nDeYTXW7jcwBcyV5IgG3RUPD1ZF+f1ebN83irArUq+lO7SqriAbtqpZH1FWhDkhpjmUoul+vXmpBwMh9x09I2LKIhO+zKUWvz6tZouOHTgCwCkHFfbIcwWiC/8VYFnijzBywfNEHkqIknFJf7a76lagQBfNjGyr+FXbf/D7WneMg1cA4GsYotplqZvvF6a/Pq5sPWV2uruqbqoLZlqOLzVq6jebp9w+evnudtjb0OxU2wb5Hktbam+qSn0TiIi0REDhvMrVeNhuvviblkJoAHABzxFqXjFGcawL/Kqmoyd/sJ0aHMm+fxTq35gLey5ifewo7tAv0RAPv2+Cs6EmbiPrvKuftuf1tt5saW+2cffiLFvHkeFSS/fUOOfJu+tNvzDBRDPhDlXdL3QORhG5uyqrmjBDKoleqBqJk/2zdGzphRXu4PfMnrD/xT+yZlzLWzvojeaWe9NLK8oKVq4/cVojw06Id3utbXb+sCLvJNr67VhFwN4GJk9sl2kw3Vf1ZU1ZzaGqpf5XQYylnlvqrqpFZGTUWpqFQA8MHAGJg4Fq2xGhgY8mzkwVJD7+loatxpV72WUHCr1x94HYC1kWwwzgHw6kD/3tvaexogyT4wpq6EccSmc/v2us5yf+BZSfJ4bgUmeKsCH4yGgq8N9Dku0/yciqUTHHe2bZzxKhC0UCJ1XGrM8vmrh9yYCQxvAqgATB/EGC6KakCP741jpljY7nIEr0VCDXYcS+8EG+4Ia1L7/Ymoz5C/kUfWNzQB+GbJ5Hk3e9yxryj0AkCOSUE2O1SYqs/6qmafMNDT90QWjVeVpA60kP1/Qd8abupvyu4yem2b4rGfAo+KxQZa+6ZYXI0BVrNFsECTX+d+rXXjqkFNHBDVRyFi4ZhwfA7AgA20yuC2eQxI8RjwSLoPuxq0vgc1h/4/skL7XyWAhT/oIV1TZcD/3zKeot3q9wtRmWxPGKL8lPTT852b6nZEwsEl0XDDLEPkWAF+DEjoyK9Mu1GqxnJUVWXyajlRyonifyKbG/bZXbf/4TyrjciUiqqaOYf8N/PmeRTymaQry/sPTxlIgaf3SQDdyV5KMfD+5vKZM0cAmJ9sbcC2EyDznkLva2uqt/wgrWMEu6zX0CobkhDlLVsOImkN1a+KhINXRcP104DEtP6HDp8BkCljco71osSOgftE2eq3kaZgSpqv/ofzLB9EYeqht0549/V+DIrhSZZVl2kO+ve9Z926NsggRuoNbErFtDmH/kEgXvBZJHHX7wB7IpOGv2Th9QQAgn+1Sddip2NYITac06CwfgQ6UT6z8s38kKLhxhCAewDcg/nz3b7Ne+YojJNE9GSFfBgWThGzRHH18KrAL52YEynANrXh1DYbfB6p209Imeuf0UT0v1J5AVF5VEWPs1bFPAfAje8vbiywsMD96\x00\x00\x00\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\x00\x00\x00\x00U5HISKYgKRqG8dzaR5NpoCkZL+1Ai+l6iCYXNESCm5V6JU2lCpMGMbDmDKlyIZaWaGtqX59WadnHlTuRc4MxJCQaegp0ab6K7F1ZdeRP5/IPgbq6mKRpoY7RM0TFTlxzHUdNPHBtvCaV50OQkR9TDFTMo1DU3h4ykCMFB1yImma8pHt2sIN/wfYsm1nls/lvdmGOllj+/a6zmhT/aUi8kmk7k5K6glaIHpltCg+q31Dw0tOx6H8tP9BikjTmjfawg2noO8L600HMyUrriJ3RIsSJ0bDjSGnwxDRf7SHGl4GdIfNZWPSY6Z9YkVraPVLAHbaXNaMu9zcvjFI6nL/N2z4M1DgWxX+mlNsiJRVIqH6v5V1eWYCeiOAQR10liHaBfiR9GpVNNSwFI2NfDiSHPO+J5Gjofpno+HgPIEeB+ABZMfWjucTqse2heqv5RcUUUYyIXafFKh/c+hkOVMhdjfur3auW5WqfeI5p2193R6IfBnWtyIYCej9vqOqU3oOQSbavr2uMxpuuDVhmtOgcq/854CzTLRFodcYCWNSJBy8moMBKBMMOMonEm6oi4aDF8VcMlWAG6DItIfxTABPmIZ+JBoOntbR1NDgdCAiGpiY9k6YUHtu4yfFEJunZXD6xpBFQ/XPKvBLq3UEmKhuLLMjUzbq2LhmV7Sp/lLT0ztJVL6DzNna0SOQP4lgQXTS8Mq2cMMPWptXtzodiuhdR5yF2bW+flskHFwSbQrOBRLTRPVaUbwEoCcN+Q5lA0Rvhhozo+HgZ7j/iSg7RJpmrABg10NyvUZMHTtwJOJzv2jjWDB1IZHqWdk5qaQUVwDYYLmQyIU+f80XrCfKXm1r1+6NNNV/PzppeKWqfBqQ/0v76DtFB4C/qODrEtNxkXD9ZyOh4B+xYgVPVKSM4x7KJ/fvLb4DwB2YMqWowl3xIdM0PwLBBxWoFmCi/RE1CpGXVGWFy5Dn0z6WTnW3QqzNHhUzaFMaq1YoUGypgi+awFZrIQTGBhNq6b+pYYrl0+08hnbG/397566TYBCE0TP7AyExQjRWYkwECo3XBCsLY/QNfAJfxTfgPWwsKCmoDA1BUQsjkYtGY8MlQkGQHQss7CRZCF7+U231ZWabSWZnv1GybirieBv/ibOByFZalUNXJYGrqT7jFgp9Ettp0H1XKYFq8+F20tsav49DyavgNKceHGh3XPGMwmup1J1NbJwI5tRVS7HHJJPnlMsjN4cEitZxKYsx5mf5M+dy72+QATKkUsFoo3dgPe9IVPcEdp1ryFeEBkoR9MIasp2QzU9rDNOI1K261SVBp/7/KkCgp/Qd8xhbo8MliIqqo++7ykQ3x8o4xSJL6/M2bDY9NauKjYEsI7KI2hhIGIgAHjDHcASjjaAoLaCB8qKiz0akbuHGeFy370pV/ozljo+Pj4+Pzy8llQpGmoMdxK4hxFFWgDjCAkoYiAIzQIihX3cf6Hyen4CawiOi994gcNmqFGvTSsXHx5UPg0VpqG8MxjsAAAAASUVORK5CYII=\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"services\",\"services/finalizers\",\"endpoints\",\"persistentvolumeclaims\",\"events\",\"configmaps\",\"secrets\",\"serviceaccounts\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"get\",\"create\"]},{\"apiGroups\":[\"apps\"],\"resourceNames\":[\"build-operator\"],\"resources\":[\"deployments/finalizers\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\",\"deployments\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"build.dev\"],\"resources\":[\"*\",\"buildstrategies\",\"clusterbuildstrategies\",\"buildruns\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"tekton.dev\"],\"resources\":[\"tasks\",\"taskruns\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]}],\"serviceAccountName\":\"build-operator\"}],\"deployments\":[{\"name\":\"build-operator\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"build-operator\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"name\":\"build-operator\"}},\"spec\":{\"containers\":[{\"command\":[\"build-operator\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"build-operator\"}],\"image\":\"quay.io/shipwright/shipwright-operator:v0.3.0\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"stat\",\"/tmp/operator-sdk-ready\"]},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"build-operator\",\"readinessProbe\":{\"exec\":{\"command\":[\"stat\",\"/tmp/operator-sdk-ready\"]},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{}}],\"serviceAccountName\":\"build-operator\"}}}}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"API\",\"Cloud-native\",\"Build\"],\"maintainers\":[{\"email\":\"shipwright-dev@lists.shipwright.io\",\"name\":\"Shipwright\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Project Shipwright\"},\"replaces\":\"buildv2-operator.v0.1.0\",\"version\":\"0.3.0\"}}\nquay.io/olmqe/buildv2-operator:0.3.0-1869-nodep0.3.0buildv2-operator.v0.1.0\r\x00\x00\x00\x01\to\x00\to\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8c\xcbA\x04\x0e;\x86\xf70\x92\x9e\nk\r\x17;\r\rbuildv2-operator.v0.3.0{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[{\\\"apiVersion\\\":\\\"build.dev/v1alpha1\\\",\\\"kind\\\":\\\"BuildStrategy\\\",\\\"metadata\\\":{\\\"name\\\":\\\"buildpacks-v3-heroku\\\"},\\\"spec\\\":{\\\"buildSteps\\\":[{\\\"name\\\":\\\"step-prepare\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":0,\\\"capabilities\\\":{\\\"add\\\":[\\\"CHOWN\\\"]}},\\\"command\\\":[\\\"/bin/bash\\\"],\\\"args\\\":[\\\"-c\\\",\\\"chown -R \\\\\\\"1000:1000\\\\\\\" \\\\\\\"/workspace/source\\\\\\\" \\u0026\\u0026 chown -R \\\\\\\"1000:1000\\\\\\\" \\\\\\\"/tekton/home\\\\\\\"\\\\n\\\"]},{\\\"name\\\":\\\"step-detect\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":1000},\\\"command\\\":[\\\"/cnb/lifecycle/detector\\\"],\\\"args\\\":[\\\"-app=/workspace/source/$(build.source.contextDir)\\\",\\\"-group=/layers/group.toml\\\",\\\"-plan=/layers/plan.toml\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]},{\\\"name\\\":\\\"step-restore\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":1000},\\\"command\\\":[\\\"/cnb/lifecycle/restorer\\\"],\\\"args\\\":[\\\"-layers=/layers\\\",\\\"-cache-dir=/cache\\\",\\\"-group=/layers/group.toml\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"cache-dir\\\",\\\"mountPath\\\":\\\"/cache\\\"},{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]},{\\\"name\\\":\\\"step-build\\\",\\\"image\\\":\\\"$(build.builder.image)\\\",\\\"securityContext\\\":{\\\"runAsUser\\\":1000},\\\"command\\\":[\\\"/cnb/lifecycle/builder\\\"],\\\"args\\\":[\\\"-app=/workspace/source/$(build.source.contextDir)\\\",\\\"-layers=/layers\\\",\\\"-group=/layers/group.toml\\\",\\\"-plan=/layers/plan.toml\\\"],\\\"volumeMounts\\\":[{\\\"name\\\":\\\"layers-dir\\\",\\\"mountPath\\\":\\\"/layers\\\"}]},{\\\"name\\\":\\\"s\x00\x00\x00S")

func testQeTestdataOpmRenderDiffIndexLatest2DbBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderDiffIndexLatest2Db, nil
}

func testQeTestdataOpmRenderDiffIndexLatest2Db() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderDiffIndexLatest2DbBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/diff/index-latest-2.db", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderDiffIndexDb = []byte("SQLite format 3\x00\x10\x00\x01\x01\x00@  \x00\x00\x00\r\x00\x00\x00j\x00\x00\x00\x1c\x00\x00\x00\x14\x00\x00\x000\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00.K\x90\x05\x00\x00\x00\x01\x0f\xfb\x00\x00\x00\x00\t\x0f\xfb\r\xc5\r\x88\f\xbf\f\x90\v\x93\vd\t\xc9\b\xf5\a\x02\x05\x0f\x04\xad\x02\x8d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x83p\x1b\a\x17%%\x01\x87#tableapi_providerapi_provider\x03CREATE TABLE \"api_provider\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x81Q\x18\a\x17''\x01\x82atablerelated_imagerelated_image\x1bCREATE TABLE related_image (\n\t\t\timage TEXT,\n     \t\toperatorbundle_name TEXT,\n     \t\tFOREIGN KEY(operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)\x83\x18\x15\a\x17''\x01\x85otablechannel_entrychannel_entry\x16CREATE TABLE channel_entry (\n\t\t\tentry_id INTEGER PRIMARY KEY,\n\t\t\tchannel_name TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\treplaces INTEGER,\n\t\t\tdepth INTEGER,\n\t\t\tFOREIGN KEY(replaces) REFERENCES channel_entry(entry_id) DEFERRABLE INITIALLY DEFERRED, \n\t\t\tFOREIGN KEY(channel_name, package_name) REFERENCES channel(name, package_name) ON DELETE CASCADE\n\t\t)-\x14\x06\x17A\x1b\x01\x00indexsqlite_autoindex_channel_1channel\x15\x81z\x13\a\x17\x1b\x1b\x01\x83Ktablechannelchannel\x14CREATE TABLE channel (\n\t\t\tname TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\thead_operatorbundle_name TEXT,\n\t\t\tPRIMARY KEY(name, package_name),\n\t\t\tFOREIGN KEY(head_operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)-\x12\x06\x17A\x1b\x01\x00indexsqlite_autoindex_package_1package\x13\x81F\x11\a\x17\x1b\x1b\x01\x82ctablepackagepackage\x12CREATE TABLE package (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tdefault_channel TEXT,\n\t\t\tFOREIGN KEY(name, default_channel) REFERENCES channel(package_name,name) ON DELETE CASCADE\n\t\t);\x10\x06\x17O)\x01\x00indexsqlite_autoindex_operatorbundle_1operatorbundle\x11\x81J\x0f\a\x17))\x01\x82Otableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT)%\v\x06\x179\x13\x01\x00indexsqlite_autoindex_api_1api\f\x81\x1f\n\a\x17\x13\x13\x01\x82%tableapiapi\vCREATE TABLE api (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\tplural TEXT NOT NULL,\n\t\t\tPRIMARY KEY(group_name, version, kind)\n\t\t)\x81\"\x01\a\x17//\x01\x81stableschema_migrationsschema_migrations\x02CREATE TABLE schema_migrations (\n\t\tversion bigint NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTA\x00\x00\x00\a\x1b\r\x00\x00\x00\x01\x0f\xe7\x00\x0f\xe7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x01\x03\x013\f2021-08-03 08:40:44\r\x00\x00\x00\x05\x0e\a\x00\x0f\x9f\x0f>\x0e\xc9\x0eh\x0e\a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00_\x05\a-\x11\x197\x17Ywindup.jboss.orgv1Windupwindup-operator.0.0.30.0.3quay.io/olmqe/mta-operator:v0.0.3-1869_\x04\a-\x11\x197\x17Ywindup.jboss.orgv1Windupwindup-operator.0.0.20.0.2quay.io/olmqe/mta-operator:v0.0.2-1869s\x03\a7\x1d#1\x17gcharts.operatorhub.iov1alpha1Cockroachdbcockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869_\x02\a-\x11\x197\x17Ywindup.jboss.orgv1Windupwindup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869_\x01\a-\x11\x197\x17Ywindup.jboss.orgv1Windupwindup-operator.0.0.40.0.4quay.io/olmqe/mta-operator:v0.0.4-1869\r\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1deBbYB5aCrtc+L73AR0w6YoJTYggg9tvjihhkc37TKb/yqVvzn+L39AKztlf2BvkTOBJ8PyAe+A7YAeX6vvRWoBg1a027oeMa99o7cZBG6EDDcnziOyn07Tvd+8VjHUA3yPwT6Al38P4/3PyTc/uGBC+swyoYmXU2swwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"deployments\":[{\"name\":\"windup-operator.0.0.2\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.2\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.1\",\"version\":\"0.0.2\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"labels\":{\"application\":\"windup\"},\"name\":\"windups.windup.jboss.org\"},\"spec\":{\"group\":\"windup.jboss.org\",\"names\":{\"kind\":\"Windup\",\"plural\":\"windups\",\"shortNames\":[\"w\"],\"singular\":\"windup\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"auto_deploy_exploded\":{\"default\":\"false\",\"type\":\"string\"},\"db_database\":{\"default\":\"mta\",\"type\":\"string\"},\"db_jndi\":{\"default\":\"java:jboss/datasources/WindupServicesDS\",\"type\":\"string\"},\"db_max_pool_size\":{\"type\":\"string\"},\"db_min_pool_size\":{\"type\":\"string\"},\"db_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"db_tx_isolation\":{\"type\":\"string\"},\"db_username\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"docker_image_executor\":{\"default\":\"windup-web-openshift-messaging-executor\",\"type\":\"string\"},\"docker_image_web\":{\"default\":\"windup-web-openshift\",\"type\":\"string\"},\"docker_images_repository\":{\"default\":\"quay.io\",\"type\":\"string\"},\"docker_images_tag\":{\"default\":\"5.1.2.Final\",\"type\":\"string\"},\"docker_images_user\":{\"default\":\"windupeng\",\"type\":\"string\"},\"executor_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"executor_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"executor_desired_replicas\":{\"default\":1,\"type\":\"integer\"},\"executor_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"executor_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"executor_mem_request\":{\"defaul\n\x00\x00\x00\x05\x0e\x9a\x00\x0f(\x0e\xe1\x0e\x9a\x0f\xba\x0fs\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\x057\x17Y\x01windup-operator.0.0.30.0.3quay.io/olmqe/mta-operator:v0.0.3-1869\x05F\x057\x17Y\x01windup-operator.0.0.20.0.2quay.io/olmqe/mta-operator:v0.0.2-1869\x04J\x051\x17g\x01cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869\x03F\x057\x17Y\x01windup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\x02E\x057\x17Y\twindup-operator.0.0.40.0.4quay.io/olmqe/mta-operator:v0.0.4-1869\r\r\xc5\x00\f\x06 \x00\x0f[\x0e\xb9\x0e\x92\x06 \r\x88\f\xbf\f\x90\v\x93\vd\t\xc9\b\xf5\a\x02\x05\x0f\x04\xad\x02\x8d\x00l\x00d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\b\x00\x00\x00\x00\x00\x00\x06\x96\x1b5%\b\x87mtriggerapi_requirer_cleanupapi_requirerCREATE TRIGGER api_requirer_cleanup\n\t\tAFTER DELETE ON api_requirer\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\t\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, op\x81_\x0f\a\x17))\x01\x82ytableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT, substitutesfor TEXT)\x83p\x1b\a\x17%%\x01\x87#tableapi_providerapi_provider\x03CREATE TABLE \"api_provider\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\x81Q\x18\a\x17''\x01\x82atablerelated_imagerelated_image\x1bCREATE TABLE related_image (\n\t\t\timage TEXT,\n     \t\toperatorbundle_name TEXT,\n     \t\tFOREIGN KEY(operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)\x83\x18\x15\a\x17''\x01\x85otablechannel_entrychannel_entry\x16CREATE TABLE channel_entry (\n\t\t\tentry_id INTEGER PRIMARY KEY,\n\t\t\tchannel_name TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\treplaces INTEGER,\n\t\t\tdepth INTEGER,\n\t\t\tFOREIGN KEY(replaces) REFERENCES channel_entry(entry_id) DEFERRABLE INITIALLY DEFERRED, \n\t\t\tFOREIGN KEY(channel_name, package_name) REFERENCES channel(name, package_name) ON DELETE CASCADE\n\t\t)-\x14\x06\x17A\x1b\x01\x00indexsqlite_autoindex_channel_1channel\x15\x81z\x13\a\x17\x1b\x1b\x01\x83Ktablechannelchannel\x14CREATE TABLE channel (\n\t\t\tname TEXT,\n\t\t\tpackage_name TEXT,\n\t\t\thead_operatorbundle_name TEXT,\n\t\t\tPRIMARY KEY(name, package_name),\n\t\t\tFOREIGN KEY(head_operatorbundle_name) REFERENCES operatorbundle(name) ON DELETE CASCADE\n\t\t)-\x12\x06\x17A\x1b\x01\x00indexsqlite_autoindex_package_1package\x13\x81F\x11\a\x17\x1b\x1b\x01\x82ctablepackagepackage\x12CREATE TABLE package (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tdefault_channel TEXT,\n\t\t\tFOREIGN KEY(name, default_channel) REFERENCES channel(package_name,name) ON DELETE CASCADE\n\t\t);\x10\x06\x17O)\x01\x00indexsqlite_autoindex_operatorbundle_1operatorbundle\x11\x00\x00\x00\xcd\x17))\x01\x82Otableoperatorbundleoperatorbundle\x10CREATE TABLE operatorbundle (\n\t\t\tname TEXT PRIMARY KEY,\n\t\t\tcsv TEXT,\n\t\t\tbundle TEXT,\n\t\t\tbundlepath TEXT, skiprange TEXT, version TEXT, replaces TEXT, skips TEXT)%\v\x06\x179\x13\x01\x00indexsqlite_autoindex_api_1api\f\x81\x1f\n\a\x17\x13\x13\x01\x82%tableapiapi\vCREATE TABLE api (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\tplural TEXT NOT NULL,\n\t\t\tPRIMARY KEY(group_name, version, kind)\n\t\t)\x81\"\x01\a\x17//\x01\x81stableschema_migrationsschema_migrations\x02CREATE TABLE schema_migrations (\n\t\tversion bigint NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n\t)\r\x00\x00\x00\x01\x0fx\x00\x0fx\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\x05\x01\x06#l1\x17golm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.5\"}cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869\r\x06\xbc\x00\b\x06\x1f\x00\x0e\r\r\xab\v\x8b\tj\b\x14\x06\xc4\x06\x1f\x06\x87\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00f\"\a\x17!!\x01\x81\x17tabledeprecateddeprecated\rCREATE TABLE deprecated (\n\t\t\toperatorbundle_name TEXT PRIMARY KEY\n\t\t)3#\x06\x17G!\x01\x00indexsqlite_autoindex_deprecated_1deprecated\x0e\x00\x00\x00\b\x00\x00\x00\x00\x82M!\a\x17!!\x01\x84etablepropertiesproperties\nCREATE TABLE properties (\n\t\t\ttype TEXT,\n\t\t\tvalue TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE\n\t\t)\x82S \a\x17%%\x01\x84itabledependenciesdependencies\bCREATE TABLE dependencies (\n\t\t\ttype TEXT,\n\t\t\tvalue TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE\n\t\t)\x84\x1e\x1f\a\x1b5%\b\x87mtriggerapi_requirer_cleanupapi_requirerCREATE TRIGGER api_requirer_cleanup\n\t\tAFTER DELETE ON api_requirer\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\t\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND\x84\x1d\x1e\a\x1b5%\b\x87ktriggerapi_provider_cleanupapi_providerCREATE TRIGGER api_provider_cleanup\n\t\tAFTER DELETE ON api_provider\n\t\tWHEN NOT EXISTS (SELECT 1 FROM api_provider JOIN api_requirer WHERE \n\t\t    (api_provider.group_name = OLD.group_name AND api_provider.version = OLD.version AND api_provider.kind = OLD.kind) OR \n\t\t\t(api_requirer.group_name = OLD.group_name AND api_requirer.version = OLD.version AND api_requirer.kind = OLD.kind))\n\t\tBEGIN\n\t\t\tDELETE FROM api WHERE group_name = OLD.group_name AND version = OLD.version AND kind = OLD.kind;\n\t\tEND`\x1d\a\x17\x11)\x01\x81\x13indexpkoperatorbundle\x06CREATE UNIQUE INDEX pk ON operatorbundle(name, version, bundlepath)\x83p\x1c\a\x17%%\x01\x87#tableapi_requirerapi_requirer\x04CREATE TABLE \"api_requirer\" (\n\t\t\tgroup_name TEXT,\n\t\t\tversion TEXT,\n\t\t\tkind TEXT,\n\t\t\toperatorbundle_name TEXT,\n\t\t\toperatorbundle_version TEXT,\n\t\t\toperatorbundle_path TEXT,\n\t\t\tFOREIGN KEY(operatorbundle_name, operatorbundle_version, operatorbundle_path) REFERENCES operatorbundle(name, version, bundlepath) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,\n\t\t\tFOREIGN KEY(group_name, version, kind) REFERENCES api(group_name, version, kind) ON DELETE CASCADE\n\t\t)\r\x00\x00\x00\n\n\x99\x00\x0f|\x0e\xf0\x0el\r\xe0\rY\f\xb9\f5\v\xa9\v%\n\x99\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\t\n\a\x1b\x81\x037\x17Yolm.gvk{\"group\":\"windup.jboss.org\",\"kind\":\"Windup\",\"version\":\"v1\"}windup-operator.0.0.30.0.3quay.io/olmqe/mta-operator:v0.0.3-1869\x81\x01\t\x06#m7\x17Yolm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.3\"}windup-operator.0.0.30.0.3quay.io/olmqe/mta-operator:v0.0.3-1869\x81\t\b\a\x1b\x81\x037\x17Yolm.gvk{\"group\":\"windup.jboss.org\",\"kind\":\"Windup\",\"version\":\"v1\"}windup-operator.0.0.20.0.2quay.io/olmqe/mta-operator:v0.0.2-1869\x81\x01\a\x06#m7\x17Yolm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.2\"}windup-operator.0.0.20.0.2quay.io/olmqe/mta-operator:v0.0.2-1869\x81\x1d\x06\a\x1b\x81#1\x17golm.gvk{\"group\":\"charts.operatorhub.io\",\"kind\":\"Cockroachdb\",\"version\":\"v1alpha1\"}cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869\x81\x04\x05\x06#k1\x17golm.package{\"packageName\":\"cockroachdb\",\"version\":\"5.0.4\"}cockroachdb.v5.0.45.0.4quay.io/olmqe/cockroachdb-operator:5.0.4-1869\x81\t\x04\a\x1b\x81\x037\x17Yolm.gvk{\"group\":\"windup.jboss.org\",\"kind\":\"Windup\",\"version\":\"v1\"}windup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\x81\x01\x03\x06#m7\x17Yolm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.5\"}windup-operator.0.0.50.0.5quay.io/olmqe/mta-operator:v0.0.5-1869\x81\t\x02\a\x1b\x81\x037\x17Yolm.gvk{\"group\":\"windup.jboss.org\",\"kind\":\"Windup\",\"version\":\"v1\"}windup-operator.0.0.40.0.4quay.io/olmqe/mta-operator:v0.0.4-1869\x81\x01\x01\x06#m7\x17Yolm.package{\"packageName\":\"mta-operator\",\"version\":\"0.0.4\"}windup-operator.0.0.40.0.4quay.io/olmqe/mta-operator:v0.0.4-1869\r\x00\x00\x00\x02\x0f\x9f\x00\x0f\xda\x0f\x9f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x009\x02\x057\x1d#%charts.operatorhub.iov1alpha1Cockroachdbcockroachdbs$\x01\x05-\x11\x19\x1bwindup.jboss.orgv1Windupwindups\n\x00\x00\x00\x02\x0f\xb3\x00\x0f\xb3\x0f\xe2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.\x057\x1d#\x01charts.operatorhub.iov1alpha1Cockroachdb\x02\x1d\x05-\x11\x19\twindup.jboss.orgv1Windup\r\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\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\x05\x00\x00\x00\x02\x0f\xf6\x00\x00\x00\x00j\x0f\xfb\x0f\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x8d/\x02\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.5{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.4.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\"\x00\x00\x00*\x85\x8d/\x01\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.4{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.3.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"j\x00\x00\x00U\x04\x00\x00\x00T\x02\n\x00\x00\x00\x05\x0f\x82\x00\x0f\xb6\x0f\x9c\x0f\x82\x0f\xe7\x0f\xcd\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x037\x01windup-operator.0.0.3\x05\x19\x037\x01windup-operator.0.0.2\x04\x16\x031\x01cockroachdb.v5.0.4\x03\x19\x037\x01windup-operator.0.0.5\x02\x18\x037\twindup-operator.0.0.4\r\x00\x00\x00\x02\x0f\xd4\x01\x0f\xd4\x0f\xeb\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x03\x03#\x19cockroachdbstable\x00\x13\x05\x03%\x15mta-operatorbeta\n\x00\x00\x00\x02\x0f\xdf\x00\x0f\xdf\x0f\xef\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x03#\x01cockroachdb\x03\x10\x03%\x01mta-operator\x05\r\x00\x00\x00\x03\x0f\x80\x00\x0f\xab\x0f\xd4\x0f\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00)\a\x04\x15%7betamta-operatorwindup-operator.0.0.3'\x03\x04\x19#1stablecockroachdbcockroachdb.v5.0.4*\x06\x04\x17%7alphamta-operatorwindup-operator.0.0.5\n\x00\x00\x00\x03\x0f\xbc\x00\x0f\xe9\x0f\xbc\x0f\xd2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x15\x04\x15%\x01betamta-operator\a\x16\x04\x19#\x01stablecockroachdb\x03\x16\x04\x17%\x01alphamta-operator\x06\r\x0f\x15\x00\x05\x0e\xb5\x04\x0f\xd4\x0fD\x0fs\x0e\xb5\x0e\xe5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.\x06\a\x00\x17%7\x01\talphamta-operatorwindup-operator.0.0.5\a.\a\a\x00\x17%7\x00\x01alphamta-operatorwindup-operator.0.0.4\x02\x0f\xa3\x00/\x17%7\x00\talphamta-operatorwindup-operator.0.0.5-\x04\a\x00\x15%7\x01\tbetamta-operatorwindup-operator.0.0.3\x05-\x05\a\x00\x15%7\x00\x01betamta-operatorwindup-operator.0.0.2\x02\x00\x00\x00\x00.\x15%7\x00\tbetamta-operatorwindup-operator.0.0.3\x00\x00\x00*\x03\a\x00\x19#1\x00\tstablecockroachdbcockroachdb.v5.0.4\x00\x00\x00\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\x00\x00\x00\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\x00\x00\x00\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\x00\x00\x00\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\r\x00\x00\x00\v\r\x1d\x00\x0f\xc0\x0fx\x0f8\x0e\xf0\x0e\xac\x0el\x0e-\r\xed\r\xa5\re\r\x1d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\v\x03i7quay.io/windupeng/windup-operator-native:0.0.3windup-operator.0.0.3>\n\x03Y7quay.io/olmqe/mta-operator:v0.0.3-1869windup-operator.0.0.3F\t\x03i7quay.io/windupeng/windup-operator-native:0.0.2windup-operator.0.0.2>\b\x03Y7quay.io/olmqe/mta-operator:v0.0.2-1869windup-operator.0.0.2=\a\x03]1quay.io/helmoperators/cockroachdb:v5.0.4cockroachdb.v5.0.4>\x06\x03_1gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0cockroachdb.v5.0.4B\x05\x03g1quay.io/olmqe/cockroachdb-operator:5.0.4-1869cockroachdb.v5.0.4F\x04\x03i7quay.io/windupeng/windup-operator-native:0.0.5windup-operator.0.0.5>\x03\x03Y7quay.io/olmqe/mta-operator:v0.0.5-1869windup-operator.0.0.5F\x02\x03i7quay.io/windupeng/windup-operator-native:0.0.4windup-operator.0.0.4>\x01\x03Y7quay.io/olmqe/mta-operator:v0.0.4-1869windup-operator.0.0.4\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x1a\x00\x00\x00\x19\x00\x00\x00\x18\x00\x00\x00\x17\x00\x00\x00\x1e\x00\x00\x00\x1f\x00\x00\x00 \x00\x00\x00!\x00\x00\x00\"\x00\x00\x00#\x00\x00\x00$\x00\x00\x00%\x00\x00\x00&\x00\x00\x00'\x00\x00\x00(\x00\x00\x00)\x00\x00\x00\x0f\x00\x00\x00\x05\x00\x00\x00\x1d   \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\",\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.2\",\"createdAt\":\"2021-01-11\",\"description\":\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.2\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAkF3pUWHRSYXcgcHJvZmlsZSB0eX\x00\x00\x00\x00t\":\"0.5Gi\",\"type\":\"string\"},\"executor_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"gc_max_metaspace_size\":{\"default\":512,\"type\":\"integer\"},\"hostname_http\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"jgroups_encrypt_keystore\":{\"default\":\"jgroups.jceks\",\"type\":\"string\"},\"jgroups_encrypt_name\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_password\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_secret\":{\"default\":\"eap-app-secret\",\"type\":\"string\"},\"max_post_size\":{\"default\":\"4294967296\",\"type\":\"string\"},\"messaging_serializer\":{\"default\":\"http.post.serializer\",\"type\":\"string\"},\"mq_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"mq_queues\":{\"default\":\"\",\"type\":\"string\"},\"mq_topics\":{\"default\":\"\",\"type\":\"string\"},\"mta_Volume_Capacity\":{\"default\":\"20G\",\"type\":\"string\"},\"postgresql_cpu_limit\":{\"default\":\"2\",\"type\":\"string\"},\"postgresql_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"postgresql_image\":{\"default\":\"centos/postgresql-96-centos7:latest\",\"type\":\"string\"},\"postgresql_max_connections\":{\"default\":\"200\",\"type\":\"string\"},\"postgresql_mem_limit\":{\"default\":\"2Gi\",\"type\":\"string\"},\"postgresql_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"postgresql_shared_buffers\":{\"type\":\"string\"},\"sso_bearer_only\":{\"default\":\"\",\"type\":\"string\"},\"sso_disable_ssl_certificate_validation\":{\"default\":\"true\",\"type\":\"string\"},\"sso_enable_cors\":{\"default\":\"false\",\"type\":\"string\"},\"sso_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_public_key\":{\"default\":\"\",\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_realm\":{\"default\":\"mta\",\"type\":\"string\"},\"sso_saml_certificate_name\":{\"default\":\"jboss\",\"type\":\"string\"},\"sso_saml_keystore\":{\"default\":\"keystore.jks\",\"type\":\"string\"},\"sso_saml_keystore_password\":{\"default\":\"mykeystorepass\",\"type\":\"string\"},\"sso_saml_keystore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_saml_logout_page\":{\"default\":\"/\",\"type\":\"string\"},\"sso_secret\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_service_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_truststore\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_username\":{\"default\":\"\",\"type\":\"string\"},\"tls_secret\":{\"default\":\"\",\"type\":\"string\"},\"volumeCapacity\":{\"default\":\"20G\",\"type\":\"string\"},\"webLivenessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webLivenessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webLivenessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"webReadinessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webReadinessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webReadinessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"web_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"web_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"web_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\",\"type\":\"string\"},\"web_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"web_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"web_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\",\"type\":\"string\"}},\"required\":[\"web_cpu_request\",\"web_mem_request\",\"executor_cpu_request\",\"executor_mem_request\",\"messaging_serializer\",\"mta_Volume_Capacity\",\"db_database\",\"volumeCapacity\",\"sso_url\",\"sso_realm\",\"docker_images_user\",\"docker_images_tag\",\"max_post_size\",\"executor_desired_replicas\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"items\":{\"properties\":{\"lastTransitionTime\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"reason\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\nquay.io/olmqe/mta-operator:v0.0.2-18690.0.2windup-operator.0.0.1\x00\x00\x00\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\x00\x00\x00 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\x00\x00\x00!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\x00\x00\x00\"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\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"deployments\":[{\"name\":\"windup-operator.0.0.2\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.2\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\"\x00\x00\x00#:[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.1\",\"version\":\"0.0.2\"}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.2.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\",\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categori\x00\x00\x00$es\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.2\",\"createdAt\":\"2021-01-11\",\"description\":\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.2\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"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\x00\x00\x00%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\x00\x00\x00&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\x00\x00\x00'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\x00\x00\x00(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\x00\x00\x00)U8n9xO472mVT8sPM94BaxKSFCuaXgvYXvZS/bxPb/uEtC98bw1bDOKGe8G6vE0ySxJcEGLHV16Djdc6yoevSa3SL0IEXeBngXuFzsR7ARH5f5fDOqqspKp3x3TEL3+sJ1vycXkQu2QgGlXt/l1T7zXeVKdH999+3i0eti1VkKR2p3QC2RcF2wocipNs0TYfw3mwonD8uAKfu0CL2W1eOGEJeSqKr2738PmCamI9hN5FWmaR2g/S8WJad2ml5RhZ70ZesfEdX6ofvyJZhVx6jav/8lEblgN0r8nlyd+da0sqLDL5llhyld1vpJNa3r0VetsDLeJBlGsH+4Hog5wOwr/rQA57gLY0/o1gaVH0Gp+4HHxXSEKAjXA/FrtPlEXHovLl++KoZC9107/BtU1GTgETEdIUrC9UA8gjIm1xTugB92xI5H/5tSdMvO7AtsRjaoCDby5CVeHzUNh+t14QU1qMOm/fljWkFzLS50f2WYNOB7ZKupEH1j8vooBvrFdTn7UEuH8C0auq/qo2rLP30kIhfsRO2YvJmkAB/VHPjB+UE3Fb1Cd7TtBlaNt2FiOoLdPHmIpDkMmOdI6RydQs8dkQXKmInUeBNsJvKa5nvy07kJZcxcPCQ9uoT+RZYCyPZ7c0GwjcirQi/yWuaByl7UUUWH0JcohTMtE6zDFQTBFpSENlwPxFvObunMV8reQs+7/UbrLDTrmCQ5XEGwhScvC0+4Xhc9gaWdhmQYq2beYF+hl2xYgf/AQzkLTZBwvW4monXOsXWf2lPoK+MU/qOL5VRTQcL1+vkAVM/3whjCh0fo2/NxDckE63xyQbCFJ69pWU9+Oi/GDU6H7VvtI/T1d98C8ABwkZiRICIPiouABz6+Izxj9ZCnwPprvqUCu4EEMSUhkilr3C60cFMJZGpPRVGoa86F3KMrhxusg+RF5ELEe/LqyBE5fs0sU87QSyekQs/NzgSlbsZKjhEECdcbTzZK3bx4cHpkCn3rPXeCUm6sihqCENEir4pMkdcyB6XcX//8jsgTevGXS8A6ML6tmJMQqZREXrheF22BVw+vCN3KdEgm4746NwPlcA0AtogpCZE+JrcRA7WvJm/KlqLW9+jfXjcV5YhzAAvFnAQJ10PKQuVwOz6/+srWF3rl9m8AfTHQR0xKkHA9pPQBfXF5/poIGKMrw4F1GKISkxIi0ZPX2M+Tn3wJ7/k11npCzx3eDeBBIFnMSqgX04dZvBuUEpE3jmTgwcWDOreO0FcohXI4AX4mViw0hDOjJ72eexcqWuZIYZuOyQPxM+VwsbAZD8kmCz1ueDe01k8DqWLGQkNobw2dLpnMOS+vxCwKn9gjNOOtuaRqbT7tHtipZYW++oLBoIx44E4xYaExpIwcy4AP1qFL9oQ8jI+icL0u7sRwxi8dM7DlhG5WHAe4H4gX0xUaS/vBw+kz72MoLwiZ2G28hBYs8cD9ZtmRFhJ6ZTn+cP0hMVmhybHouEvp/eePMUtCE8aXRF+4XhcPgUqlsiL8Qs8d1w9kAk4IhdjHX0b/t9ZgHm262Fu4xlsk8LPFo3qGV+jPKVUbaskRx0JI6DA0m75v/NOajW9kGB8D4Xpd3INS/LKRfdUooQ/NAGA20EFMVAgVHc+7gF7PLkaXNc6zx0i4fsazEZg9ppGZK40SujMj0+EXuiCElE6XTKbva19aSTVBevKa2PLkJzPbdXa6IyxC92fBDQCyxCyFcJCSPZp+b3+FLt8bMIwXkYNfgwMWD0oLg0c3DJAjlYQWEHuvOYvQpQV1vh+DY/JAzKMRKfDBCT1vM6B6ASOkf4Vwk3bZFPrM+wzz+L4zPHkMjskDMQJUL/I2BfXLQRWeyB2RCajfAI9G4hW3u3wa7k51pweWbd1KxbqVjftCpTCLCjB3QZsZI0gYPB5nm3bUHNxLxT//SvnX4ByUinInNrKlmpQrr8PZpk2d7x5fv47q/A11vudbt5uuz/0B0+s9s7kOBwee/z0q+cw6Y7rqGF1m3Udd91kpxYGX56DiEoHT3jd9pF5zK0ZcXEjukeGOp8dt96CcrqA/U/zNGvJvuAAjuTOlHq/dika0BP8J+rGcjYWhEnoWQDGRONvu9TB06VoS0rvW+fbe5cvY89vgM3XNPbtpN+v/0mXCBFLHXVa36MpLOfDJUg4smEf1xk9RbbsH/QA5d/k3uDuk1Pn27rdfZ+8TD6AcZ4ZkHaf/lD4PPBbwq79QCmd25pnXs243Y+q5xz88/XsOzJ+Lcied+oanhJGrD+Bwu1v19h76dCkbb59MdXK6yPpMjgIpORv3h2yM/hMidUlNgen1BPahPm/Q3tZITGDQZxsY+MhTAUUO4EhqQ9dp1zD8nU/o+sCzjVr/1V5vPW31BX4Aeb1h6T6rParOjq2vX1ssjL9kEn1fWIxZWiiyPpMOfm02X+i52d0B7orq7lKK+J69yV6+gbb9hzbqo1k3383QD3OhsuX2Wsca3S+bzKh3vsY8LmKvg7sWD+7SPKFvuvEqUAbAqKjtJq1xucsZ/NIHOOKbVjg/oXM6A9/7Dr22QMwuTHTOHsXw1/6BPlYoD9RTGYUyWHH99KYLvfz7NQDXA22i1pk7FOd+ug9HUvOK5LTp048eSxeBTBiFja7jL2Hw8wvRJfulM04yPeD60i1fNSN0t56cj0etM6+pIvWqG0M2s5wxcSr6m71iemEka/J0shesxFciYfxJPN5QlBNQ6N/ffRugOgMZUevN9x6i572/C+l3Dtj0DdSUiemFkfTzxjFywUp0qYTxtT4GVOev7prVeKEfy10GMBhwRGvvtL/nfpSrfm++689/5AulWKkUuUpxZPWqen8/uVdfjJQMMb1wi330OAbP+Ru6WMJ4v0YHF3/xYRNCdyu97t6o7RrTpN2ocfX+yrfXXMSBeXNwZmfiys6E7Ey23noFe995JXCPx7txZvUX02uJMH7KDIa99jFm2SHpDLi3vpTY+sbobmBi1I7PK4/hbht4Aq5s104qtm3j9M5TiR0pfO2v6ECTbsrAndZRJuVaiG4XXsbIN7/ArDhMjB8tMNGv2eCF/u3VkwEmRXOv6OoynAmBl9O8Hi/K6az7vR9yoZ5sM1fbZLTpFRW2EF1Gjmbos++ii/bHutgnffZ/coIXeuUPmwGmRXWXaGpzBJr22XpQSjX4O0JoyZw4lcEvvu/37DHLtIqt6xsRulszmaPEfARbjdknTWPEG//ErDgaq10wKtAqxBlCX3WWAnAB54jpCHYjfdT5DPvLInRxYSyG8ecArkWdVMNCN1LSAW4VkxHsSveLJzDg2bdiNYPuVkfnjg0LXSknwEwxF8HOnP2Tazj39c8xK0pi7dJnKsMZxBhdKTfQW0xFsDtdx17I8PmLrQy62Anje6MMd71Cz7vtRoAkIFHMRIgWsfd/aoF/6S0mSASSVs28IbDQSzZ8DtAHiBMTEaKFntOvY8irSzGrYmIPQhzQ59iaT+oJ3a115RliGkK0kXnpRLJfWYquOh4LlzvDX7U50BhdAVwlZiFEIxmjxzLgj6+iD0T9FterTp+TOH0yzg30EJMQopWzr5zBgBf/Fu2evQen5b2fLnRJkhFiQuzDX/kIs7oymi/znDqF/u01OSDLakLMhPHjGPLsG+jDURvG9/7s6ivPFHrlzo1gna0mCDFB1uWT6ffM6+joLEs1oCJ/dR2huzXjPlBuvxBL9Lr6Boa+8ilmTU20XdpAlCPgGF1KowgxR/cLLmbYC2/7M+iihv51jtH99JXbLsSm2C+h7x9eQx+KGrH3PUPoS6w9rPFEcSFIQWiI3tfcyKD5H6I9URHGO4D4+f796QaAv3LaMLnVQqzT44oczn3xPXR1eTRczrC2J3t0oxsAg+Q2hwipNW5ruo4ZT7/H/oq51/Zh/CBH25OEruKBWFtaM8Cs5/TSenXsrn+EY3q8Inab02v6NfR78U27e/YBKvkUobc9Y/Ae9U43oSPessC7mdzJiZjlxXV667ih01FGYCFXFx9HOZyiFruP2adfy7CXPqz3qOsIp6/fiVtCdySnAXSJKaG7k6g8Uhzw/YSM7vSc8zbmjt0nSjtrrxcKCzjnd48ErCC\x00\x00\x00\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\x00\x00\x00+,\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"createdAt\":\"2021-01-11\",\"description\":\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.5\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAkF3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtpdhu5koX/YxW9BMzDcjCe83bQy+/vIklJlq0a3uly2ZTIZCYSEXGHANLs//3PMf/Df7XmbGIqNbecLf/FFpvv/FDt89/z6my8/97/Tn995n5933x84Hkr8BqeX/N+Hd95P31+ocTX++PX902Zr/PU14leH7xPGHRlzw/rNcjXiYJ/3nev303zzw89f7md199Q7ik+Dv7+eyxMxkq8GbzxO7hg77/1uVJ4/nb+Zv51IXEg//Jz5BO9X3+fP/MxdX+YwI+fvs2fna/3w+d0PCd631b+Nk+v91368/zdWfo6Iuc/ruy/\x00\x00\x00,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\x00\x00\x00-Q/A9Z7s9hwU5LDB3Iej3VoIDwyG7KllKSSwpiKKGkwgfrDJe+hDbXdACCTI7fD1N2ZszQbqCv8MFzYgwQwggTgBxVChj0VxyZe6o59qNh0MYOMoxUYFRXTpbckZEkifyMwWWhywRZgwQG8aAqLOapGa6HTjFbSe+n5gswNtxO6B0JQ2RAurIgcwYeiiES/ub4EunO2Tv+3TqoGzQgCEwIuQvogdrKv1Zt8+BmoTU+fAKHugrflcElDvyOQWoYUC0vdZk4PeakReg5kIK+3PrB0WjLjC3AwYOIEpt1A6FE0pQrc4K6k7VDnxvQTbk8Y2YpdBjlPqhmJiA6TKARemiA2CGLsVGAVPdyONcxPNgHgKlkc8D975JSED9UPqzZLsAbFCFtG5qC5AJU5oYUdBBvXpurynj9jF05BNKg/ugPP2ohnQAprC1TP6i0luQ4KKC1V7Fu6tPiNifIbrSEtm6XjM2b1/z6XaGtUwgqZWGcEdTUsND3d2Wk4ZwQQbwIIOHlKYfvx+uGmjdvL8Bsry+QT1fdUoKQNxOrTSSlvInexai4CD3R8oM71B/48qzjs1iqjouat1J5+AGSQBpx/FGvDrbff/Sn75jvn4pClnslOyjDNW5QgShcE4ja/YjDMe9eUw8UT/W3eJ0PR9YZL+ahAFLiJW5V/FIeu4SD9BusylyQsDmEoYg72EMqx6exgRnmN5fzR54pYNS4MjAZqOaFyPuhFrME1UhDIRkJDpRkANdP2OURbyyZsY7kdixIhqHwdValld4khU1uVwqwILX4pluBq18P1HHDsolv6ap6m0djCuKhkHkQwnt2yivi9mB2oeIEBisulnvz6NUoDa1S2MaCO0DHYErndmBItUii/iee++dCd4al29FNdLieK7MaCOzSug0h4yU++L+juH2MRv3y1sjoEwGmXMvr4Z+VLN8CyDRL0JGAFVxdG7PO0dIjwezMer+DnZMdRWVtShETYS/KwXotfy0BZmD+kVFTxhWMNrAZI9d937/Wd8vxAr2WcseSAC11tDCPX4gKJDzCXnZCEK12rnUEfLKf4Cta7kBmgrhCGAucCPasjoJYBOHV/vhJ9RvQESU0Bla1BpLcddP4FCmvLIA9Gf8LN/w0whANTWACIrFK4gQxmAgjCOjJmF2oRhzHTh7FuEgFZViw6rBTo51pLZ2IKi5NTDCldys8pwHPhvoKQQRzhKeddI3fHshRFAVag9oCYNhcQFScC5qTWAyRWrwSZsyqrjXW1+n3SK4wljLF+1gi6X/GRHq99WW7PFCnbmscEr8O20drrZ2V1srxSpC8kQ166dcezNHXTCQHxWBe8hMtx/QA+BZC8XLRHvZboztpH6jllBwoh6g1QLUXUNkCgC2JcVIKsXs2x7dbcTloZJE8whHiBimLIwKWGQUGQ8KdzNhJaMHPfKr1UramOxDxwjYvMEH4AgxVFGc6olGMsXjcUivMiXZNImkbssSbnDtdcPB4nhDMrgk9EURdY6MxMYkKKvBgqqGk2QUIqRoBQbTjgEV2Q/oRouEAASDKBjVSWbf9XlUWI6CI5ht5aIlIG5B8SkdvoxaeooQMiC799ReAy2VSLatH3V2KRXxIFu6PROBGRXsi1L7RDgJ0NFuSxax5oAKpBiOM06+zhVUzsJsTYwel3N5c4BKLaFsCB4T0icpynBbjVMiHbfQYyb7ojoXG3c0tKDjHlD/jreix1sOwlvKkbHKNDT88oGbSQ2/EEkM2EjqY8ZJS86w0GqnyrLCZdtJLG6RJLoBmRq4QK2WMFIiwkay2mm0DMmaWTBTjN5xSfTaDlyzoW3Wv9Tb5i24s+rPaflPk++w70mWPCdBoerTYQNRIThgBod+1UIDBlYkWceI14uAsonkKAs3ENpAeJHlUUv7aEhcPI4CKNg9BqwRtbeIhhMjUYqd2cDak9mAcmfuCxDP9wk+uAArUUH4GaYU0wE/5REY8eUH7SCSuiTZyVMtv0iHYmr6bBhsuS4rW0e5JxuYUfVG410zoAzEG0huJNmLNSIplNQYSbXCe8sMsW+gUJr2ntToI8r+Bj6E8SDOUHe3/taiGqhaxJKsKDrcLHxnVJuKUojqkuNrtLJ9wP8ENscp7OoYBc9MAwfNt0ladizx+NKWMun2pRrcBnxVoCElteHsvZgHh9AYlCkubHjwIwO7KEwgecwguXF5BAg2uagxtd6NKfGI1uDTcjJEHIEZRjRk6SDG5XLgeu2zO3WpE+AxGC+0vcN+qydRH+skgnjQ2oOG6koAmzdd8isxa5E0Uzfu3K4PFoJK0NIepBCBZcJJnRSt/MXxFprfuKG+TtZe4pBBO8xxbU2ej/OVj6ES1TfHU/LaOMBsYFEcZgR1jd++g4roYq0tEtdkqGGHPQ+RQssLoKmIalBlkPqg19ICMKR7hRVCB/DrVmivxvDUKhc3lOERpJ9axTtbWAt3iSo7TjuWCvJpMKaMbaWkmL/rtTshh4PgVhkyGLJtrao7JruJBkoEBBYAdaBnSUjUSq9AtGsgYhq6ezAlOrDqJC2oNuYkhqmFiw5SW4N6RXL6TaghtaYFNqgbQnRqqs0Q5Ngc3AgQDFK1X0SoEdCPpDglXe1CEJmWyEQvfF1Mz6Tk5lA/RzQQtQ+CiCzIimgAkU7N2sNko5tHD0JwjDL1ZQ24vNbd1LHyI/fSo6VtkupF/UqqqnoRJygyezc2kOy5eG1VgfdgvFOMhajD0dYPdUy7Yl971VI8oSPDofdA+WkjylJLT0sjJKHTTOHhoI29BYBmTlKvSNa1gfU6vQygMHURL8xHEEZIYxOmuLx1U5upEoQ/KS3lBaTcARZrgKEeteQyoRmk0gHPljo3meuS7lkbEUS/E6WWnJ1tcHdorwYJ7pHA1YRySAbwGLpfdAIJxK1AxmH5R8W5ebwad15Yge8kjlBQVptJ6H/718w5uvAY9IUWVmE+PBL6AKWEguIT30iDDVBeZxuvKLK1h+yrhCxWAApH5yIwRs7biFIDp8aOcby9YgvYgWHwh5R9u2ZZnCMgSRES58oMKGNFMoiu/RptLooWoETsFKEAF8KsonHBBRJGzSv4/jAqnLNcJU50XyfabjcmvozrTsVocYVP4tN3lccQ0qjh8cOXcOIAsBaPgVamySEXRptGq1vTJ1RZKQ/k9/qCfLD9j6sTWqVJIFcdKK6d0F0Z8B+kkLbdeRknGAwZJ5/AkObozEVKgA+VUbK2/dx28jMXqQWpKJKqTKD3Mm1GGTLT1+1IcZA4ZyFkShkeB0B1gmfaQDK0PJ5AMkyclmUXjitzh4TbRLREBOdBurUn9SnncO7qBlwgr55a9dMJZxANXu3A59at3MMLz081fwD09uIDgOzFBw8biAu6doKimUgrZIKgSLQdVjXADzovKceUb9JYyHzInjJGZGe00Mgb8Nm3D+HVH5RjabDomNexdLfGMrIs7c7OY1oUK9yhVs2gDUTuNSHa/YRdWfZPfRFGYt2rxUpWfrUNoIQT3iLhkGcRR3QAQooPaiHmqJL4qJIpt444u0ILQdj3VY4/9EPS0w+BbSvf52QUtXwuok5eqnlAAHfkQ35aK9y0VtXTXcgIj+iL6g3fUGAYySlYsz9DbcrfdHC/TXttOJFFcJMgZzE/OIUT8IjhR7g9WHzdInhnpc6fDiZK2RxQP0qtIVN1jemeboeaIfKVU7c376LhuTqOMKAfESnwEGWYuG0UyTEiZO4/FuUL90+ePj0QahZ/p4aF1fYvbUASjPEx6ghFwT2HtyTH6mmONOB+cgtH2I/QJgHQPNf7gJwSTIwK7YXe0fjS7ZkzWVlpXR6JbJ52yVsiryhR8aTEeHVjStImnHoDrvZH+mh/pCcJtOTrDG5fd0Qda48EYboApVXJ+Jbp+7nqTyD16rHtZ+H4v/jqezwABBNuiNadZG5KCTKflWSYfUJFv2yKJJ5OLmRjLkLTnjLKl+8x2405kqA/vRHv2OVgQTCtbECzDcwiKiMLDME07VMoflZASSdAM2txvN09JKhapIaaRskCU2obx6E9e/aNUvjIB6Vcx/qgmmD1PUlrKqPhygvwhybb1ail0q94VUTrFa8D8WrR\x00\x00\x00.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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x003LwF+KyIXopzfovWSuPRecHavVmlAq4TuJ/hyJbmzbwTrKOZ76vtVqfEm2JQ5wOwr/rQA57gLW60RRqt2wZjxjH70zwCzCVCVRmq8CTZmPjD7wifntarIW1/oAJdPwtE2FVAzgUUSrgtRwiJgprNdGskTJrV6Y1o3dD+JVVkKR1p3QC0BJkmNN8HGLAUme/cUMq04MvRlRErPjC3QdBg9EaxTXz6WU00Fm/IxML3juJyIEXlEefRavhrWhXLlalPt870LXC52I9hM5DO0p6J0ynfHIqphESd0gA8HdEA5E9zAe8AksR/BJuH6dO2pqI40kUdU6H4yU/KOkjo+pxqYzGkTdIIQgSwCJncclxORIo9Yj36i91IUzu7pCngJuEXsSYhA5gMzvXsKdSSNyW3h0WuZVqxxtEvTwK1YiQeCEEnMAW51tkuLaJFHvEevpWz5Uv553yyA+4FHaMJGGEEIIV6s1O0nLnxyXkSsk0eF0AG8X67ko7uuAVTtuF3ELrSWyKeh9ZIr5r6Fc9wFtmi0YZfedY4ZT1zns0GbS4BBNGM/uyA0kWJgENpcEpfe0zYit5VHP8EPO/hrz95kDE5PAz4Chon9CS3ABuCKfZsKD92xc3ur7UKLeo9+grN7cbvWuFLSDwEjsepvCUI4eRUY6UrtfugOrW0ncnt69JP4oLvCkZIOMBOYJ/YohIFZwEu+I4W0dPknEfppLB6SAdZ57G8RxkMihJhiJ9ZZBOtaslqrCL0BFnVRODung5WKOFHsVGgGy4BJ3gOFtFTddRF6I3hFKVIHpxtADvCB2KvQBKYCiw9vKjRviSJtGNF0h27WmvYjLjGBvwO9sM6cFoRg+NyyGf339iMuiSqRR51HP5n3lCJucDrAA8CDQILYslAHlcDDwB9qNhUyPUr1ELVCB2BbPstvno6n/Fiqf9yVLXYtnMQ6YKKrXVrRhBffhHP6Re2FRrfQ/Xw4oCPK6Qa4GWsjQlux8ZimBKvq8CvaW8WUvOhPsowJodeyeHA6KOXGSoC4Ruw9JnkbuAmtq3M2FcbMRRuxdIdzNhXScfSEaqz10YHAVkCL7Uc92n+vBwLXpo6dFFMijzmPfko4P7ATyuFyABdjlaxKFj1EJWVYBUc/0z6Pb8qWwzHZCUas3v0pWw6T1Ge4D60/AdoD/wUUiS6ihiL/PW2P1p8k9R0RsyKPaY9e1/hdKYWGp4E7gXjpFVtSBbyglLpXmz5yNh2QHhGhn8pCpXAP7gKoeKxqNg9Jr9iKh4An0LqqevMBrhLbFqHXx9Lz+mJWlgCkAj/DWorpID0TkRzFWjKdCxQZCe2Y9PX30isi9EZQWc7i83phnQLHbP8rSzomIijAOoX3GdDkfL0DEpKkV0ToTeeXSjE2C5zt0h3AAKy97yOkZ1qFtVh7xPO8hwp9qw7AU2LDIvRQs3hQZzAcYG2auRr4pYT1LRKePwW8A+zA9JGz+aD0igi9BVjxKYt/cUNtWP8T4C5gFNBGOicklAKrgeeB90GT8/IiGD5KekaE3kocL2bx+IG1/7oeeBzIABzSOY3CB+wHfg0sAIiG6i6RgCFdEALapZCzcT/JfbNBmwuATKAr1mmwy6SDGmSZv6+6Aploc0Fy3xEicvHokc+XM2/g6Np/gDIA3Finwk7zh/fnxHj3bPWH5YuwSn9Vo01SRl3O+S++JsYjQrcvn155KZUFebVjehfWeXIzgd5AIhAXpZdeA1QA27EOy3wZ8IAmocdALvngEzEOEXoUYposSnfg6JSKcrhqvX0S0AeYAVwF9LD5Vf4ILATeBbYB5aCrtc+L73AR0w6YoJTYggg9tvjihhkc37TKb/yqVvzn+L39AKztlf2BvkTOBJ8PyAe+A7YAeX6vvRWoBg1a027oeMa99o7cZBG6EDDcnziOyn07Tvd+8VjHUA3yPwT6Al38P4/3PyTc/uGBC+swyoYmXU2swwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\"]}],\"serviceAccountName\":\"windup-operator\"}],\"deployments\":[{\"name\":\"windup-operator.0.0.5\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"\x00\x00\x004name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.4\",\"version\":\"0.0.5\"}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.4.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\",\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"createdAt\":\"2021-01-11\",\"description\"\x00\x00\x005:\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.5\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00: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\x00\x00\x00;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\x00\x00\x00<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\x00\x00\x00=wwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\"]}],\"serviceAccountName\":\"windup-operator\"}],\"deployments\":[{\"name\":\"windup-operator.0.0.5\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.5\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.4\",\"version\":\"0.0.5\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"labels\":{\"application\":\"windup\"},\"name\":\"windups.windup.jboss.org\"},\"spec\":{\"group\":\"windup.jboss.org\",\"names\":{\"kind\":\"Windup\",\"plural\":\"windups\",\"shortNames\":[\"w\"],\"singular\":\"windup\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"auto_deploy_exploded\":{\"default\":\"false\",\"type\":\"string\"},\"db_database\":{\"default\":\"mta\",\"type\":\"string\"},\"db_jndi\":{\"default\":\"java:jboss/datasources/WindupServicesDS\",\"type\":\"string\"},\"db_max_pool_size\":{\"type\":\"string\"},\"db_min_pool_size\":{\"type\":\"string\"},\"db_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"db_tx_isolation\":{\"type\":\"string\"},\"db_username\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"docker_image_executor\":{\"default\":\"windup-web-openshift-messaging-executor\",\"type\":\"string\"},\"docker_image_web\":{\"default\":\"windup-web-openshift\",\"type\":\"string\"},\"docker_images_repository\":{\"default\":\"quay.io\",\"type\":\"string\"},\"docker_images_tag\":{\"default\":\"5.1.4.Final\",\"type\":\"string\"},\"docker_images_user\":{\"default\":\"windupeng\",\"type\":\"string\"},\"executor_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"executor_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"executor_desired_replicas\":{\"default\":1,\"type\":\"integer\"},\"executor_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"executor_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"executor_mem_request\":{\"defaul\x00\x00\x00\x00t\":\"0.5Gi\",\"type\":\"string\"},\"executor_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"gc_max_metaspace_size\":{\"default\":512,\"type\":\"integer\"},\"hostname_http\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"jgroups_encrypt_keystore\":{\"default\":\"jgroups.jceks\",\"type\":\"string\"},\"jgroups_encrypt_name\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_password\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_secret\":{\"default\":\"eap-app-secret\",\"type\":\"string\"},\"max_post_size\":{\"default\":\"4294967296\",\"type\":\"string\"},\"messaging_serializer\":{\"default\":\"http.post.serializer\",\"type\":\"string\"},\"mq_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"mq_queues\":{\"default\":\"\",\"type\":\"string\"},\"mq_topics\":{\"default\":\"\",\"type\":\"string\"},\"mta_Volume_Capacity\":{\"default\":\"20G\",\"type\":\"string\"},\"postgresql_cpu_limit\":{\"default\":\"2\",\"type\":\"string\"},\"postgresql_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"postgresql_image\":{\"default\":\"centos/postgresql-96-centos7:latest\",\"type\":\"string\"},\"postgresql_max_connections\":{\"default\":\"200\",\"type\":\"string\"},\"postgresql_mem_limit\":{\"default\":\"2Gi\",\"type\":\"string\"},\"postgresql_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"postgresql_shared_buffers\":{\"type\":\"string\"},\"sso_bearer_only\":{\"default\":\"\",\"type\":\"string\"},\"sso_disable_ssl_certificate_validation\":{\"default\":\"true\",\"type\":\"string\"},\"sso_enable_cors\":{\"default\":\"false\",\"type\":\"string\"},\"sso_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_public_key\":{\"default\":\"\",\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_realm\":{\"default\":\"mta\",\"type\":\"string\"},\"sso_saml_certificate_name\":{\"default\":\"jboss\",\"type\":\"string\"},\"sso_saml_keystore\":{\"default\":\"keystore.jks\",\"type\":\"string\"},\"sso_saml_keystore_password\":{\"default\":\"mykeystorepass\",\"type\":\"string\"},\"sso_saml_keystore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_saml_logout_page\":{\"default\":\"/\",\"type\":\"string\"},\"sso_secret\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_service_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_truststore\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_username\":{\"default\":\"\",\"type\":\"string\"},\"tls_secret\":{\"default\":\"\",\"type\":\"string\"},\"volumeCapacity\":{\"default\":\"20G\",\"type\":\"string\"},\"webLivenessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webLivenessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webLivenessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"webReadinessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webReadinessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webReadinessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"web_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"web_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"web_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\",\"type\":\"string\"},\"web_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"web_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"web_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\",\"type\":\"string\"}},\"required\":[\"web_cpu_request\",\"web_mem_request\",\"executor_cpu_request\",\"executor_mem_request\",\"messaging_serializer\",\"mta_Volume_Capacity\",\"db_database\",\"volumeCapacity\",\"sso_url\",\"sso_realm\",\"docker_images_user\",\"docker_images_tag\",\"max_post_size\",\"executor_desired_replicas\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"items\":{\"properties\":{\"lastTransitionTime\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"reason\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\nquay.io/olmqe/mta-operator:v0.0.5-18690.0.5windup-operator.0.0.4\x00\x00\x00?       \\\"enabled\\\": false,\\n        \\\"interval\\\": \\\"10s\\\",\\n        \\\"labels\\\": {}\\n      },\\n      \\\"statefulset\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"args\\\": [],\\n        \\\"budget\\\": {\\n          \\\"maxUnavailable\\\": 1\\n        },\\n        \\\"env\\\": [],\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n        },\\n        \\\"nodeAffinity\\\": {},\\n        \\\"nodeSelector\\\": {},\\n        \\\"podAffinity\\\": {},\\n        \\\"podAntiAffinity\\\": {\\n          \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\",\\n          \\\"type\\\": \\\"soft\\\",\\n          \\\"weight\\\": 100\\n        },\\n        \\\"podManagementPolicy\\\": \\\"Parallel\\\",\\n        \\\"priorityClassName\\\": \\\"\\\",\\n        \\\"replicas\\\": 3,\\n        \\\"resources\\\": {},\\n        \\\"secretMounts\\\": [],\\n        \\\"tolerations\\\": [],\\n        \\\"topologySpreadConstraints\\\": {\\n          \\\"maxSkew\\\": 1,\\n          \\\"topologyKey\\\": \\\"topology.kubernetes.io/zone\\\",\\n          \\\"whenUnsatisfiable\\\": \\\"ScheduleAnyway\\\"\\n        },\\n        \\\"updateStrategy\\\": {\\n          \\\"type\\\": \\\"RollingUpdate\\\"\\n        }\\n      },\\n      \\\"storage\\\": {\\n        \\\"hostPath\\\": \\\"\\\",\\n        \\\"persistentVolume\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"enabled\\\": true,\\n          \\\"labels\\\": {},\\n          \\\"size\\\": \\\"100Gi\\\",\\n          \\\"storageClass\\\": \\\"\\\"\\n        }\\n      },\\n      \\\"tls\\\": {\\n        \\\"certs\\\": {\\n          \\\"clientRootSecret\\\": \\\"cockroachdb-root\\\",\\n          \\\"nodeSecret\\\": \\\"cockroachdb-node\\\",\\n          \\\"provided\\\": false,\\n          \\\"tlsSecret\\\": false\\n        },\\n        \\\"enabled\\\": false,\\n        \\\"init\\\": {\\n          \\\"image\\\": {\\n            \\\"credentials\\\": {},\\n            \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n            \\\"repository\\\": \\\"cockroachdb/cockroach-k8s-request-cert\\\",\\n            \\\"tag\\\": \\\"0.4\\\"\\n          }\\n        },\\n        \\\"serviceAccount\\\": {\\n          \\\"create\\\": true,\\n          \\\"name\\\": \\\"\\\"\\n        }\\n      }\\n    }\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Database\",\"certified\":\"false\",\"containerImage\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"createdAt\":\"2021-01-23T10-00-00Z\",\"description\":\"CockroachDB Operator based on the CockroachDB helm chart\",\"operators.operatorframework.io/builder\":\"operator-sdk-v1.3.0\",\"operators.operatorframework.io/project_layout\":\"helm.sdk.operatorframework.io/v1\",\"repository\":\"https://github.com/dmesser/cockroachdb-operator\",\"support\":\"dmesser\"},\"name\":\"cockroachdb.v5.0.4\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Represents a CockroachDB cluster\",\"displayName\":\"CockroachDB\",\"kind\":\"Cockroachdb\",\"name\":\"cockroachdbs.charts.operatorhub.io\",\"resources\":[{\"kind\":\"Deployment\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Service\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ReplicaSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Pod\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"Secret\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"PersistentVolumeClaim\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"StatefulSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Job\",\"name\":\"\",\"version\":\"batch/v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"CockroachDB is a scalable, survivable, strongly-consistent SQL database.\\n## About this Operator\\nThis Operator is based on a Helm chart for CockroachDB. It supports the same parameters like the official [CockroachDB Helm Chart](https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb).\\n\\n## Core capabilities\\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://git\x00\x00\x00@hub.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\\n## Using the cluster\\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\\u003cStatefulSet-name\\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\\n```\\nkubectl get service -l chart=cockroachdb-5.0.4\\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\n```\\nThen you can use the CockroachDB command line client to connect to the database cluster:\\n```\\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\\n```\\n## Before you start\\nThis Operator requires a cluster with PV support in order to run correctly.\\n\\nNote that for a production cluster, you will likely want to override the following parameters in [`values.yaml`](values.yaml) with your own values.\\n\\n- `statefulset.resources.requests.memory` and `statefulset.resources.limits.memory` allocate memory resources to CockroachDB pods in your cluster.\\n- `conf.cache` and `conf.max-sql-memory` are memory limits that we recommend setting to 1/4 of the above resource allocation. When running CockroachDB, you must set these limits explicitly to avoid running out of memory.\\n- `storage.persistentVolume.size` defaults to `100Gi` of disk space per pod, which you may increase or decrease for your use case.\\n- `storage.persistentVolume.storageClass` uses the default storage class for your environment. We strongly recommend that you specify a storage class which uses an SSD.\\n- `tls.enabled` must be set to `yes`/`true` to deploy in secure mode.\\n\\nFor more information on overriding the `values.yaml` parameters, please see:\\n\\u003e \\u003chttps://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-kubernetes.html#step-2-start-cockroachdb\\u003e\\n\\nIf you are running in secure mode (with configuration parameter `tls.enabled` set to `yes`/`true`) and `tls.certs.provided` set to `no`/`false`), then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nWhen `tls.certs.provided` is set to `yes`/`true`, this chart will use certificates created outside of Kubernetes. You may want to use this if you want to use a different certificate authority from the one being used by Kubernetes or if your Kubernetes cluster doesn't fully support certificate-signing requests. To use this, first set up your certificates and load them into your Kubernetes cluster as Secrets using the commands below:\\n\\n```\\nmkdir certs\\nmkdir my-safe-directory\\ncockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key\\ncockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key\\nkubectl create secret generic cockroachdb-root --from-file=certs\\ncockroach cert create-node --certs-dir=certs --ca-key=my-safe-directory/ca.key localhost 127.0.0.1 eerie-horse-cockroachdb-public eerie-horse-cockroachdb-public.default eerie-horse-cockroachdb-public.default.svc.cluster.local *.eerie-horse-cockroachdb *.eerie-horse-cockroachdb.default *.eerie-horse-cockroachdb.default.svc.cluster.local\\nkubectl create secret generic cockroachdb-node --from-file=certs\\n```\\n\\nSet `tls.certs.tlsSecret` to `yes/true` if you make use of [cert-manager][3] in your clu\x00\x00\x00Aster.\\n\\n[cert-manager][3] stores generated certificates in dedicated TLS secrets. Thus, they are always named:\\n\\n* `ca.crt`\\n* `tls.crt`\\n* `tls.key`\\n\\nOn the other hand, CockroachDB also demands dedicated certificate filenames:\\n\\n* `ca.crt`\\n* `node.crt`\\n* `node.key`\\n* `client.root.crt`\\n* `client.root.key`\\n\\nBy activating `tls.certs.tlsSecret` we benefit from projected secrets and convert the TLS secret filenames to their according CockroachDB filenames.\\n\\nIf you are running in secure mode, then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nConfirm that all pods are `Running` successfully and init has been completed:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     STATUS      RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running     0          1m\\nmy-release-cockroachdb-1            1/1       Running     0          1m\\nmy-release-cockroachdb-2            1/1       Running     0          1m\\nmy-release-cockroachdb-init-k6jcr   0/1       Completed   0          1m\\n```\\n\\nConfirm that persistent volumes are created and claimed for each pod:\\n\\n```shell\\nkubectl get pv\\n```\\n\\n```\\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                      STORAGECLASS   REASON    AGE\\npvc-64878ebf-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-0   standard                 51s\\npvc-64945b4f-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-1   standard                 51s\\npvc-649d920d-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-2   standard                 51s\\n```\\n\\n## Upgrading the cluster\\n\\n### Chart version 3.0.0 and after\\n\\nLaunch a temporary interactive pod and start the built-in SQL client:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\\n\\n```sql\\n\\u003e SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\\n```\\n\\nExit the shell and delete the temporary pod:\\n\\n```sql\\n\\u003e \\\\q\\n```\\n\\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\\n\\n```shell\\nkubectl delete job my-release-cockroachdb-init\\n```\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"image\\\":{\\\"tag\\\":\\\"\\u003cnew version tag here\\u003e\\\"}}}' --type merge\\n```\\n\\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY \x00\x00\x00B    STATUS              RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running             0          2m\\nmy-release-cockroachdb-1            1/1       Running             0          3m\\nmy-release-cockroachdb-2            1/1       Running             0          3m\\nmy-release-cockroachdb-3            0/1       ContainerCreating   0          25s\\nmy-release-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\\n```\\n\\n```shell\\nkubectl get pods \\\\\\n-o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.containers[0].image}{\\\"\\\\n\\\"}'\\n```\\n\\n```\\nmy-release-cockroachdb-0    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-1    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-2    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-3    cockroachdb/cockroach:v20.2.4\\n```\\n\\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n```sql\\n\\u003e RESET CLUSTER SETTING cluster.preserve_downgrade_option;\\n\\u003e \\\\q\\n```\\n\\n## Configuration\\n\\nThe following table lists the configurable parameters of the CockroachDB chart and their default values.\\nFor details see the [`values.yaml`](values.yaml) file.\\n\\n| Parameter                                                 | Description                                                     | Default                                          |\\n| ---------                                                 | -----------                                                     | -------                                          |\\n| `clusterDomain`                                           | Cluster's default DNS domain                                    | `cluster.local`                                  |\\n| `conf.attrs`                                              | CockroachDB node attributes                                     | `[]`                                             |\\n| `conf.cache`                                              | Size of CockroachDB's in-memory cache                           | `25%`                                            |\\n| `conf.cluster-name`                                       | Name of CockroachDB cluster                                     | `\\\"\\\"`                                             |\\n| `conf.disable-cluster-name-verification`                  | Disable CockroachDB cluster name verification                   | `no`                                             |\\n| `conf.join`                                               | List of already-existing CockroachDB instances                  | `[]`                                             |\\n| `conf.max-disk-temp-storage`                              | Max storage capacity for temp data                              | `0`                                              |\\n| `conf.max-offset`                                         | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\\n| `conf.max-sql-memory`                                     | Max memory to use processing SQL querie                         | `25%`                                            |\\n| `conf.locality`                                           | Locality attribute for this deployment                          | `\\\"\\\"`                                             |\\n| `conf.single-node`                                        | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\\n| `conf.sql-audit-dir`                                      | Directory for SQL audit log                                     | `\\\"\\\"`                                             |\\n| `conf.port`                                               | CockroachDB primary serving port in Pods                        | `262\x00\x00\x00C57`                                          |\\n| `conf.http-port`                                          | CockroachDB HTTP port in Pods                                   | `8080`                                           |\\n| `image.repository`                                        | Container image name                                            | `cockroachdb/cockroach`                          |\\n| `image.tag`                                               | Container image tag                                             | `v20.2.4`                                        |\\n| `image.pullPolicy`                                        | Container pull policy                                           | `IfNotPresent`                                   |\\n| `image.credentials`                                       | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `statefulset.replicas`                                    | StatefulSet replicas number                                     | `3`                                              |\\n| `statefulset.updateStrategy`                              | Update strategy for StatefulSet Pods                            | `{\\\"type\\\": \\\"RollingUpdate\\\"}`                      |\\n| `statefulset.podManagementPolicy`                         | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\\n| `statefulset.budget.maxUnavailable`                       | k8s PodDisruptionBudget parameter                               | `1`                                              |\\n| `statefulset.args`                                        | Extra command-line arguments                                    | `[]`                                             |\\n| `statefulset.env`                                         | Extra env vars                                                  | `[]`                                             |\\n| `statefulset.secretMounts`                                | Additional Secrets to mount at cluster members                  | `[]`                                             |\\n| `statefulset.labels`                                      | Additional labels of StatefulSet and its Pods                   | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `statefulset.annotations`                                 | Additional annotations of StatefulSet Pods                      | `{}`                                             |\\n| `statefulset.nodeAffinity`                                | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\\n| `statefulset.podAffinity`                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\\n| `statefulset.podAntiAffinity`                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\\n| `statefulset.podAntiAffinity.topologyKey`                 | The topologyKey for auto [anti-affinity rules][1]               | `kubernetes.io/hostname`                         |\\n| `statefulset.podAntiAffinity.type`                        | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\\n| `statefulset.podAntiAffinity.weight`                      | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\\n| `statefulset.nodeSelector`                                | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\\n| `statefulset.priorityClassName`                           | [PriorityClassName][4] for StatefulSet Pods                     | `\\\"\\\"`                                             |\\n| `statefulset.tolerations`                                 | Node taints \x00\x00\x00Dto tolerate by StatefulSet Pods                     | `[]`                                             |\\n| `statefulset.topologySpreadConstraints`                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |\\n| `statefulset.topologySpreadConstraints.maxSkew`           | Degree to which Pods may be unevenly distributed                | `1`                                              |\\n| `statefulset.topologySpreadConstraints.topologyKey`       | The key of node labels                                          | `topology.kubernetes.io/zone`                    |\\n| `statefulset.topologySpreadConstraints.whenUnsatisfiable` | `ScheduleAnyway`/`DoNotSchedule` for unsatisfiable constraints  | `ScheduleAnyway`                                 |\\n| `statefulset.resources`                                   | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\\n| `service.ports.grpc.external.port`                        | CockroachDB primary serving port in Services                    | `26257`                                          |\\n| `service.ports.grpc.external.name`                        | CockroachDB primary serving port name in Services               | `grpc`                                           |\\n| `service.ports.grpc.internal.port`                        | CockroachDB inter-communication port in Services                | `26257`                                          |\\n| `service.ports.grpc.internal.name`                        | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\\n| `service.ports.http.port`                                 | CockroachDB HTTP port in Services                               | `8080`                                           |\\n| `service.ports.http.name`                                 | CockroachDB HTTP port name in Services                          | `http`                                           |\\n| `service.public.type`                                     | Public Service type                                             | `ClusterIP`                                      |\\n| `service.public.labels`                                   | Additional labels of public Service                             | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.public.annotations`                              | Additional annotations of public Service                        | `{}`                                             |\\n| `service.discovery.labels`                                | Additional labels of discovery Service                          | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.discovery.annotations`                           | Additional annotations of discovery Service                     | `{}`                                             |\\n| `ingress.enabled`                                         | Enable ingress resource for CockroachDB                         | `false`                                          |\\n| `ingress.labels`                                          | Additional labels of Ingress                                    | `{}`                                             |\\n| `ingress.annotations`                                     | Additional annotations of Ingress                               | `{}`                                             |\\n| `ingress.paths`                                           | Paths for the default host                                      | `[/]`                                            |\\n| `ingress.hosts`                                           | CockroachDB Ingress hostnames                                   | `[]`                                             |\\n| `ingress.tls[0].hosts`                                    | CockroachDB Ingress tls hostnames                               | `nil`                                            |\\n| `ingress.tls[0].\x00\x00\x00EsecretName`                               | CockroachDB Ingress tls secret name                             | `nil`                                            |\\n| `serviceMonitor.enabled`                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | `false`                                             |\\n| `serviceMonitor.labels`                                   | Additional labels of ServiceMonitor                             | `{}`                                             |\\n| `serviceMonitor.annotations`                              | Additional annotations of ServiceMonitor                        | `{}`                                             |\\n| `serviceMonitor.interval`                                 | ServiceMonitor scrape metrics interval                          | `10s`                                            |\\n| `serviceMonitor.scrapeTimeout`                            | ServiceMonitor scrape timeout                                   | `nil`                                            |\\n| `storage.hostPath`                                        | Absolute path on host to store data                             | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.enabled`                        | Whether to use PersistentVolume to store data                   | `yes`                                            |\\n| `storage.persistentVolume.size`                           | PersistentVolume size                                           | `100Gi`                                          |\\n| `storage.persistentVolume.storageClass`                   | PersistentVolume class                                          | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.labels`                         | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\\n| `storage.persistentVolume.annotations`                    | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\\n| `init.labels`                                             | Additional labels of init Job and its Pod                       | `{\\\"app.kubernetes.io/component\\\": \\\"init\\\"}`        |\\n| `init.annotations`                                        | Additional labels of the Pod of init Job                        | `{}`                                             |\\n| `init.affinity`                                           | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\\n| `init.nodeSelector`                                       | Node labels for init Job Pod assignment                         | `{}`                                             |\\n| `init.tolerations`                                        | Node taints to tolerate by init Job Pod                         | `[]`                                             |\\n| `init.resources`                                          | Resource requests and limits for the Pod of init Job            | `{}`                                             |\\n| `tls.enabled`                                             | Whether to run securely using TLS certificates                  | `no`                                             |\\n| `tls.serviceAccount.create`                               | Whether to create a new RBAC service account                    | `yes`                                            |\\n| `tls.serviceAccount.name`                                 | Name of RBAC service account to use                             | `\\\"\\\"`                                             |\\n| `tls.certs.provided`          \x00\x00\x00F                            | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\\n| `tls.certs.clientRootSecret`                              | If certs are provided, secret name for client root cert         | `cockroachdb-root`                               |\\n| `tls.certs.nodeSecret`                                    | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\\n| `tls.certs.tlsSecret`                                     | Own certs are stored in TLS secret                              | `no`                                             |\\n| `tls.init.image.repository`                               | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert`         |\\n| `tls.init.image.tag`                                      | Image tag to use for requesting TLS certificates                | `0.4`                                            |\\n| `tls.init.image.pullPolicy`                               | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\\n| `tls.init.image.credentials`                              | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `networkPolicy.enabled`                                   | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\\n| `networkPolicy.ingress.grpc`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n| `networkPolicy.ingress.http`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n\\n\\nOverride the default parameters using the `CockroachDB` custom resource.\\n\\n## Deep dive\\n\\n### Connecting to the CockroachDB cluster\\n\\nOnce you've created the cluster, you can start talking to it by connecting to its `-public` Service. CockroachDB is PostgreSQL wire protocol compatible, so there's a [wide variety of supported clients](https://www.cockroachlabs.com/docs/install-client-drivers.html). As an example, we'll open up a SQL shell using CockroachDB's built-in shell and play around with it a bit, like this (likely needing to replace `my-release-cockroachdb-public` with the name of the `-public` Service that was created with your installed chart):\\n\\n```shell\\nkubectl run cockroach-client --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host my-release-cockroachdb-public\\n```\\n\\n```\\nWaiting for pod default/cockroach-client to be running, status is Pending,\\npod ready: false\\nIf you don't see a command prompt, try pressing enter.\\nroot@my-release-cockroachdb-public:26257\\u003e SHOW DATABASES;\\n+--------------------+\\n|      Database      |\\n+--------------------+\\n| information_schema |\\n| pg_catalog         |\\n| system             |\\n+--------------------+\\n(3 rows)\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE DATABASE bank;\\nCREATE DATABASE\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE TABLE bank.accounts (id INT\\nPRIMARY KEY, balance DECIMAL);\\nCREATE TABLE\\nroot@my-release-cockroachdb-public:26257\\u003e INSERT INTO bank.accounts VALUES\\n(1234, 10000.50);\\nINSERT 1\\nroot@my-release-cockroachdb-public:26257\\u003e SELECT * FROM bank.accounts;\\n+------+---------+\\n|  id  | balance |\\n+------+---------+\\n| 1234 | 10000.5 |\\n+------+---------+\\n(1 row)\\nroot@my-release-cockroachdb-public:26257\\u003e \\\\q\\nWaiting for pod default/cockroach-client to terminate, status is Running\\npod \\\"cockroach-client\\\" deleted\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master\x00\x00\x00G/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\n### Cluster health\\n\\nBecause our pod spec includes regular health checks of the CockroachDB processes, simply running `kubectl get pods` and looking at the `STATUS` column is sufficient to determine the health of each instance in the cluster.\\n\\nIf you want more detailed information about the cluster, the best place to look is the Admin UI.\\n\\n### Accessing the Admin UI\\n\\nIf you want to see information about how the cluster is doing, you can try pulling up the CockroachDB Admin UI by port-forwarding from your local machine to one of the pods (replacing `my-release-cockroachdb-0` with the name of one of your pods:\\n\\n```shell\\nkubectl port-forward my-release-cockroachdb-0 8080\\n```\\n\\nYou should then be able to access the Admin UI by visiting \\u003chttp://localhost:8080/\\u003e in your web browser.\\n\\n### Failover\\n\\nIf any CockroachDB member fails, it is restarted or recreated automatically by the Kubernetes infrastructure, and will re-join the cluster automatically when it comes back up. You can test this scenario by killing any of the CockroachDB pods:\\n\\n```shell\\nkubectl delete pod my-release-cockroachdb-1\\n```\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nAfter a while:\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-1  1/1       Running       0          20s\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nYou can check the state of re-joining from the new pod's logs:\\n\\n```shell\\nkubectl logs my-release-cockroachdb-1\\n```\\n\\n```\\n[...]\\nI161028 19:32:09.754026 1 server/node.go:586  [n1] node connected via gossip and\\nverified as part of cluster {\\\"35ecbc27-3f67-4e7d-9b8f-27c31aae17d6\\\"}\\n[...]\\ncockroachdb-0.my-release-cockroachdb.default.svc.cluster.local:26257\\nbuild:      beta-20161027-55-gd2d3c7f @ 2016/10/28 19:27:25 (go1.7.3)\\nadmin:      http://0.0.0.0:8080\\nsql:\\npostgresql://root@my-release-cockroachdb-1.my-release-cockroachdb.default.svc.cluster.local:26257?sslmode=disable\\nlogs:       cockroach-data/logs\\nstore[0]:   path=cockroach-data\\nstatus:     restarted pre-existing node\\nclusterID:  {35ecbc27-3f67-4e7d-9b8f-27c31aae17d6}\\nnodeID:     2\\n[...]\\n```\\n\\n### NetworkPolicy\\n\\nTo enable NetworkPolicy for CockroachDB, install [a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin), and set `networkPolicy.enabled` to `yes`/`true`.\\n\\nFor Kubernetes v1.5 \\u0026 v1.6, you must also turn on NetworkPolicy by setting the `DefaultDeny` Namespace annotation. Note: this will enforce policy for _all_ pods in the Namespace:\\n\\n```shell\\nkubectl annotate namespace default \\\"net.beta.kubernetes.io/network-policy={\\\\\\\"ingress\\\\\\\":{\\\\\\\"isolation\\\\\\\":\\\\\\\"DefaultDeny\\\\\\\"}}\\\"\\n```\\n\\nFor more precise policy, set `networkPolicy.ingress.grpc` and `networkPolicy.ingress.http` rules. This will only allow pods that match the provided rules to connect to CockroachDB.\\n\\n### Scaling\\n\\nScaling should be managed via the `helm upgrade` command. After resizing your cluster on your cloud environment (e.g., GKE or EKS), run the following command to add a pod. This assumes you scaled from 3 to 4 nodes:\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"statefulset\\\":{\\\"replicas\\\":\\\"4\\\"}}}' --ty\x00\x00\x00Hpe merge\\n```\\n\\nNote, that if you are running in secure mode (`tls.enabled` is `yes`/`true`) and increase the size of your cluster, you will also have to approve the CSR (certificate-signing request) of each new node (using `kubectl get csr` and `kubectl certificate approve`).\\n\\n[1]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\\n[2]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity\\n[3]: https://cert-manager.io/\\n[4]: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\\n[5]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\\n\",\"displayName\":\"CockroachDB Helm Operator\",\"icon\":[{\"base64data\":\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=\",\"mediatype\":\"image/svg+xml\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\",\"clusterroles\",\"rolebindings\",\"clusterrolebindings\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}],\"serviceAccountName\":\"default\"}],\"deployments\":[{\"name\":\"cockroachdb-controller-manager\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\",\"--leader-election-id=cockroachdb\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"cockroachdb\"}],\"image\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"name\":\"manager\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"60Mi\"}}}],\"terminationGracePeriodSeconds\":10}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},\x00\x00\x00I{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\",\"configmaps\",\"serviceaccounts\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"charts.operatorhub.io\"],\"resources\":[\"cockroachdbs\",\"cockroachdbs/status\",\"cockroachdbs/finalizers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"default\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"cockroach\",\"cockroachdb\"],\"links\":[{\"name\":\"Helm Chart Source\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb\"},{\"name\":\"Configuration Options\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration\"},{\"name\":\"CockroachDB Source\",\"url\":\"https://github.com/cockroachdb/cockroach\"}],\"maintainers\":[{\"email\":\"dmesser@redhat.com\",\"name\":\"Daniel Messer\"}],\"maturity\":\"stable\",\"minKubeVersion\":\"1.8.0\",\"provider\":{\"name\":\"Helm Community\",\"url\":\"https://artifacthub.io/packages/helm/cockroachdb/cockroachdb\"},\"replaces\":\"cockroachdb.v5.0.3\",\"version\":\"5.0.4\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"creationTimestamp\":null,\"name\":\"cockroachdbs.charts.operatorhub.io\"},\"spec\":{\"group\":\"charts.operatorhub.io\",\"names\":{\"kind\":\"Cockroachdb\",\"listKind\":\"CockroachdbList\",\"plural\":\"cockroachdbs\",\"singular\":\"cockroachdb\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Cockroachdb is the Schema for the cockroachdbs API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"Spec defines the desired state of Cockroachdb\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"Status defines the observed state of Cockroachdb\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]},\"status\":{\"acceptedNames\":{\"kind\":\"\",\"plural\":\"\"},\"conditions\":null,\"storedVersions\":null}}\n{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"control-plane\":\"controller-manager\"},\"name\":\"cockroachdb-controller-manager-metrics-service\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":8443,\"targetPort\":\"https\"}],\"selector\":{\"control-plane\":\"controller-manager\"}},\"status\":{\"loadBalancer\":{}}}\n{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"creationTimestamp\":null,\"name\":\"cockroachdb-metrics-reader\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"charts.operatorhub.io/v1alpha1\\\",\\n    \\\"kind\\\": \x00\x00\x00J\\\"Cockroachdb\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"cockroachdb-sample\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"conf\\\": {\\n        \\\"attrs\\\": [],\\n        \\\"cache\\\": \\\"25%\\\",\\n        \\\"cluster-name\\\": \\\"\\\",\\n        \\\"disable-cluster-name-verification\\\": false,\\n        \\\"http-port\\\": 8080,\\n        \\\"join\\\": [],\\n        \\\"locality\\\": \\\"\\\",\\n        \\\"logtostderr\\\": \\\"INFO\\\",\\n        \\\"max-sql-memory\\\": \\\"25%\\\",\\n        \\\"port\\\": 26257,\\n        \\\"single-node\\\": false,\\n        \\\"sql-audit-dir\\\": \\\"\\\"\\n      },\\n      \\\"image\\\": {\\n        \\\"credentials\\\": {},\\n        \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n        \\\"repository\\\": \\\"cockroachdb/cockroach\\\",\\n        \\\"tag\\\": \\\"v20.2.4\\\"\\n      },\\n      \\\"ingress\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"hosts\\\": [],\\n        \\\"labels\\\": {},\\n        \\\"paths\\\": [\\n          \\\"/\\\"\\n        ],\\n        \\\"tls\\\": []\\n      },\\n      \\\"init\\\": {\\n        \\\"affinity\\\": {},\\n        \\\"annotations\\\": {},\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"init\\\"\\n        },\\n        \\\"nodeSelector\\\": {},\\n        \\\"resources\\\": {},\\n        \\\"tolerations\\\": []\\n      },\\n      \\\"labels\\\": {},\\n      \\\"networkPolicy\\\": {\\n        \\\"enabled\\\": false,\\n        \\\"ingress\\\": {\\n          \\\"grpc\\\": [],\\n          \\\"http\\\": []\\n        }\\n      },\\n      \\\"service\\\": {\\n        \\\"discovery\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          }\\n        },\\n        \\\"ports\\\": {\\n          \\\"grpc\\\": {\\n            \\\"external\\\": {\\n              \\\"name\\\": \\\"grpc\\\",\\n              \\\"port\\\": 26257\\n            },\\n            \\\"internal\\\": {\\n              \\\"name\\\": \\\"grpc-internal\\\",\\n              \\\"port\\\": 26257\\n            }\\n          },\\n          \\\"http\\\": {\\n            \\\"name\\\": \\\"http\\\",\\n            \\\"port\\\": 8080\\n          }\\n        },\\n        \\\"public\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          },\\n          \\\"type\\\": \\\"ClusterIP\\\"\\n        }\\n      },\\n      \\\"serviceMonitor\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"interval\\\": \\\"10s\\\",\\n        \\\"labels\\\": {}\\n      },\\n      \\\"statefulset\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"args\\\": [],\\n        \\\"budget\\\": {\\n          \\\"maxUnavailable\\\": 1\\n        },\\n        \\\"env\\\": [],\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n        },\\n        \\\"nodeAffinity\\\": {},\\n        \\\"nodeSelector\\\": {},\\n        \\\"podAffinity\\\": {},\\n        \\\"podAntiAffinity\\\": {\\n          \\\"topologyKey\\\": \\\"kubernetes.io/hostname\\\",\\n          \\\"type\\\": \\\"soft\\\",\\n          \\\"weight\\\": 100\\n        },\\n        \\\"podManagementPolicy\\\": \\\"Parallel\\\",\\n        \\\"priorityClassName\\\": \\\"\\\",\\n        \\\"replicas\\\": 3,\\n        \\\"resources\\\": {},\\n        \\\"secretMounts\\\": [],\\n        \\\"tolerations\\\": [],\\n        \\\"topologySpreadConstraints\\\": {\\n          \\\"maxSkew\\\": 1,\\n          \\\"topologyKey\\\": \\\"topology.kubernetes.io/zone\\\",\\n          \\\"whenUnsatisfiable\\\": \\\"ScheduleAnyway\\\"\\n        },\\n        \\\"updateStrategy\\\": {\\n          \\\"type\\\": \\\"RollingUpdate\\\"\\n        }\\n      },\\n      \\\"storage\\\": {\\n        \\\"hostPath\\\": \\\"\\\",\\n        \\\"persistentVolume\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"enabled\\\": true,\\n          \\\"labels\\\": {},\\n          \\\"size\\\": \\\"100Gi\\\",\\n          \\\"storageClass\\\": \\\"\\\"\\n        }\\n      },\\n      \\\"tls\\\": {\\n        \\\"certs\\\": {\\n          \\\"clientRootSecret\\\": \\\"cockroachdb-root\\\",\\n          \\\"nodeSecret\\\": \\\"cockroachdb-node\\\",\\n          \\\"provided\\\": false,\\n          \\\"tlsSecret\\\": false\\n        },\\n        \\\"enabled\\\": false,\\n        \\\"init\\\": {\\n          \\\"image\\\": {\\n            \\\"credentials\\\": {},\\n            \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n            \\\"repository\\\": \\\"cockroachdb/cockroach-k8s-request-cert\\\",\\n            \\\"tag\\\": \\\"0.4\\\x00\x00\x00K\"\\n          }\\n        },\\n        \\\"serviceAccount\\\": {\\n          \\\"create\\\": true,\\n          \\\"name\\\": \\\"\\\"\\n        }\\n      }\\n    }\\n  }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Database\",\"certified\":\"false\",\"containerImage\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"createdAt\":\"2021-01-23T10-00-00Z\",\"description\":\"CockroachDB Operator based on the CockroachDB helm chart\",\"operators.operatorframework.io/builder\":\"operator-sdk-v1.3.0\",\"operators.operatorframework.io/project_layout\":\"helm.sdk.operatorframework.io/v1\",\"repository\":\"https://github.com/dmesser/cockroachdb-operator\",\"support\":\"dmesser\"},\"name\":\"cockroachdb.v5.0.4\",\"namespace\":\"placeholder\"},\"spec\":{\"apiservicedefinitions\":{},\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Represents a CockroachDB cluster\",\"displayName\":\"CockroachDB\",\"kind\":\"Cockroachdb\",\"name\":\"cockroachdbs.charts.operatorhub.io\",\"resources\":[{\"kind\":\"Deployment\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Service\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ReplicaSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Pod\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"Secret\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"ConfigMap\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"PersistentVolumeClaim\",\"name\":\"\",\"version\":\"v1\"},{\"kind\":\"StatefulSet\",\"name\":\"\",\"version\":\"apps/v1\"},{\"kind\":\"Job\",\"name\":\"\",\"version\":\"batch/v1\"}],\"version\":\"v1alpha1\"}]},\"description\":\"CockroachDB is a scalable, survivable, strongly-consistent SQL database.\\n## About this Operator\\nThis Operator is based on a Helm chart for CockroachDB. It supports the same parameters like the official [CockroachDB Helm Chart](https://github.com/cockroachdb/helm-charts/tree/master/cockroachdb).\\n\\n## Core capabilities\\n* **StatefulSet** - Sets up a dynamically scalable CockroachDB cluster using a Kubernetes StatefulSet\\n* **Expand Replicas** - Supports expanding the set of replicas by simply editing your object\\n* **Dashboard** - Installs the CockroachDB user interface to administer your cluster. Easily expose it via an Ingress rule.\\nReview all of the [confiuguration options](https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration) to best run your database instance. The example configuration is derived from the chart's [`values.yaml`](https://github.com/helm/charts/blob/master/stable/cockroachdb/values.yaml).\\n## Using the cluster\\nThe resulting cluster endpoint can be consumed from a `Service` that follows the pattern: `\\u003cStatefulSet-name\\u003e-public`. For example to connect using the command line client, use something like the following to obtain the name of the service:\\n```\\nkubectl get service -l chart=cockroachdb-5.0.4\\nNAME                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)              AGE\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb          ClusterIP   None             \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\nexample-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public   ClusterIP   10.106.249.134   \\u003cnone\\u003e        26257/TCP,8080/TCP   24m\\n```\\nThen you can use the CockroachDB command line client to connect to the database cluster:\\n```\\nkubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host example-9f8ngwzrxbxrulxqmdqfhn51h-cdb-public\\n```\\n## Before you start\\nThis Operator requires a cluster with PV support in order to run correctly.\\n\\nNote that for a production cluster, you will likely want to override the following parameters in [`values.yaml`](values.yaml) with your own values.\\n\\n- `statefulset.resources.requests.memory` and `statefulset.resources.limits.memory` allocate memory resources to CockroachDB pods in your cluster.\\n- `conf.cache` and `conf.max-sql-memory` are memory limits that we recommend setting to 1/4 of the above resource allocation. When running CockroachDB, you must set these limits explicitly to avoid running out of memory.\\n- `storage.persistentVolume.size` defaults to `100Gi` of disk space per pod, which you may increase or decrease for your use case.\\n- `storage.persistentVolume.storag\x00\x00\x00LeClass` uses the default storage class for your environment. We strongly recommend that you specify a storage class which uses an SSD.\\n- `tls.enabled` must be set to `yes`/`true` to deploy in secure mode.\\n\\nFor more information on overriding the `values.yaml` parameters, please see:\\n\\u003e \\u003chttps://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-kubernetes.html#step-2-start-cockroachdb\\u003e\\n\\nIf you are running in secure mode (with configuration parameter `tls.enabled` set to `yes`/`true`) and `tls.certs.provided` set to `no`/`false`), then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nWhen `tls.certs.provided` is set to `yes`/`true`, this chart will use certificates created outside of Kubernetes. You may want to use this if you want to use a different certificate authority from the one being used by Kubernetes or if your Kubernetes cluster doesn't fully support certificate-signing requests. To use this, first set up your certificates and load them into your Kubernetes cluster as Secrets using the commands below:\\n\\n```\\nmkdir certs\\nmkdir my-safe-directory\\ncockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key\\ncockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key\\nkubectl create secret generic cockroachdb-root --from-file=certs\\ncockroach cert create-node --certs-dir=certs --ca-key=my-safe-directory/ca.key localhost 127.0.0.1 eerie-horse-cockroachdb-public eerie-horse-cockroachdb-public.default eerie-horse-cockroachdb-public.default.svc.cluster.local *.eerie-horse-cockroachdb *.eerie-horse-cockroachdb.default *.eerie-horse-cockroachdb.default.svc.cluster.local\\nkubectl create secret generic cockroachdb-node --from-file=certs\\n```\\n\\nSet `tls.certs.tlsSecret` to `yes/true` if you make use of [cert-manager][3] in your cluster.\\n\\n[cert-manager][3] stores generated certificates in dedicated TLS secrets. Thus, they are always named:\\n\\n* `ca.crt`\\n* `tls.crt`\\n* `tls.key`\\n\\nOn the other hand, CockroachDB also demands dedicated certificate filenames:\\n\\n* `ca.crt`\\n* `node.crt`\\n* `node.key`\\n* `client.root.crt`\\n* `client.root.key`\\n\\nBy activating `tls.certs.tlsSecret` we benefit from projected secrets and convert the TLS secret filenames to their according CockroachDB filenames.\\n\\nIf you are running in secure mode, then you will have to manually approve the cluster's security certificates as the pods are created. You can see the pending CSRs (certificate signing requests) by running `kubectl get csr`, and approve them by running `kubectl certificate approve \\u003ccsr-name\\u003e`. You'll have to approve one certificate for each CockroachDB node (e.g., `default.node.my-release-cockroachdb-0` and one client certificate for the job that initializes the cluster (e.g., `default.node.root`).\\n\\nConfirm that all pods are `Running` successfully and init has been completed:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     STATUS      RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running     0          1m\\nmy-release-cockroachdb-1            1/1       Running     0          1m\\nmy-release-cockroachdb-2            1/1       Running     0          1m\\nmy-release-cockroachdb-init-k6jcr   0/1       Completed   0          1m\\n```\\n\\nConfirm that persistent volumes are created and claimed for each pod:\\n\\n```shell\\nkubectl get pv\\n```\\n\\n```\\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                      STORAGECLASS   REASON    AGE\\npvc-64878ebf-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO           \x00\x00\x00M Delete           Bound     default/datadir-my-release-cockroachdb-0   standard                 51s\\npvc-64945b4f-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-1   standard                 51s\\npvc-649d920d-f3f0-11e8-ab5b-42010a8e0035   100Gi      RWO            Delete           Bound     default/datadir-my-release-cockroachdb-2   standard                 51s\\n```\\n\\n## Upgrading the cluster\\n\\n### Chart version 3.0.0 and after\\n\\nLaunch a temporary interactive pod and start the built-in SQL client:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\nSet `cluster.preserve_downgrade_option`, where `$current_version` is the CockroachDB version currently running (e.g., `19.2`):\\n\\n```sql\\n\\u003e SET CLUSTER SETTING cluster.preserve_downgrade_option = '$current_version';\\n```\\n\\nExit the shell and delete the temporary pod:\\n\\n```sql\\n\\u003e \\\\q\\n```\\n\\nKick off the upgrade process by changing the new Docker image, where `$new_version` is the CockroachDB version to which you are upgrading:\\n\\n```shell\\nkubectl delete job my-release-cockroachdb-init\\n```\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"image\\\":{\\\"tag\\\":\\\"\\u003cnew version tag here\\u003e\\\"}}}' --type merge\\n```\\n\\nKubernetes will carry out a safe [rolling upgrade](https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets) of your CockroachDB nodes one-by-one. Monitor the cluster's pods until all have been successfully restarted:\\n\\n```shell\\nkubectl get pods\\n```\\n\\n```\\nNAME                                READY     STATUS              RESTARTS   AGE\\nmy-release-cockroachdb-0            1/1       Running             0          2m\\nmy-release-cockroachdb-1            1/1       Running             0          3m\\nmy-release-cockroachdb-2            1/1       Running             0          3m\\nmy-release-cockroachdb-3            0/1       ContainerCreating   0          25s\\nmy-release-cockroachdb-init-nwjkh   0/1       ContainerCreating   0          6s\\n```\\n\\n```shell\\nkubectl get pods \\\\\\n-o jsonpath='{range .items[*]}{.metadata.name}{\\\"\\\\t\\\"}{.spec.containers[0].image}{\\\"\\\\n\\\"}'\\n```\\n\\n```\\nmy-release-cockroachdb-0    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-1    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-2    cockroachdb/cockroach:v20.2.4\\nmy-release-cockroachdb-3    cockroachdb/cockroach:v20.2.4\\n```\\n\\nResume normal operations. Once you are comfortable that the stability and performance of the cluster is what you'd expect post-upgrade, finalize the upgrade:\\n\\n```shell\\nkubectl run cockroachdb --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host=my-release-cockroachdb-public\\n```\\n\\n```sql\\n\\u003e RESET CLUSTER SETTING cluster.preserve_downgrade_option;\\n\\u003e \\\\q\\n```\\n\\n## Configuration\\n\\nThe following table lists the configurable parameters of the CockroachDB chart and their default values.\\nFor details see the [`values.yaml`](values.yaml) file.\\n\\n| Parameter                                                 | Description                                                     | Default                                          |\\n| ---------                                                 | -----------                                                     | -------                                          |\\n| `clusterDomain`                   \x00\x00\x00N                        | Cluster's default DNS domain                                    | `cluster.local`                                  |\\n| `conf.attrs`                                              | CockroachDB node attributes                                     | `[]`                                             |\\n| `conf.cache`                                              | Size of CockroachDB's in-memory cache                           | `25%`                                            |\\n| `conf.cluster-name`                                       | Name of CockroachDB cluster                                     | `\\\"\\\"`                                             |\\n| `conf.disable-cluster-name-verification`                  | Disable CockroachDB cluster name verification                   | `no`                                             |\\n| `conf.join`                                               | List of already-existing CockroachDB instances                  | `[]`                                             |\\n| `conf.max-disk-temp-storage`                              | Max storage capacity for temp data                              | `0`                                              |\\n| `conf.max-offset`                                         | Max allowed clock offset for CockroachDB cluster                | `500ms`                                          |\\n| `conf.max-sql-memory`                                     | Max memory to use processing SQL querie                         | `25%`                                            |\\n| `conf.locality`                                           | Locality attribute for this deployment                          | `\\\"\\\"`                                             |\\n| `conf.single-node`                                        | Disable CockroachDB clustering (standalone mode)                | `no`                                             |\\n| `conf.sql-audit-dir`                                      | Directory for SQL audit log                                     | `\\\"\\\"`                                             |\\n| `conf.port`                                               | CockroachDB primary serving port in Pods                        | `26257`                                          |\\n| `conf.http-port`                                          | CockroachDB HTTP port in Pods                                   | `8080`                                           |\\n| `image.repository`                                        | Container image name                                            | `cockroachdb/cockroach`                          |\\n| `image.tag`                                               | Container image tag                                             | `v20.2.4`                                        |\\n| `image.pullPolicy`                                        | Container pull policy                                           | `IfNotPresent`                                   |\\n| `image.credentials`                                       | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `statefulset.replicas`                                    | StatefulSet replicas number                                     | `3`                                              |\\n| `statefulset.updateStrategy`                              | Update strategy for StatefulSet Pods                            | `{\\\"type\\\": \\\"RollingUpdate\\\"}`                      |\\n| `statefulset.podManagementPolicy`                         | `OrderedReady`/`Parallel` Pods creation/deletion order          | `Parallel`                                       |\\n| `statefulset.budget.maxUnavailable`                       | k8s PodDisruptionBudget parameter                               | `1`                                              |\\n| `statefulset.args`                                        | Extra command-line arguments                                    | `[]`                          \x00\x00\x00O                   |\\n| `statefulset.env`                                         | Extra env vars                                                  | `[]`                                             |\\n| `statefulset.secretMounts`                                | Additional Secrets to mount at cluster members                  | `[]`                                             |\\n| `statefulset.labels`                                      | Additional labels of StatefulSet and its Pods                   | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `statefulset.annotations`                                 | Additional annotations of StatefulSet Pods                      | `{}`                                             |\\n| `statefulset.nodeAffinity`                                | [Node affinity rules][2] of StatefulSet Pods                    | `{}`                                             |\\n| `statefulset.podAffinity`                                 | [Inter-Pod affinity rules][1] of StatefulSet Pods               | `{}`                                             |\\n| `statefulset.podAntiAffinity`                             | [Anti-affinity rules][1] of StatefulSet Pods                    | auto                                             |\\n| `statefulset.podAntiAffinity.topologyKey`                 | The topologyKey for auto [anti-affinity rules][1]               | `kubernetes.io/hostname`                         |\\n| `statefulset.podAntiAffinity.type`                        | Type of auto [anti-affinity rules][1]                           | `soft`                                           |\\n| `statefulset.podAntiAffinity.weight`                      | Weight for `soft` auto [anti-affinity rules][1]                 | `100`                                            |\\n| `statefulset.nodeSelector`                                | Node labels for StatefulSet Pods assignment                     | `{}`                                             |\\n| `statefulset.priorityClassName`                           | [PriorityClassName][4] for StatefulSet Pods                     | `\\\"\\\"`                                             |\\n| `statefulset.tolerations`                                 | Node taints to tolerate by StatefulSet Pods                     | `[]`                                             |\\n| `statefulset.topologySpreadConstraints`                   | [Topology Spread Constraints rules][5] of StatefulSet Pods      | auto                                             |\\n| `statefulset.topologySpreadConstraints.maxSkew`           | Degree to which Pods may be unevenly distributed                | `1`                                              |\\n| `statefulset.topologySpreadConstraints.topologyKey`       | The key of node labels                                          | `topology.kubernetes.io/zone`                    |\\n| `statefulset.topologySpreadConstraints.whenUnsatisfiable` | `ScheduleAnyway`/`DoNotSchedule` for unsatisfiable constraints  | `ScheduleAnyway`                                 |\\n| `statefulset.resources`                                   | Resource requests and limits for StatefulSet Pods               | `{}`                                             |\\n| `service.ports.grpc.external.port`                        | CockroachDB primary serving port in Services                    | `26257`                                          |\\n| `service.ports.grpc.external.name`                        | CockroachDB primary serving port name in Services               | `grpc`                                           |\\n| `service.ports.grpc.internal.port`                        | CockroachDB inter-communication port in Services                | `26257`                                          |\\n| `service.ports.grpc.internal.name`                        | CockroachDB inter-communication port name in Services           | `grpc-internal`                                  |\\n| `service.ports.http.port`                                 | CockroachDB HTTP port in Services         \x00\x00\x00P                      | `8080`                                           |\\n| `service.ports.http.name`                                 | CockroachDB HTTP port name in Services                          | `http`                                           |\\n| `service.public.type`                                     | Public Service type                                             | `ClusterIP`                                      |\\n| `service.public.labels`                                   | Additional labels of public Service                             | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.public.annotations`                              | Additional annotations of public Service                        | `{}`                                             |\\n| `service.discovery.labels`                                | Additional labels of discovery Service                          | `{\\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"}` |\\n| `service.discovery.annotations`                           | Additional annotations of discovery Service                     | `{}`                                             |\\n| `ingress.enabled`                                         | Enable ingress resource for CockroachDB                         | `false`                                          |\\n| `ingress.labels`                                          | Additional labels of Ingress                                    | `{}`                                             |\\n| `ingress.annotations`                                     | Additional annotations of Ingress                               | `{}`                                             |\\n| `ingress.paths`                                           | Paths for the default host                                      | `[/]`                                            |\\n| `ingress.hosts`                                           | CockroachDB Ingress hostnames                                   | `[]`                                             |\\n| `ingress.tls[0].hosts`                                    | CockroachDB Ingress tls hostnames                               | `nil`                                            |\\n| `ingress.tls[0].secretName`                               | CockroachDB Ingress tls secret name                             | `nil`                                            |\\n| `serviceMonitor.enabled`                                  | Create [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/design.md#servicemonitor) Resource for scraping metrics using [PrometheusOperator](https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/getting-started.md#prometheus-operator)                     | `false`                                             |\\n| `serviceMonitor.labels`                                   | Additional labels of ServiceMonitor                             | `{}`                                             |\\n| `serviceMonitor.annotations`                              | Additional annotations of ServiceMonitor                        | `{}`                                             |\\n| `serviceMonitor.interval`                                 | ServiceMonitor scrape metrics interval                          | `10s`                                            |\\n| `serviceMonitor.scrapeTimeout`                            | ServiceMonitor scrape timeout                                   | `nil`                                            |\\n| `storage.hostPath`                                        | Absolute path on host to store data                             | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.enabled`                        | Whether to use PersistentVolume to store data                   | `yes`                                            |\\n| `storage.persistentVolume.size`                           | PersistentVolume size                                   \x00\x00\x00Q        | `100Gi`                                          |\\n| `storage.persistentVolume.storageClass`                   | PersistentVolume class                                          | `\\\"\\\"`                                             |\\n| `storage.persistentVolume.labels`                         | Additional labels of PersistentVolumeClaim                      | `{}`                                             |\\n| `storage.persistentVolume.annotations`                    | Additional annotations of PersistentVolumeClaim                 | `{}`                                             |\\n| `init.labels`                                             | Additional labels of init Job and its Pod                       | `{\\\"app.kubernetes.io/component\\\": \\\"init\\\"}`        |\\n| `init.annotations`                                        | Additional labels of the Pod of init Job                        | `{}`                                             |\\n| `init.affinity`                                           | [Affinity rules][2] of init Job Pod                             | `{}`                                             |\\n| `init.nodeSelector`                                       | Node labels for init Job Pod assignment                         | `{}`                                             |\\n| `init.tolerations`                                        | Node taints to tolerate by init Job Pod                         | `[]`                                             |\\n| `init.resources`                                          | Resource requests and limits for the Pod of init Job            | `{}`                                             |\\n| `tls.enabled`                                             | Whether to run securely using TLS certificates                  | `no`                                             |\\n| `tls.serviceAccount.create`                               | Whether to create a new RBAC service account                    | `yes`                                            |\\n| `tls.serviceAccount.name`                                 | Name of RBAC service account to use                             | `\\\"\\\"`                                             |\\n| `tls.certs.provided`                                      | Bring your own certs scenario, i.e certificates are provided    | `no`                                             |\\n| `tls.certs.clientRootSecret`                              | If certs are provided, secret name for client root cert         | `cockroachdb-root`                               |\\n| `tls.certs.nodeSecret`                                    | If certs are provided, secret name for node cert                | `cockroachdb-node`                               |\\n| `tls.certs.tlsSecret`                                     | Own certs are stored in TLS secret                              | `no`                                             |\\n| `tls.init.image.repository`                               | Image to use for requesting TLS certificates                    | `cockroachdb/cockroach-k8s-request-cert`         |\\n| `tls.init.image.tag`                                      | Image tag to use for requesting TLS certificates                | `0.4`                                            |\\n| `tls.init.image.pullPolicy`                               | Requesting TLS certificates container pull policy               | `IfNotPresent`                                   |\\n| `tls.init.image.credentials`                              | `registry`, `user` and `pass` credentials to pull private image | `{}`                                             |\\n| `networkPolicy.enabled`                                   | Enable NetworkPolicy for CockroachDB's Pods                     | `no`                                             |\\n| `networkPolicy.ingress.grpc`                              | Whitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n| `networkPolicy.ingress.http`                              | \x00\x00\x00RWhitelist resources to access gRPC port of CockroachDB's Pods   | `[]`                                             |\\n\\n\\nOverride the default parameters using the `CockroachDB` custom resource.\\n\\n## Deep dive\\n\\n### Connecting to the CockroachDB cluster\\n\\nOnce you've created the cluster, you can start talking to it by connecting to its `-public` Service. CockroachDB is PostgreSQL wire protocol compatible, so there's a [wide variety of supported clients](https://www.cockroachlabs.com/docs/install-client-drivers.html). As an example, we'll open up a SQL shell using CockroachDB's built-in shell and play around with it a bit, like this (likely needing to replace `my-release-cockroachdb-public` with the name of the `-public` Service that was created with your installed chart):\\n\\n```shell\\nkubectl run cockroach-client --rm -it \\\\\\n--image=cockroachdb/cockroach \\\\\\n--restart=Never \\\\\\n-- sql --insecure --host my-release-cockroachdb-public\\n```\\n\\n```\\nWaiting for pod default/cockroach-client to be running, status is Pending,\\npod ready: false\\nIf you don't see a command prompt, try pressing enter.\\nroot@my-release-cockroachdb-public:26257\\u003e SHOW DATABASES;\\n+--------------------+\\n|      Database      |\\n+--------------------+\\n| information_schema |\\n| pg_catalog         |\\n| system             |\\n+--------------------+\\n(3 rows)\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE DATABASE bank;\\nCREATE DATABASE\\nroot@my-release-cockroachdb-public:26257\\u003e CREATE TABLE bank.accounts (id INT\\nPRIMARY KEY, balance DECIMAL);\\nCREATE TABLE\\nroot@my-release-cockroachdb-public:26257\\u003e INSERT INTO bank.accounts VALUES\\n(1234, 10000.50);\\nINSERT 1\\nroot@my-release-cockroachdb-public:26257\\u003e SELECT * FROM bank.accounts;\\n+------+---------+\\n|  id  | balance |\\n+------+---------+\\n| 1234 | 10000.5 |\\n+------+---------+\\n(1 row)\\nroot@my-release-cockroachdb-public:26257\\u003e \\\\q\\nWaiting for pod default/cockroach-client to terminate, status is Running\\npod \\\"cockroach-client\\\" deleted\\n```\\n\\n\\u003e If you are running in secure mode, you will have to provide a client certificate to the cluster in order to authenticate, so the above command will not work. See [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/client-secure.yaml) for an example of how to set up an interactive SQL shell against a secure cluster or [here](https://github.com/cockroachdb/cockroach/blob/master/cloud/kubernetes/example-app-secure.yaml) for an example application connecting to a secure cluster.\\n\\n### Cluster health\\n\\nBecause our pod spec includes regular health checks of the CockroachDB processes, simply running `kubectl get pods` and looking at the `STATUS` column is sufficient to determine the health of each instance in the cluster.\\n\\nIf you want more detailed information about the cluster, the best place to look is the Admin UI.\\n\\n### Accessing the Admin UI\\n\\nIf you want to see information about how the cluster is doing, you can try pulling up the CockroachDB Admin UI by port-forwarding from your local machine to one of the pods (replacing `my-release-cockroachdb-0` with the name of one of your pods:\\n\\n```shell\\nkubectl port-forward my-release-cockroachdb-0 8080\\n```\\n\\nYou should then be able to access the Admin UI by visiting \\u003chttp://localhost:8080/\\u003e in your web browser.\\n\\n### Failover\\n\\nIf any CockroachDB member fails, it is restarted or recreated automatically by the Kubernetes infrastructure, and will re-join the cluster automatically when it comes back up. You can test this scenario by killing any of the CockroachDB pods:\\n\\n```shell\\nkubectl delete pod my-release-cockroachdb-1\\n```\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=my-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nAfter a while:\\n\\n```shell\\nkubectl get pods -l \\\"app.kubernetes.io/instance=m\x00\x00\x00Sy-release,app.kubernetes.io/component=cockroachdb\\\"\\n```\\n\\n```\\nNAME                      READY     STATUS        RESTARTS   AGE\\nmy-release-cockroachdb-0  1/1       Running       0          5m\\nmy-release-cockroachdb-1  1/1       Running       0          20s\\nmy-release-cockroachdb-2  1/1       Running       0          5m\\n```\\n\\nYou can check the state of re-joining from the new pod's logs:\\n\\n```shell\\nkubectl logs my-release-cockroachdb-1\\n```\\n\\n```\\n[...]\\nI161028 19:32:09.754026 1 server/node.go:586  [n1] node connected via gossip and\\nverified as part of cluster {\\\"35ecbc27-3f67-4e7d-9b8f-27c31aae17d6\\\"}\\n[...]\\ncockroachdb-0.my-release-cockroachdb.default.svc.cluster.local:26257\\nbuild:      beta-20161027-55-gd2d3c7f @ 2016/10/28 19:27:25 (go1.7.3)\\nadmin:      http://0.0.0.0:8080\\nsql:\\npostgresql://root@my-release-cockroachdb-1.my-release-cockroachdb.default.svc.cluster.local:26257?sslmode=disable\\nlogs:       cockroach-data/logs\\nstore[0]:   path=cockroach-data\\nstatus:     restarted pre-existing node\\nclusterID:  {35ecbc27-3f67-4e7d-9b8f-27c31aae17d6}\\nnodeID:     2\\n[...]\\n```\\n\\n### NetworkPolicy\\n\\nTo enable NetworkPolicy for CockroachDB, install [a networking plugin that implements the Kubernetes NetworkPolicy spec](https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy#before-you-begin), and set `networkPolicy.enabled` to `yes`/`true`.\\n\\nFor Kubernetes v1.5 \\u0026 v1.6, you must also turn on NetworkPolicy by setting the `DefaultDeny` Namespace annotation. Note: this will enforce policy for _all_ pods in the Namespace:\\n\\n```shell\\nkubectl annotate namespace default \\\"net.beta.kubernetes.io/network-policy={\\\\\\\"ingress\\\\\\\":{\\\\\\\"isolation\\\\\\\":\\\\\\\"DefaultDeny\\\\\\\"}}\\\"\\n```\\n\\nFor more precise policy, set `networkPolicy.ingress.grpc` and `networkPolicy.ingress.http` rules. This will only allow pods that match the provided rules to connect to CockroachDB.\\n\\n### Scaling\\n\\nScaling should be managed via the `helm upgrade` command. After resizing your cluster on your cloud environment (e.g., GKE or EKS), run the following command to add a pod. This assumes you scaled from 3 to 4 nodes:\\n\\n```shell\\nkubectl patch cockroachdbs example -p '{\\\"spec\\\": {\\\"statefulset\\\":{\\\"replicas\\\":\\\"4\\\"}}}' --type merge\\n```\\n\\nNote, that if you are running in secure mode (`tls.enabled` is `yes`/`true`) and increase the size of your cluster, you will also have to approve the CSR (certificate-signing request) of each new node (using `kubectl get csr` and `kubectl certificate approve`).\\n\\n[1]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\\n[2]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity\\n[3]: https://cert-manager.io/\\n[4]: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\\n[5]: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\\n\",\"displayName\":\"CockroachDB Helm Operator\",\"icon\":[{\"base64data\":\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMS44MiAzMiIgd2lkdGg9IjI0ODYiIGhlaWdodD0iMjUwMCI+PHRpdGxlPkNMPC90aXRsZT48cGF0aCBkPSJNMTkuNDIgOS4xN2ExNS4zOSAxNS4zOSAwIDAgMS0zLjUxLjQgMTUuNDYgMTUuNDYgMCAwIDEtMy41MS0uNCAxNS42MyAxNS42MyAwIDAgMSAzLjUxLTMuOTEgMTUuNzEgMTUuNzEgMCAwIDEgMy41MSAzLjkxek0zMCAuNTdBMTcuMjIgMTcuMjIgMCAwIDAgMjUuNTkgMGExNy40IDE3LjQgMCAwIDAtOS42OCAyLjkzQTE3LjM4IDE3LjM4IDAgMCAwIDYuMjMgMGExNy4yMiAxNy4yMiAwIDAgMC00LjQ0LjU3QTE2LjIyIDE2LjIyIDAgMCAwIDAgMS4xM2EuMDcuMDcgMCAwIDAgMCAuMDkgMTcuMzIgMTcuMzIgMCAwIDAgLjgzIDEuNTcuMDcuMDcgMCAwIDAgLjA4IDAgMTYuMzkgMTYuMzkgMCAwIDEgMS44MS0uNTQgMTUuNjUgMTUuNjUgMCAwIDEgMTEuNTkgMS44OCAxNy41MiAxNy41MiAwIDAgMC0zLjc4IDQuNDhjLS4yLjMyLS4zNy42NS0uNTUgMXMtLjIyLjQ1LS4zMy42OS0uMzEuNzItLjQ0IDEuMDhhMTcuNDYgMTcuNDYgMCAwIDAgNC4yOSAxOC43Yy4yNi4yNS41My40OS44MS43M3MuNDQuMzcuNjcuNTQuNTkuNDQuODkuNjRhLjA3LjA3IDAgMCAwIC4wOCAwYy4zLS4yMS42LS40Mi44OS0uNjRzLjQ1LS4zNS42Ny0uNTQuNTUtLjQ4LjgxLS43M2ExNy40NSAxNy40NSAwIDAgMCA1LjM4LTEyLjYxIDE3LjM5IDE3LjM5IDAgMCAwLTEuMDktNi4wOWMtLjE0LS4zNy0uMjktLjczLS40NS0xLjA5cy0uMjItLjQ3\x00\x00\x00\x00LS4zMy0uNjktLjM1LS42Ni0uNTUtMWExNy42MSAxNy42MSAwIDAgMC0zLjc4LTQuNDggMTUuNjUgMTUuNjUgMCAwIDEgMTEuNi0xLjg0IDE2LjEzIDE2LjEzIDAgMCAxIDEuODEuNTQuMDcuMDcgMCAwIDAgLjA4IDBxLjQ0LS43Ni44Mi0xLjU2YS4wNy4wNyAwIDAgMCAwLS4wOUExNi44OSAxNi44OSAwIDAgMCAzMCAuNTd6IiBmaWxsPSIjMTUxZjM0Ii8+PHBhdGggZD0iTTIxLjgyIDE3LjQ3YTE1LjUxIDE1LjUxIDAgMCAxLTQuMjUgMTAuNjkgMTUuNjYgMTUuNjYgMCAwIDEtLjcyLTQuNjggMTUuNSAxNS41IDAgMCAxIDQuMjUtMTAuNjkgMTUuNjIgMTUuNjIgMCAwIDEgLjcyIDQuNjgiIGZpbGw9IiMzNDg1NDAiLz48cGF0aCBkPSJNMTUgMjMuNDhhMTUuNTUgMTUuNTUgMCAwIDEtLjcyIDQuNjggMTUuNTQgMTUuNTQgMCAwIDEtMy41My0xNS4zN0ExNS41IDE1LjUgMCAwIDEgMTUgMjMuNDgiIGZpbGw9IiM3ZGJjNDIiLz48L3N2Zz4=\",\"mediatype\":\"image/svg+xml\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\",\"clusterroles\",\"rolebindings\",\"clusterrolebindings\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}],\"serviceAccountName\":\"default\"}],\"deployments\":[{\"name\":\"cockroachdb-controller-manager\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"control-plane\":\"controller-manager\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\",\"--leader-election-id=cockroachdb\"],\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.annotations['olm.targetNamespaces']\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"OPERATOR_NAME\",\"value\":\"cockroachdb\"}],\"image\":\"quay.io/helmoperators/cockroachdb:v5.0.4\",\"name\":\"manager\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"60Mi\"}}}],\"terminationGracePeriodSeconds\":10}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"update\",\"patch\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"secrets\",\"configmaps\",\"serviceaccounts\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"charts.operatorhub.io\"],\"resources\":[\"cockroachdbs\",\"cockroachdbs/status\",\"cockroachdbs/finalizers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"policy\"],\"resources\":[\"poddisruptionbudgets\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"monitoring.coreos.com\"],\"resources\":[\"servicemonitors\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"networkpolicies\"],\"verbs\":[\"*\"]}],\"serviceAccountName\":\"default\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":true,\"type\":\"AllNamespaces\"}],\"keywords\":[\"cockroach\",\"cockroachdb\"],\"links\":[{\"name\":\"Helm Chart Source\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb\"},{\"name\":\"Configuration Options\",\"url\":\"https://github.com/helm/charts/tree/master/stable/cockroachdb#configuration\"},{\"name\":\"CockroachDB Source\",\"url\":\"https://github.com/cockroachdb/cockroach\"}],\"maintainers\":[{\"email\":\"dmesser@redhat.com\",\"name\":\"Daniel Messer\"}],\"maturity\":\"stable\",\"minKubeVersion\":\"1.8.0\",\"provider\":{\"name\":\"Helm Community\",\"url\":\"https://artifacthub.io/packages/helm/cockroachdb/cockroachdb\"},\"replaces\":\"cockroachdb.v5.0.3\",\"version\":\"5.0.4\"}}\nquay.io/olmqe/cockroachdb-operator:5.0.4-18695.0.4cockroachdb.v5.0.3\r\b\xf9\x00\x02\x01\xf2\x00\x0f\x9f\x01\xf2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x8d/\x02\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.5{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.4.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\"\x00\x00\x00*\x00\x00\x06\xa6\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.4{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.3.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\_\x01\n7\x00\x00Y\r\x177\r\rwindup-operator.0.0.4quay.io/olmqe/mta-operator:v0.0.4-18690.0.4windup-operator.0.0.3\r\x00\x00\x00\x02\x05\xda\x00\x06;\x05\xda\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xc5\x0e7\x84\xde*\x85\xb6\x02Y\r\x177\r\rwindup-operator.0.0.2{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.2.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n_\x04\n7\x00\x00Y\r\x177\r\rwindup-operator.0.0.2quay.io/olmqe/mta-operator:v0.0.2-18690.0.2windup-operator.0.0.1\x85\xd2e\x03\x0e1\x85\xc1:\x85\xe2`g\r\x171\r\rcockroachdb.v5.0.4{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n  {\\n    \\\"apiVersion\\\": \\\"charts.operatorhub.io/v1alpha1\\\",\\n    \\\"kind\\\": \\\"Cockroachdb\\\",\\n    \\\"metadata\\\": {\\n      \\\"name\\\": \\\"cockroachdb-sample\\\"\\n    },\\n    \\\"spec\\\": {\\n      \\\"clusterDomain\\\": \\\"cluster.local\\\",\\n      \\\"conf\\\": {\\n        \\\"attrs\\\": [],\\n        \\\"cache\\\": \\\"25%\\\",\\n        \\\"cluster-name\\\": \\\"\\\",\\n        \\\"disable-cluster-name-verification\\\": false,\\n        \\\"http-port\\\": 8080,\\n        \\\"join\\\": [],\\n        \\\"locality\\\": \\\"\\\",\\n        \\\"logtostderr\\\": \\\"INFO\\\",\\n        \\\"max-sql-memory\\\": \\\"25%\\\",\\n        \\\"port\\\": 26257,\\n        \\\"single-node\\\": false,\\n        \\\"sql-audit-dir\\\": \\\"\\\"\\n      },\\n      \\\"image\\\": {\\n        \\\"credentials\\\": {},\\n        \\\"pullPolicy\\\": \\\"IfNotPresent\\\",\\n        \\\"repository\\\": \\\"cockroachdb/cockroach\\\",\\n        \\\"tag\\\": \\\"v20.2.4\\\"\\n      },\\n      \\\"ingress\\\": {\\n        \\\"annotations\\\": {},\\n        \\\"enabled\\\": false,\\n        \\\"hosts\\\": [],\\n        \\\"labels\\\": {},\\n        \\\"paths\\\": [\\n          \\\"/\\\"\\n        ],\\n        \\\"tls\\\": []\\n      },\\n      \\\"init\\\": {\\n        \\\"affinity\\\": {},\\n        \\\"annotations\\\": {},\\n        \\\"labels\\\": {\\n          \\\"app.kubernetes.io/component\\\": \\\"init\\\"\\n        },\\n        \\\"nodeSelector\\\": {},\\n        \\\"resources\\\": {},\\n        \\\"tolerations\\\": []\\n      },\\n      \\\"labels\\\": {},\\n      \\\"networkPolicy\\\": {\\n        \\\"enabled\\\": false,\\n        \\\"ingress\\\": {\\n          \\\"grpc\\\": [],\\n          \\\"http\\\": []\\n        }\\n      },\\n      \\\"service\\\": {\\n        \\\"discovery\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          }\\n        },\\n        \\\"ports\\\": {\\n          \\\"grpc\\\": {\\n            \\\"external\\\": {\\n              \\\"name\\\": \\\"grpc\\\",\\n              \\\"port\\\": 26257\\n            },\\n            \\\"internal\\\": {\\n              \\\"name\\\": \\\"grpc-internal\\\",\\n              \\\"port\\\": 26257\\n            }\\n          },\\n          \\\"http\\\": {\\n            \\\"name\\\": \\\"http\\\",\\n            \\\"port\\\": 8080\\n          }\\n        },\\n        \\\"public\\\": {\\n          \\\"annotations\\\": {},\\n          \\\"labels\\\": {\\n            \\\"app.kubernetes.io/component\\\": \\\"cockroachdb\\\"\\n          },\\n          \\\"type\\\": \\\"ClusterIP\\\"\\n        }\\n      },\\n      \\\"serviceMonitor\\\": {\\n        \\\"annotations\\\": {},\\n \x00\x00\x00>\x00\x00\x00W,\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.3\",\"createdAt\":\"2021-01-11\",\"description\":\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.3\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAkF3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtpdhu5koX/YxW9BMzDcjCe83bQy+/vIklJlq0a3uly2ZTIZCYSEXGHANLs//3PMf/Df7XmbGIqNbecLf/FFpvv/FDt89/z6my8/97/Tn995n5933x84Hkr8BqeX/N+Hd95P31+ocTX++PX902Zr/PU14leH7xPGHRlzw/rNcjXiYJ/3nev303zzw89f7md199Q7ik+Dv7+eyxMxkq8GbzxO7hg77/1uVJ4/nb+Zv51IXEg//Jz5BO9X3+fP/MxdX+YwI+fvs2fna/3w+d0PCd631b+Nk+v91368/zdWfo6Iuc/ruy/\x00\x00\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\x00\x00\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\x00\x00\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\x00\x00\x00[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\x00\x00\x00\\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\x00\x00\x00]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\x00\x00\x00^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\x00\x00\x00_LwF+KyIXopzfovWSuPRecHavVmlAq4TuJ/hyJbmzbwTrKOZ76vtVqfEm2JQ5wOwr/rQA57gLW60RRqt2wZjxjH70zwCzCVCVRmq8CTZmPjD7wifntarIW1/oAJdPwtE2FVAzgUUSrgtRwiJgprNdGskTJrV6Y1o3dD+JVVkKR1p3QC0BJkmNN8HGLAUme/cUMq04MvRlRErPjC3QdBg9EaxTXz6WU00Fm/IxML3juJyIEXlEefRavhrWhXLlalPt870LXC52I9hM5DO0p6J0ynfHIqphESd0gA8HdEA5E9zAe8AksR/BJuH6dO2pqI40kUdU6H4yU/KOkjo+pxqYzGkTdIIQgSwCJncclxORIo9Yj36i91IUzu7pCngJuEXsSYhA5gMzvXsKdSSNyW3h0WuZVqxxtEvTwK1YiQeCEEnMAW51tkuLaJFHvEevpWz5Uv553yyA+4FHaMJGGEEIIV6s1O0nLnxyXkSsk0eF0AG8X67ko7uuAVTtuF3ELrSWyKeh9ZIr5r6Fc9wFtmi0YZfedY4ZT1zns0GbS4BBNGM/uyA0kWJgENpcEpfe0zYit5VHP8EPO/hrz95kDE5PAz4Chon9CS3ABuCKfZsKD92xc3ur7UKLeo9+grN7cbvWuFLSDwEjsepvCUI4eRUY6UrtfugOrW0ncnt69JP4oLvCkZIOMBOYJ/YohIFZwEu+I4W0dPknEfppLB6SAdZ57G8RxkMihJhiJ9ZZBOtaslqrCL0BFnVRODung5WKOFHsVGgGy4BJ3gOFtFTddRF6I3hFKVIHpxtADvCB2KvQBKYCiw9vKjRviSJtGNF0h27WmvYjLjGBvwO9sM6cFoRg+NyyGf339iMuiSqRR51HP5n3lCJucDrAA8CDQILYslAHlcDDwB9qNhUyPUr1ELVCB2BbPstvno6n/Fiqf9yVLXYtnMQ6YKKrXVrRhBffhHP6Re2FRrfQ/Xw4oCPK6Qa4GWsjQlux8ZimBKvq8CvaW8WUvOhPsowJodeyeHA6KOXGSoC4Ruw9JnkbuAmtq3M2FcbMRRuxdIdzNhXScfSEaqz10YHAVkCL7Uc92n+vBwLXpo6dFFMijzmPfko4P7ATyuFyABdjlaxKFj1EJWVYBUc/0z6Pb8qWwzHZCUas3v0pWw6T1Ge4D60/AdoD/wUUiS6ihiL/PW2P1p8k9R0RsyKPaY9e1/hdKYWGp4E7gXjpFVtSBbyglLpXmz5yNh2QHhGhn8pCpXAP7gKoeKxqNg9Jr9iKh4An0LqqevMBrhLbFqHXx9Lz+mJWlgCkAj/DWorpID0TkRzFWjKdCxQZCe2Y9PX30isi9EZQWc7i83phnQLHbP8rSzomIijAOoX3GdDkfL0DEpKkV0ToTeeXSjE2C5zt0h3AAKy97yOkZ1qFtVh7xPO8hwp9qw7AU2LDIvRQs3hQZzAcYG2auRr4pYT1LRKePwW8A+zA9JGz+aD0igi9BVjxKYt/cUNtWP8T4C5gFNBGOicklAKrgeeB90GT8/IiGD5KekaE3kocL2bx+IG1/7oeeBzIABzSOY3CB+wHfg0sAIiG6i6RgCFdEALapZCzcT/JfbNBmwuATKAr1mmwy6SDGmSZv6+6Aploc0Fy3xEicvHokc+XM2/g6Np/gDIA3Finwk7zh/fnxHj3bPWH5YuwSn9Vo01SRl3O+S++JsYjQrcvn155KZUFebVjehfWeXIzgd5AIhAXpZdeA1QA27EOy3wZ8IAmocdALvngEzEOEXoUYposSnfg6JSKcrhqvX0S0AeYAVwF9LD5Vf4ILATeBbYB5aCrtc+L73AR0w6YoJTYggg9tvjihhkc37TKb/yqVvzn+L39AKztlf2BvkTOBJ8PyAe+A7YAeX6vvRWoBg1a027oeMa99o7cZBG6EDDcnziOyn07Tvd+8VjHUA3yPwT6Al38P4/3PyTc/uGBC+swyoYmXU2swwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\"]}],\"serviceAccountName\":\"windup-operator\"}],\"deployments\":[{\"name\":\"windup-operator.0.0.3\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.3\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"\x00\x00\x00`name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.2\",\"version\":\"0.0.3\"}}\n{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.2.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\",\\n     \\\"sso_saml_keystore_password\\\": \\\"mykeystorepass\\\",\\n     \\\"sso_secret\\\": \\\"\\\",\\n     \\\"sso_enable_cors\\\": \\\"false\\\",\\n     \\\"sso_saml_logout_page\\\": \\\"/\\\",\\n     \\\"sso_disable_ssl_certificate_validation\\\": \\\"true\\\",\\n     \\\"sso_truststore\\\": \\\"\\\",\\n     \\\"sso_truststore_password\\\": \\\"\\\",\\n     \\\"sso_truststore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"gc_max_metaspace_size\\\": 512,\\n     \\\"max_post_size\\\": \\\"4294967296\\\",\\n     \\\"db_database\\\": \\\"mta\\\",\\n     \\\"postgresql_max_connections\\\": \\\"200\\\",\\n     \\\"postgresql_shared_buffers\\\": \\\"\\\",\\n     \\\"postgresql_cpu_request\\\": \\\"0.5\\\",\\n     \\\"postgresql_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"postgresql_cpu_limit\\\": \\\"2\\\",\\n     \\\"postgresql_mem_limit\\\": \\\"2Gi\\\",\\n     \\\"webLivenessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webLivenessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webLivenessFailureThreshold\\\": \\\"3\\\",\\n     \\\"webReadinessInitialDelaySeconds\\\": \\\"120\\\",\\n     \\\"webReadinessTimeoutSeconds\\\": \\\"10\\\",\\n     \\\"webReadinessFailureThreshold\\\": \\\"3\\\",\\n     \\\"web_cpu_request\\\": \\\"0.5\\\",\\n     \\\"web_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"web_cpu_limit\\\": \\\"4\\\",\\n     \\\"web_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"executor_cpu_request\\\": \\\"0.5\\\",\\n     \\\"executor_mem_request\\\": \\\"0.5Gi\\\",\\n     \\\"executor_cpu_limit\\\": \\\"4\\\",\\n     \\\"executor_mem_limit\\\": \\\"4Gi\\\",\\n     \\\"postgresql_image\\\": \\\"centos/postgresql-96-centos7:latest\\\",\\n     \\\"web_readiness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\\\",\\n     \\\"web_liveness_probe\\\": \\\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\\\",\\n     \\\"executor_readiness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"executor_liveness_probe\\\": \\\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\\\",\\n     \\\"tls_secret\\\": \\\"\\\"\\n   }\\n }\\n]\",\"capabilities\":\"Basic Install\",\"categories\":\"Modernization \\u0026 Migration\",\"certified\":\"false\",\"containerImage\":\"quay.io/windupeng/windup-operator-native:0.0.3\",\"createdAt\":\"2021-01-11\",\"description\"\x00\x00\x00a:\"MTA is an analysis tool that supports the modernization and migration of Java applications.\",\"imagePullPolicy\":\"Always\",\"repository\":\"https://github.com/windup/windup-operator/\",\"support\":\"https://issues.redhat.com/projects/WINDUP\"},\"name\":\"windup-operator.0.0.3\",\"namespace\":\"placeholder\"},\"spec\":{\"customresourcedefinitions\":{\"owned\":[{\"description\":\"Create an MTA Web Console application.  \\n\\nTo access the MTA Web Console application from the \\\"Developer\\\" perspective, please go to Topology and click on the \\\"Open URL\\\" icon on the web-console pod.  \\n\\nAlternatively from the \\\"Administrator\\\" perspective, please go to Networking-\\u003eRoutes and click on the Location hyperlink.  \\n\\nIn order to connect with default login credentials, please use \\\"mta\\\" as username and \\\"password\\\" as password.  \\n\\nKnown issue  \\nIf you want to customize the MTA Web Console instance's parameters and you can not see any in the `Form view`, please switch to the `YAML view` and change them as needed.\\n\",\"displayName\":\"Migration Toolkit for Applications\",\"kind\":\"Windup\",\"name\":\"windups.windup.jboss.org\",\"version\":\"v1\"}]},\"description\":\"The Migration Toolkit for Applications (MTA) is a web console application that supports large-scale Java application modernization and migration projects across a broad range of transformations and use cases.  \\n\\nIt analyzes application code, supports effort estimation, accelerates code migration, and enables users to move applications to containers.  \\n\\nFor more information please refer to the [https://developers.redhat.com/products/mta/overview](https://developers.redhat.com/products/mta/overview) page.\\n\",\"displayName\":\"Migration Toolkit for Applications Operator\",\"icon\":[{\"base64data\":\"iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAkF3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtpdhu5koX/YxW9BMzDcjCe83bQy+/vIklJlq0a3uly2ZTIZCYSEXGHANLs//3PMf/Df7XmbGIqNbecLf/FFpvv/FDt89/z6my8/97/Tn995n5933x84Hkr8BqeX/N+Hd95P31+ocTX++PX902Zr/PU14leH7xPGHRlzw/rNcjXiYJ/3nev303zzw89f7md199Q7ik+Dv7+eyxMxkq8GbzxO7hg77/1uVJ4/nb+Zv51IXEg//Jz5BO9X3+fP/MxdX+YwI+fvs2fna/3w+d0PCd631b+Nk+v91368/zdWfo6Iuc/ruy/jqg2/zm2b/N3zqrn7OfueiSPWsyvm3rfyv2JAwfTGe7XMn8KfxM/l/un8afabicTv7jVYezgl+Y8M35cdMt1d9y+r9NNhhj99oVX76cP970aim9+BoUg6o87vpjQwgqVaEwiFxSXj7G4e92m63GxypWX40jvOJnjG7/8Md/f+G///HKic5Tmztn6MVeMyysJGYYip385ioC485rTdOfXmefFfv9PgQ1EMN1prtxgt+M5xUjuM7fCjXOwyXBotE/Ku7JeJ2CKuHZiMC4QAZtJbJedLd4X55jHSnw6I/ch+kEEXDLJL0bpYwiZ4FSva/Od4u6xPvnnbeCFQCSKphCaFjrBijHFTL1VUqibFFJMKeVUUk0t9RxyzCnnXLJwqpdQYkkll1JqaaXXUGNNNddSa221N98CMJZMy6202lrrnYv22DlX5/jOG8OPMOJII48y6mijT9JnxplmnmXW2WZffoUFBJiVV1l1tdW326TSjjvtvMuuu+1+yLUTTjzp5FNOPe30j6i9ovpr1L5H7q+j5l5R8zdQOq58Ro23S3mfwglOkmJGxHx0RLwoAiS0V8xsdTF6RU4xs80HE8AtRpkUnOUUMSIYt/PpuI/YfUbux7gZZvffxs3/KXJGofv/iJxR6L5E7ve4/SFqq1+4DTdAqkLmFIQMlB8HdV/5Hzr58ZWhpbIKM7hsX2OeBVYxuSkwBDNWarXuaUvpJ3SO237MnTMwC7rZmGqBTubx/czV9uGy/sRZcp+9p1xTOMzKMhw3idmMvLgVxokkai6jVb9yIHgzHqFi3Mx53Y7PVvB5tLJi2Z6zlDxzmGYmwl6KLzcS8cB6vYU6yx6J7/aex+htjzjt7q4AsdulOnwf7rRUwoI0R+jD1F3qKic7t+HMWbdtaTPqs2vpKe0y0x4j53SG3a3YmQdTzgQVv2M7jMYPm89hsu/4mj9l7pTGJNC1R0cQSfFEOqw29kGFbO4nMOWtp1pJi8WMtRTmOEJzQwltppnZ7fW4sMe25cyaT3Jn5t00uZM8OyS7hs5IueFLaZHiqyvH5VI7hjOOttzm4KPIDD7Sl2ukHo5+6nbtHu57DljfIRKfSD414Nu7waQfeK0XHeIUS898NQr35BCPZnLNQtbDcwwutpx27ETArzmTqyR2W6RidnuvU0w9pE4aK5fjSmfCmZG1eprUOVmeuOYEncs6oZFoiUkiC7zvZFImaPHOUVhmM0eplx3L6Lute/UwCjeb02h5ROVCj7MTecihzl1O7Lt7q1TjnoMnQseZOatVruXt6s01P3b2fbnlT1ornpgBkXjGbGiECb03so1CpRKbSysoIc7I3FrIg/HY3LlSIlphC4IGY4jkBbdTWw+V2aqO96dbi+IffK2MMscKbvWxnCHvnzos+dZh2NRhYjIXBzlAZlM9uW/Om7rjKi6XOmq9dXVj6VBxpZgNPi0Xk0sdZNEPMUkl/v1rAr9WHosJro5by9ufXVKcFTYMkxIHYVaLpTCjLYACg8oKFtl5/ExptY6aIQnHjMtztJ/F9WqYw4y4FHRw63eoAAnZC8rVTPZCBRJEa4LBZ7WTQL/DCXfwgyCHSQaSAoYpi8RkcKocOUePh3TKmxMTmZmJQDmlnViqnw3xy+/pkKy1bfAz87eng6zZXCC2djwAy4czc5qwMBJCRmZ2n6Fv4C0Y24OWrqY7V9Z+eTXf33he4xHWl5QRTY20LJAbPyFH6gTaQEDKO+l4T7Qrk2VAzHlSPXaqEmsvi+/1jdyCrbZNIBQ0eUiPnkoPE3WYIEo/kYPgWyQHPFmyTXSUcfWDubGjUA3kMCIz+O5hC2mefaLdS4oYKSJNHDr3SuFQP70xf0xAKMbfL4fuetizjKP8OD3uAUX3hSxtHVjyUKslOrt2pGkszbUpgwGQQCiWokAfidgcte1JWAqYWQ3PrDaI5IdEPLoQWHdII5Va9cZulG+k4iSR\x00\x00\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\x00\x00\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\x00\x00\x00dtraCBzWk89T+dQ6BMDgopKiN6V6LuGqxP2ub+Bnkr3aGe6Smic+rkh84b0T2vW4GGvi/23b5+Wr++gBtkgSY71bXeSyOmeEH7/WEqUcuMi2Xp10xW5Sj/auM1F8ViJWZ+NelZ4YytCB45bwAu7at2mwRCOAvqpcb8DOTFila4xAKToDDNFDJXJeMzVC6n2XV6DZY6OOXPbOfm0iGBDySQs1zjF+MqEo9k7cYM/nk7l7qnLXYGZMnIgAiw7xP2QGVWw9CKe8dPBOlkLKeVjEFmsGHTzttAWxQKYfKsys/UUAmqHM/tZtJ7Th17nt2MKLoRwgIV8LwwqO7xbw4uXJwk9PpFvTg39EOMPXva7it5lWpBcYUrgdtV9Alsf3oatZxCMhuQVrgROuAWG6EyhUxKL4vLZ6/zAHzj5LkNbl3T71DncwYuv6CzsjLI7ozNlbSdKmRz9ygyw5yB+eVyWU9eHXEVFRt0zLMwLtthwy9uunuK1r3aY7tTMWV26G1b5iUMsTNMIGAYUHbODUTnDpUGKquLbBRa6ulDMoWfwYcyPpOLdTh6UCXpl3YaihB9ONCxhlZBQh3zEp2aB/hnlm7AJVQCmnKEX9I7CSXQMj8xjzw4HfYx6A2Pc0RkId60BIpZKs2AXKRpm0jwjz5WlOiHl36knk4mCqtM0hcPSKnJ5+0o3x6hP3QLT/PtSA2+7jPtThufhnwKh2MxbL3WZln68DzrIxN2izl7s4fuQfkOZh6inbpPo/cYAUC7pBAZVOW5DvmHhTNjJWiPEEyVe0tIrdL0/4TMJAp2tAZCg1AXjtVabXsuRlAHcUmaNbDFlAraoqax3q+n0z4Zw9p3VcjrMtaydEuYT1At7UDNOmRJosvVv+1bUHl5ZD54hCxVVAHR45pIQ8bvKbG4Dxk4SmdKp1VT87BWlnNYe7vzo1VU62TWV4PziEIvTrnzM3Q4oXvJKT32s6RvdalKUhKFGMZrNq8S2sFRduvtbTYpIpw9iAHIIf+D9Q1WY/0Gd4ZeSSt/jeLZdVzK5Pixbyv0xu8feXteaffUfpFEef+nn3m75+XcHoYN9cAVnAferalA6FD7IDA3+qBnGJNwWWgpCk+iUfyqBF83Bpie99dLNwSkkO7NYGdABv0JXE/N4Bd1ADuuYoghxb/YIM1pMn81kJM5q70sDN2aiJaIX8pi+wk8dAaK+uJYIbh8srkp6sAsIEUuE89cZS1w0CPk+EXpmSvNvHh5bTErYVIPRNpc7GAhdODq0mPZ8hg6gHYYArw0dD9GAtsK+wM8ne37d0+Q4poe+XgLGppY/eAr9djsCCmdgJqhx/S8xip7o2a0GNeLSN9OR/+CWZyykgAGtlxHIjvwQGRnnbHd4dA0Ca7EdcVUcpsPWlrte03CiUtTIYtqvZ2Ard2REkvlBYxZiiVSrlr87YewSpa0XB6LlN+bWqZXcIDIe2e71Tipe8wjvRsu6pqRMDbU90uUg2Gue3OadNtNOKyA7m20McD37+ZCcKtzfLpZHcnm6FrWTmkps6Ptkmj5Ha0SKqCkiKvT5TPMI4vWwp2KV9I5z4BlNfzr7hJ7dWH86+Hq2AYyae98jULpPChIuSkp6qN2usjT7Tm1ibmQsKgo6YWzxOhAfNP7vg7zWwVLOuJU+0AQXLYOKY20nttrrB353GHAeQN+AtMQQJRizfCQFXHfRhbj8l1FMjdAd12WVkJ04TTImujcNRw6yME9YjQlrYO6mNDwDXd+sif9RH1TIHkIsiihxEgyeFn5EROT8gPPX0DHxztnQdAoqeStOmbc5MZWsk+etwbnfVFnf78IByMv5q15v8A/LsDpkefQncAAAxZaUNDUGljYwAAeJyVVwdYU8kWnltSSWiBUKSE3kSRGkBKCC2CgFRBVEISSCgxJgQVOyqr4NpFFMuKroq46OoKyFoQsbso9r5YUFHWxYINlTchAV195XuHb+78OXPmP4WZe2cA0Gnny2R5qC4A+dICeXxECGtsahqL9BAQ4B8FeIGhfIFCxomLiwZQBvp/ypurAFH1l1xVXN+P/1fRF4oUAgCQdIgzhQpBPsRNAODFApm8AABiKNTbTCmQqbAYYgM5DBDiGSqcrcbLVDhTjbf22yTGcyFuAIBM4/Pl2QBot0A9q1CQDXm0H0LsJhVKpADoGEAcKBDzhRAnQjw0P3+SCs+B2BHayyDeATE78yvO7H/wZw7y8/nZg1idV7+QQyUKWR5/2v9Zmv8t+XnKAR/2sNHE8sh4Vf6whtdzJ0WpMA3iLmlmTKyq1hC/kwjVdQcApYqVkUlqe9RMoODC+gEmxG5CfmgUxGYQh0vzYqI1+swsSTgPYrha0KmSAl6iZu5CkSIsQcO5Xj4pPnYAZ8m5HM3cWr6836/KvkWZm8TR8F8Xi3gD/K+LxIkpEFMBwKiFkuQYiLUhNlDkJkSpbTDrIjE3ZsBGroxXxW8LMVskjQhR82PpWfLweI29LF8xkC9WIpbwYjS4okCcGKmuD7ZTwO+P3xjiOpGUkzTAI1KMjR7IRSgKDVPnjrWKpEmafLG7soKQeM3cbllenMYeJ4vyIlR6a4hNFYUJmrn4yAK4ONX8eLSsIC5RHSeekcMfFaeOBy8E0YALQgELKGHLBJNADpC0dtV3wV/qkXDAB3KQDUTAVaMZmJHSPyKFzwRQBP6CSAQUg/NC+kdFoBDqPw1q1U9XkNU/Wtg/Ixc8gjgfRIE8+FvZP0s66C0ZPIQayXfeBTDWPNhUY9/rOFATrdEoB3hZOgOWxDBiKDGSGE50wk3xQNwfj4bPYNjccTbuOxDtF3vCI0Ib4T7hCqGdcGOipFj+TSyjQTvkD9dknPl1xrg95PTCQ/AAyA6ZcSZuClxxT+iHgwdBz15Qy9XErcqd9W/yHMzgq5pr7ChuFJRiRAmmOH47U9tZ22uQRVXRr+ujjjVzsKrcwZFv/XO/qrMQ9lHfWmILsX3YSewodho7iNUDFnYEa8DOYYdUeHANPexfQwPe4vvjyYU8ku/88TU+VZVUuNW4dbp91IyBAtHUAtUG406STZNLssUFLA78CohYPKlg2FCWu5u7GwCqb4r6NfWK2f+tQJhnvuiKXwMQIOzr6zv4RRcN9/RvC+A2f/RF53AYvg6MADhVJlDKC9U6XPUgwLeBDtxRJsAC2ABHmJE78Ab+IBiEgVEgFiSCVDAB1lkM17McTAEzwFxQAsrAMrAarAObwBawA/wC9oJ6cBAcBSfAWXABXAG34PrpAM9AN3gDehEEISF0hIGYIJaIHeKCuCNsJBAJQ6KReCQVyUCyESmiRGYg85AyZAWyDtmMVCO/IgeQo8hppA25gdxDOpGXyAcUQ2moAWqO2qPDUTbKQaPQRHQ8mo1ORovQ+egStAKtQnehdehR9Cx6BW1Hn6E9GMC0MCZmhblibIyLxWJpWBYmx2ZhpVg5VoXVYo3wP30Ja8e6sPc4EWfgLNwVruFIPAkX4JPxWfhifB2+A6/DW/BL+D28G/9MoBPMCC4EPwKPMJaQTZhCKCGUE7YR9hOOw93UQXhDJBKZRAeiD9yNqcQc4nTiYuIG4m5iE7GN+IDYQyKRTEgupABSLIlPKiCVkNaSdpGOkC6SOkjvyFpkS7I7OZycRpaSi8nl5J3kw+SL5MfkXoouxY7iR4mlCCnTKEspWymNlPOUDkovVY/qQA2gJlJzqHOpFdRa6nHqbeorLS0tay1frTFaEq05WhVae7ROad3Tek/TpznTuLR0mpK2hLad1kS7QXtFp9Pt6cH0NHoBfQm9mn6Mfpf+TpuhPUybpy3Unq1dqV2nfVH7uQ5Fx06HozNBp0inXGefznmdLl2Krr0uV5evO0u3UveA7jXdHj2G3gi9WL18vcV6O/VO6z3RJ+nb64fpC/Xn62/RP6b/gIExbBhchoAxj7GVcZzRYUA0cDDgGeQYlBn8YtBq0G2ob+hpmGw41bDS8JBhOxNj2jN5zDzmUuZe5lXmByNzI46RyGiRUa3RRaO3xkOMg41FxqXGu42vGH8wYZmEmeSaLDepN7ljips6m44xnWK60fS4adcQgyH+QwRDSofsHXLTDDVzNos3m262xeycWY+5\x00\x00\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\x00\x00\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\x00\x00\x00gNO3PHR30d+59dS66xgMOl52fgZR4PVKa/uQY+PqbSUzvxsaf34ByGLYRul/bJxJmFPUc5xKtGEO7s+2xB0N2fJK35Bh7//0+24u81OujxucRdZ9G5kWXMuS5N+zk2d3+W3pKZlzMCR2lqMhdwvHt34Xk63b86SkcI7Js3SWlXh9Vcm5cvWLv/cjLmIWFdhE6p3t0V0zeubj25F01mrId+c36mh/nP0/xWy/UeyabHTx5tWki04gNhPE/vYWB8xehfRH/QHSd7tFjV+hYS21brurHkTWrmvBpza75f2b/U3ej3El2DWyscF08edCcPXkqQ//8FtpTaROh+06sEcbwwq9Gu7PI/8k4fpj7JDVHjwT1qcrCfXx77YUUPvcYKrG7fcN1j0fC9SbQfdyF9HloLuaPERvGn9C0oa3sMEX9Z6VHNqaJDvgKMpTWGiMjk4OvzGXteZ35bvZPKS/Y6f8OH9pnvQCKVn7M+gl92DAxm8qdPzZqFlbX21azvg8G/HxT/1+AKp9Jtc8n4XoTOefq6znnxTci1bMbtR5d+SrKWD2+vxuosmtnOzqkYrjrXh30lZVgljXhWB6fF126HyM5DkfngXi2foOzR198hflow4lKTG9SUowztTPKWfcoyXusGF1VUbdQq0uJO6s/1PXgUgrPvgJOL/Fb+4BwZWSecYyzUlDq05QWbEfVtUpQU8zl64qIS0oWNQfB7i/+yca7rqs3Y7KViM/5Zne18paVsubCAbYWutDIMTn/ml0PaJYi9Eazc/EH5N0yDSMjPaKEPnntrmrDrrPEQtMpCWp2XaFNjdbyCvZ1ds5Uej71IromskpJa9NEdl7EmCcvCXJ2XcUlc/jwYZzl9t6XrVp4z0H6lOnsvPk21OB2EdUPTtl8EVvhevBLaOqEp7IzLdl+Q2tWX3sFxtDuYEbOjjelFM4InDywg/VgdEoPcBKvwiw6eGKWPCLampZBhc/EZ+pTQzgF3v0FIFtqm4+nhq+zeuAY0jVy7n3tbXY6cWLEQJk4nwddcwxqKq3ZZweouBSISwy43bReqvbQ/S+rwOGo8+l58LlHqfzofXA2IQfJ5/W3teKEGJW7A8QlNamt+oc9ZH64us5lOGUY/Dj3MYoWvo6Kk5OymxwWG4Yl8sHpESdyABxOnIZlrBowsfNaeh3iNiikw0MLcXfrjrN9BxzJbUAZ6JoavCXH8JWVUfLRQsr++EdU3x6Nu0mGgaprOUupxi+7eapQ1YdIeeoD3OnpONu1x9GmHSiF9tS2tZySf/yd0gcexRgRXFsVUHKMutvpF3qTHnTCKSJff+M01JBuoH2R1jzTr22Mk7yONyp6XikUlbS547dkLT9Em5FjiEvvhpGQhPaZVvEIw8DZPgV3t0zS7ryP7l+sI27UJejju1t+5OzdQ9tfPMxZXxTRZvhIq62JyVaCjtcLysDZLgV31+6kzZxN5paNxI28CH1kd1Bj8ipZVAlvuN6lC95DeyNR5KdounZwpgEP1iHq9qa8gIw31uDq0i2oEkDa68GZlkHX3z3OkYEDKJn3NLRUnlh1KV1fXYOrS1fMIEoMa68HZ0onuv7+CY6NGMXRPz0asK21s+syAxMeDK1PCtd9Efso+pdHP1XotvbkuuII3d7ZhCu98Xnn2ushZep1tL/7N+ji3WFvK644ur21Ald6tya01Uu7CVPp+Jsn0WW7z/DkZbJBJay4nA6++elka+ItwmOO04UOUG3r3j9WQPqLS3B2TGv6VlGt6TDpKhKv+Tno8PlCvb+ALk/+FWdKarPa2mb0RSRceRf4c/BPzngTwvSM9npZfWlffMeORObE22kx44kI5CSPbl+ha03y7DnEn9Wn2Z2vvV4y7n8Ec31BuBpL0t2/I753/+bvXdcmXX/zGHrLvhPhuuwnD7PIMzPRxEfUOnkDQj/JoyulsXGuu7l+Dx0uu7zhG+V0ohxOVANLir7KCjr/4+PwtHXbHjpMyGmwfFXQba2opOM778p+8hYI19fnDLHG5PahCpQG/2SccrhM7a2xrdDj75iBKyUNs6Y6oMcv+XIFpR+8jkpqg6NjF9pNmUFCr751T9hpjatjCnhrwBna+Un3pSNxZ/XErK4O6KWPf/E5ZUvfBsOBo0sW7SZNJbHvoACTi5q4zO5UHdqHkZouigwDhtasvXoC2ki2iyc/IXTldJknhO4rL8Jwtz0ADLbjjWg77eaAs9bK4eDA0/9N5fL3T8kAK//Ds6R//jEJ59R9JHxcWheoPgDOzJCG7W1+OhvtqdtYlMvFob88TfnCV08k43i2bKDi2WdJX7ychL6DoY7arEk9eqH2A6kiypATwRlvQXDAd7zgX2N0XXUMIN+WN0JrnB06BBzvlm9aR8X7fz4jzdPIzuTIX/6IcjoDiC4OZ5/skNeAi+/VH23WvRxTsWkdZS88dkbGndE/k6InZmPEuQIEASZtrr/MjoYY0TgNg3WRnPHWMPnaXw/DErqVbZlnT6Gb9R5/VHOoCJVc9zKI561PAmexaY2z29khKwXtnwsJmKUGULl9G6pTRt1tXf59wLZqrYnL7I1sOQ6tyE9kvNmXPF12ktBNa9J2s109en3TzNqk3pTUemeoHa46Q+VmKL3+t02zySmpyuUSdYYyXI/sjLdg2ewrOUnoftFviMqbJmtNQiMwtGZNVg9UZGe8BcuG2iJqBsBka/xRBfjkVguxio0y3oLBB1Td4h/OGae5vXy53ZEZlJRIcBLePrZXxlswnKLl0weE38ktjzxKvD6p3Blukdsr4y0Yvqtb6NZTTM77jTBPXiq70MIertsw4y0YtpwcmZwQesJZg8CuS2xRLnIhPJyS8RZ95CX2yT5T6EP/thRgu9z+yEB2oYUZTw1fd+2K7+jhaArXT2b7xe8uDjhG3yoWEBkil11o4SMKMt6CYWvdY3SLauBHMYXWC9fLvF4J18Ms8ijIeGuIHzlt23ldaVgLxRxahwrTOvRQCGO4Hh0Zbw2x8PSMzlOFboUx74pFtA4mslYeLqIs460h3j19j8YpQm879AKAbUCNmIYQLURZxltD1ADb2o+4NLDQB8x7A6AcqBDzEKKBKMx4a3AECJSPffl/qX+MrnU1sswmRIvIoy/jrSG2+zXckNB9AC+JmQh2D9ejNOOtIV7S5pmV288Quq94P8DLYiqCXYnyjLeGeNl36EjDQh+7S4NV+F2SZwT7Ef0Zb/WxFfBMO6QbFrp/nA6wWqwmhONFrIw3WSUPHzGS8VYfqwOVE6tT6AlnDQRYJKYTWpFLxlt4RR4DGW8NsSix97Dghe7f4LLUNpen6xdZfe/XWxHO5w2ZyIPZoKIMA93UAo9eT+yad+xkvDXE0osXLg1e6H6qgWURf2mGgfYFvrlxnVLQ5YV1vueacUHgyqlK4du/Cxo4KaUhTjkmSZuYZmAht+3ZE33wcJ3vJYztFvAhoFBU79nZ+HPZo4AYy3irj2XUc6xaYKFbY5ynIz8uNvCVHAto5ElDR5Iw4fozyjab63bT4fZfBTxaWXs8ePLXNFk8SqkzTzXVULEzP2DJ5/bnnkfK7T8/o62+/EKyHvwLpqdur60cBmXvLm9yBVm7EmMZbw3xdH0PuoCW0X7kZQCbsEHByNIPXg9Y7lj7fHT51aO0/9XjOLp1xdmzD+4xl5K+4h8kDx0V8DtrDh8Ad+cmihxKPd4zw3WlOPS/f8II0FbTU8PZd/2Krg88iTvrbNxZZ5E8fgJ9lyylw7CRgQ+pKPgBs32MzXvEXsZbvYNMYFPK2CmB5zACvdHv+ZfJHZF1ENgPdI/kqyyf+ybmf/w3KiEpYHjf/oKL6XCJ/yBGrdE+HzrQuFYpPEVHwOluUnsqfVBl+uo8ILF04RdUPvgjcWnpAbyzky4XXUb6ZRNRWIczaJ8PM+AYXFFaUICRlh5bIs/MtGbXY28JrS72AwfPf35e4z36SeH7ryP9Kh3Du1G8vOG5Q+31Wi9f/UGKIyGRg5de3uT21Gd6jkFdOPJ9flBtNYNoqzMxgd0/mRFT4XqMZrzVx68bimrqFXpS3xEAC4DSSB+nlz57D9V7fmj2hJRyOCn8f/+FMTwzTG1V7Lvup1Ts\x00\x00\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\x00\x00\x00iwwM9/le1/1Xlfx3wizoP2Ix1PFHViU9rTUL3PlyyZIXcNBG60Gy0yXzDQVvA0QZUGih3RxyueLQ2DX84UPtUOP3v9X7zSX+e8nelDNPnqURXFqOLwFdq1WG6xfTVTjQKInSh1Z4JXg++igpMTw2m14v2+dBaoxzWadPa50UZBsowMJxOjDg3joQElNMlnReF/H9j9/zNgaZunAAAAABJRU5ErkJggg==\",\"mediatype\":\"image/png\"}],\"install\":{\"spec\":{\"clusterPermissions\":[{\"rules\":[{\"apiGroups\":[\"config.openshift.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\"]}],\"serviceAccountName\":\"windup-operator\"}],\"deployments\":[{\"name\":\"windup-operator.0.0.3\",\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"windup-operator\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"name\":\"windup-operator\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"WATCH_NAMESPACE\",\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/windupeng/windup-operator-native:0.0.3\",\"imagePullPolicy\":\"Always\",\"name\":\"windup-operator\"}],\"serviceAccountName\":\"windup-operator\"}}}}],\"permissions\":[{\"rules\":[{\"apiGroups\":[\"apps\",\"extensions\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"persistentvolumeclaims\",\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"route.openshift.io\"],\"resources\":[\"routes\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"windup.jboss.org\"],\"resources\":[\"windups\",\"windups/status\"],\"verbs\":[\"create\",\"list\",\"watch\",\"get\",\"update\",\"delete\",\"patch\"]}],\"serviceAccountName\":\"windup-operator\"}]},\"strategy\":\"deployment\"},\"installModes\":[{\"supported\":true,\"type\":\"OwnNamespace\"},{\"supported\":true,\"type\":\"SingleNamespace\"},{\"supported\":false,\"type\":\"MultiNamespace\"},{\"supported\":false,\"type\":\"AllNamespaces\"}],\"keywords\":[\"monitoring\",\"security\",\"alerting\",\"metric\",\"troubleshooting\",\"run-time\",\"migration\",\"modernization\"],\"links\":[{\"name\":\"Website\",\"url\":\"https://red.ht/mta\"},{\"name\":\"GitHub\",\"url\":\"https://github.com/windup/windup-operator\"},{\"name\":\"Documentation\",\"url\":\"https://access.redhat.com/documentation/en-us/migration_toolkit_for_applications\"}],\"maintainers\":[{\"email\":\"migrate@redhat.com\",\"name\":\"Migration Toolkit for Applications\"}],\"maturity\":\"alpha\",\"provider\":{\"name\":\"Red Hat\"},\"replaces\":\"windup-operator.0.0.2\",\"version\":\"0.0.3\"}}\n{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"labels\":{\"application\":\"windup\"},\"name\":\"windups.windup.jboss.org\"},\"spec\":{\"group\":\"windup.jboss.org\",\"names\":{\"kind\":\"Windup\",\"plural\":\"windups\",\"shortNames\":[\"w\"],\"singular\":\"windup\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"auto_deploy_exploded\":{\"default\":\"false\",\"type\":\"string\"},\"db_database\":{\"default\":\"mta\",\"type\":\"string\"},\"db_jndi\":{\"default\":\"java:jboss/datasources/WindupServicesDS\",\"type\":\"string\"},\"db_max_pool_size\":{\"type\":\"string\"},\"db_min_pool_size\":{\"type\":\"string\"},\"db_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"db_tx_isolation\":{\"type\":\"string\"},\"db_username\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"docker_image_executor\":{\"default\":\"windup-web-openshift-messaging-executor\",\"type\":\"string\"},\"docker_image_web\":{\"default\":\"windup-web-openshift\",\"type\":\"string\"},\"docker_images_repository\":{\"default\":\"quay.io\",\"type\":\"string\"},\"docker_images_tag\":{\"default\":\"5.1.2.Final\",\"type\":\"string\"},\"docker_images_user\":{\"default\":\"windupeng\",\"type\":\"string\"},\"executor_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"executor_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"executor_desired_replicas\":{\"default\":1,\"type\":\"integer\"},\"executor_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"executor_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"executor_mem_request\":{\"defaul\x00\x00\x00\x00t\":\"0.5Gi\",\"type\":\"string\"},\"executor_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/mta-cli/bin/livenessProbe.sh\",\"type\":\"string\"},\"gc_max_metaspace_size\":{\"default\":512,\"type\":\"integer\"},\"hostname_http\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"jgroups_encrypt_keystore\":{\"default\":\"jgroups.jceks\",\"type\":\"string\"},\"jgroups_encrypt_name\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_password\":{\"default\":\"\",\"type\":\"string\"},\"jgroups_encrypt_secret\":{\"default\":\"eap-app-secret\",\"type\":\"string\"},\"max_post_size\":{\"default\":\"4294967296\",\"type\":\"string\"},\"messaging_serializer\":{\"default\":\"http.post.serializer\",\"type\":\"string\"},\"mq_cluster_password\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"mq_queues\":{\"default\":\"\",\"type\":\"string\"},\"mq_topics\":{\"default\":\"\",\"type\":\"string\"},\"mta_Volume_Capacity\":{\"default\":\"20G\",\"type\":\"string\"},\"postgresql_cpu_limit\":{\"default\":\"2\",\"type\":\"string\"},\"postgresql_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"postgresql_image\":{\"default\":\"centos/postgresql-96-centos7:latest\",\"type\":\"string\"},\"postgresql_max_connections\":{\"default\":\"200\",\"type\":\"string\"},\"postgresql_mem_limit\":{\"default\":\"2Gi\",\"type\":\"string\"},\"postgresql_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"postgresql_shared_buffers\":{\"type\":\"string\"},\"sso_bearer_only\":{\"default\":\"\",\"type\":\"string\"},\"sso_disable_ssl_certificate_validation\":{\"default\":\"true\",\"type\":\"string\"},\"sso_enable_cors\":{\"default\":\"false\",\"type\":\"string\"},\"sso_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_public_key\":{\"default\":\"\",\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_realm\":{\"default\":\"mta\",\"type\":\"string\"},\"sso_saml_certificate_name\":{\"default\":\"jboss\",\"type\":\"string\"},\"sso_saml_keystore\":{\"default\":\"keystore.jks\",\"type\":\"string\"},\"sso_saml_keystore_password\":{\"default\":\"mykeystorepass\",\"type\":\"string\"},\"sso_saml_keystore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_saml_logout_page\":{\"default\":\"/\",\"type\":\"string\"},\"sso_secret\":{\"description\":\"leave empty for auto-generation\",\"type\":\"string\"},\"sso_service_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_truststore\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_password\":{\"default\":\"\",\"type\":\"string\"},\"sso_truststore_secret\":{\"default\":\"eap7-app-secret\",\"type\":\"string\"},\"sso_url\":{\"default\":\"/auth\",\"type\":\"string\"},\"sso_username\":{\"default\":\"\",\"type\":\"string\"},\"tls_secret\":{\"default\":\"\",\"type\":\"string\"},\"volumeCapacity\":{\"default\":\"20G\",\"type\":\"string\"},\"webLivenessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webLivenessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webLivenessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"webReadinessFailureThreshold\":{\"default\":\"3\",\"type\":\"string\"},\"webReadinessInitialDelaySeconds\":{\"default\":\"120\",\"type\":\"string\"},\"webReadinessTimeoutSeconds\":{\"default\":\"10\",\"type\":\"string\"},\"web_cpu_limit\":{\"default\":\"4\",\"type\":\"string\"},\"web_cpu_request\":{\"default\":\"0.5\",\"type\":\"string\"},\"web_liveness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/livenessProbe.sh\",\"type\":\"string\"},\"web_mem_limit\":{\"default\":\"4Gi\",\"type\":\"string\"},\"web_mem_request\":{\"default\":\"0.5Gi\",\"type\":\"string\"},\"web_readiness_probe\":{\"default\":\"/bin/bash, -c, /opt/eap/bin/readinessProbe.sh\",\"type\":\"string\"}},\"required\":[\"web_cpu_request\",\"web_mem_request\",\"executor_cpu_request\",\"executor_mem_request\",\"messaging_serializer\",\"mta_Volume_Capacity\",\"db_database\",\"volumeCapacity\",\"sso_url\",\"sso_realm\",\"docker_images_user\",\"docker_images_tag\",\"max_post_size\",\"executor_desired_replicas\"],\"type\":\"object\"},\"status\":{\"properties\":{\"conditions\":{\"items\":{\"properties\":{\"lastTransitionTime\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"reason\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"required\":[\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"}},\"required\":[\"spec\"],\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\nquay.io/olmqe/mta-operator:v0.0.3-18690.0.3windup-operator.0.0.2\r\x00\x00\x00\x01\b\xf9\x00\b\xf9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x8d/\x05\x0e7\x84\xe0l\x85\xb8DY\r\x177\r\rwindup-operator.0.0.3{\"apiVersion\":\"operators.coreos.com/v1alpha1\",\"kind\":\"ClusterServiceVersion\",\"metadata\":{\"annotations\":{\"alm-examples\":\"[\\n {\\n   \\\"apiVersion\\\": \\\"windup.jboss.org/v1\\\",\\n   \\\"kind\\\": \\\"Windup\\\",\\n   \\\"metadata\\\": {\\n     \\\"namespace\\\": \\\"mta\\\",\\n     \\\"name\\\": \\\"mta\\\",\\n     \\\"labels\\\": {\\n       \\\"application\\\": \\\"windup\\\"\\n     }\\n   },\\n   \\\"spec\\\": {\\n     \\\"hostname_http\\\": \\\"\\\",\\n     \\\"volumeCapacity\\\": \\\"20G\\\",\\n     \\\"mta_Volume_Capacity\\\": \\\"20G\\\",\\n     \\\"docker_images_repository\\\": \\\"quay.io\\\",\\n     \\\"docker_images_user\\\": \\\"windupeng\\\",\\n     \\\"docker_images_tag\\\": \\\"5.1.2.Final\\\",\\n     \\\"docker_image_web\\\": \\\"windup-web-openshift\\\",\\n     \\\"docker_image_executor\\\": \\\"windup-web-openshift-messaging-executor\\\",\\n     \\\"messaging_serializer\\\": \\\"http.post.serializer\\\",\\n     \\\"db_jndi\\\": \\\"java:jboss/datasources/WindupServicesDS\\\",\\n     \\\"db_username\\\": \\\"\\\",\\n     \\\"db_password\\\": \\\"\\\",\\n     \\\"db_min_pool_size\\\": \\\"\\\",\\n     \\\"db_max_pool_size\\\": \\\"\\\",\\n     \\\"db_tx_isolation\\\": \\\"\\\",\\n     \\\"mq_cluster_password\\\": \\\"\\\",\\n     \\\"mq_queues\\\": \\\"\\\",\\n     \\\"mq_topics\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_secret\\\": \\\"eap-app-secret\\\",\\n     \\\"jgroups_encrypt_keystore\\\": \\\"jgroups.jceks\\\",\\n     \\\"jgroups_encrypt_name\\\": \\\"\\\",\\n     \\\"jgroups_encrypt_password\\\": \\\"\\\",\\n     \\\"jgroups_cluster_password\\\": \\\"\\\",\\n     \\\"auto_deploy_exploded\\\": \\\"false\\\",\\n     \\\"sso_url\\\": \\\"/auth\\\",\\n     \\\"sso_service_url\\\": \\\"/auth\\\",\\n     \\\"sso_realm\\\": \\\"mta\\\",\\n     \\\"sso_username\\\": \\\"\\\",\\n     \\\"sso_password\\\": \\\"\\\",\\n     \\\"sso_public_key\\\": \\\"\\\",\\n     \\\"sso_bearer_only\\\": \\\"\\\",\\n     \\\"sso_saml_keystore_secret\\\": \\\"eap7-app-secret\\\",\\n     \\\"sso_saml_keystore\\\": \\\"keystore.jks\\\",\\n     \\\"sso_saml_certificate_name\\\": \\\"jboss\\\"\x00\x00\x00V")

func testQeTestdataOpmRenderDiffIndexDbBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderDiffIndexDb, nil
}

func testQeTestdataOpmRenderDiffIndexDb() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderDiffIndexDbBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/diff/index.db", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderInitReadmeMd = []byte(`it is testing`)

func testQeTestdataOpmRenderInitReadmeMdBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderInitReadmeMd, nil
}

func testQeTestdataOpmRenderInitReadmeMd() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderInitReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/init/readme.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderInitTestPng = []byte("\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x1e\x00\x00\x00\x17\b\x06\x00\x00\x00\x1c?\xffj\x00\x00\x04\x19iCCPkCGColorSpaceGenericRGB\x00\x008\x8d\x8dU]h\x1cU\x14>\xbbsg#$\xceSl4\x85t\xa8?\r%\r\x93V4\xa1\xb4\xba\x7f\xdd\xdd6n\x96I6\xda\"\xe8d\xf6\xee\u0398\xc9\xce83\xbb\xfd\xa1OEP|1\xea\x9b\x14\u013f\xb7\x80 (\xf5\x0f\xdb>\xb4/\x95\n%\xda\xd4 (>\xb4\xf8\x83P\u82e6\xeb\x99;3\x99i\xba\xb1\xdee\xee|\xf3\x9d\xef\x9e{\xee\xb9g\xef\x05\u8e6aX\x96\x91\x14\x01\x16\x9a\xae-\x172\xe2s\x87\x8f\x88=+\x90\x84\x87\xa0\x17\x06\xa1WQ\x1d+]\xa9L\x026O\vw\xb5[\xdfC\xc2{_\xd9\xd5\xdd\xfe\x9f\xad\xb7F\x1d\x15 q\x1fb\xb3\xe6\xa8\v\x88\x8f\x01\xf0\xa7U\xcbv\x01z\xfa\x91\x1f?\xeaZ\x1e\xf6b\xe8\xb71@\xc4/z\xb8\xe1c\xd7\xc3s>~\x8dif\xe4,\xe2\u04c8\x05USj\x88\x97\x10\x8f\xcc\xc5\xf8F\f\xfb1\xb0\xd6_\xa0Mj\xeb\xaa\xe8\xe5\xa2b\x9bu\u0760\xb1p\xefa\xfe\x9fm\xc1h\x85\xf3m\u00e7\u03d9\x9f>\x84\xefa\\\xfb+5%\xe7\xe1Q\xc4K\xaa\x92\x9fF\xfc\b\xe2km}\xb6\x1c\xe0\u06d6\x9b\x91\x11?\x06\x90\xdc\u079a\xaf\xa6\x11\xefD\\\xac\xdb\a\xaa\xbe\x9f\xa4\xad\xb5\x8a!~\xe7\x846\xf3,\xe2-\x88\xcf7\xe7\xcaS\xc1\u062b\xaa\x93\u015c\xc1v\u01375Z\xf2\xf2;\x04\xc0\x89\xba[\x9a\xf1\xc7r\xfbmS\x9e\xf2\xe7\xe5\xea5\x9a\xcb{yD\xfc\xfa\xbcyH\xf6}r\x9f9\xed\xe9|\xe8\xf3\x84\x96-\a\xfc\xa5\x97\x94\x83\x15\u0103\x88\x7f\xa1FA\xf6\xe7\xe2\xfe\xb1\xdcJ\x10\x03\x19j\x1a\xe5I\x7f.\x92\xa3\x0e[/\xe3]m\xa6\xe8\xcfK\f\x177\xd4\x1fK\x16\xeb\xfa\x81R\xa0\xffD\xb3\x8br\x80\xafY\x06\xabQ\x8c\x8dO\xda-\xb9\xea\xeb\xf9Q\xc5\xce\x17|\x9f|\x856\xab\x81\x7f\xbe\r\xb3\t\x05(\x980\x87\xbd\nMX\x03\x11d(@\x06\xdf\x16\xd8h\xa9\x83\x0e\x062\x14\xad\x14\x19\x8a_\xa1f\x17\x1b\xe7\xc0<\xf2:\xb4\x99\xcd\xc1\xbe\u0094\xfe\xc8\xc8_\x83\xf9\xb8\u03b4*d\x87>\x82\x16\xb2\x1a\xfc\x8e\xac\x16\xd3e\xf1\xab\x85\\c\x13?~,7\x02?&\x19 \x12\u0643\xcf^2I\xf6\x91q2\x01\"y\x8a<M\xf6\x93\x1c\xb2\x13d\xef\xfa\xd8JlE^<7\xd6\xfd\xbc\x8c3R\xa6\x9bE\xdd9\xb4\xbb\xa0`\xff3*L\\S\u05ec,\x0e\xb6\x86#\xcb)\xfb\x05]\xbd\xfc\xc6_\xb1\\\xe9,7Q\xb6\xe2\x19\x9d\xbaW\xce\xf9_\xf9\xeb\xfc2\xf6+\xfcj\xa4\xe0\x7f\xe4W\xf1\xb7r\xc7Z\u033b\xb2L\xc3\xeclXswU\x1am\x06\xe3\x16\xf0\u0459\u0149\xc5\x1d\xf3q\xf1\xe4W\x0fF~\x96\u0259\xe7\xaf\xf4]<Yo.\x0eF\xac\x97\x05\xfaj\xf9V\x19N\x8dD\xac\xf4\x83\xf4\x87\xb4,\xbd'}(\xfd\u01bd\xcd}\xca}\xcd}\xce}\xc1]\x02\x91;\u02dd\xe3\xbe\xe1.p\x1fs_\xc6\xf6j\xf3\x1aZ\xdf{\x16y\x18\xb7g\xe9\x96k\xacJ!#l\x15\x1e\x16r\xc26\xe1Qa2\xf2'\f\bcBQ\u0601\x96\xad\xeb\xfb\x16\x9f/\x9e=\x1d\x0ec\x1f\xe6\xa7\xfb\\\xbe.V\x01\x89\xfb\xb1\x02\xf4M\xfeUUT\xe9p\x94)\x1dVoM8\xbeA\x13\x8c$Cd\x8c\x946T\xf7\xb8W\xf3\xa1\"\x95O\xe5Ri\x10S;S\x13\xa9\xb1\xd4A\x0f\x87\xb3\xa6v\xa0m\x02\xfb\xfc\x1d\u0569n\xb2R\xea\xd2c\xde}\x02Y\xd3:n\xeb\r\xcd\x15wK\u0493b\x1a\xaf6*\x96\x9a\xea\u8228\x18\x86\xc8L\x8ehS\x87\xdamZ\x1b\x05\xef\xde\xf4\x8f\xf4\x9b2\xbb\x0f\x13[.G\x9c\xfb\f\xc0\xbe?\xf1\xec\xfb.\u23b4\x00\x96\x1c\x80\x81\xc7#n\x18\xcf\xca\a\xde\x058\xf3\x84\u06b2\xdb\xc1\x1d\x91H|\v\xe0\xd4\xf7\xec\xf6\xbf\xfa2x~\xfd\xd4\xe9\xdc\xc4s\xac\xe7-\x80\xb57;\x9d\xbf\xdf\xeft\xd6>@\xff\xab\x00g\x8d\x7f\x01\xa0\x9f|U\x03\\\v\xef\x00\x00\x00DeXIfMM\x00*\x00\x00\x00\b\x00\x02\x01\x12\x00\x03\x00\x00\x00\x01\x00\x01\x00\x00\x87i\x00\x04\x00\x00\x00\x01\x00\x00\x00&\x00\x00\x00\x00\x00\x02\xa0\x02\x00\x04\x00\x00\x00\x01\x00\x00\x00\x1e\xa0\x03\x00\x04\x00\x00\x00\x01\x00\x00\x00\x17\x00\x00\x00\x00\r!\xc0\xda\x00\x00\x02\x02iTXtXML:com.adobe.xmp\x00\x00\x00\x00\x00<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"XMP Core 5.4.0\">\n   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n      <rdf:Description rdf:about=\"\"\n            xmlns:exif=\"http://ns.adobe.com/exif/1.0/\"\n            xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\">\n         <exif:PixelXDimension>30</exif:PixelXDimension>\n         <exif:PixelYDimension>23</exif:PixelYDimension>\n         <tiff:Orientation>1</tiff:Orientation>\n      </rdf:Description>\n   </rdf:RDF>\n</x:xmpmeta>\nE\xd5*\xda\x00\x00\x04+IDATH\rm\x95=O\x1bA\x10\x86\xe7\u0387\xb1\t\x1f\x11\r\x82\x80\xa0\xe1\x0f A\x91(MBH$\u0688\b\x89\x02\x89\x1f\x86\x90\x88\xd2P&J\x03t\xfc\x05\x1a>\x1a(\xa2DA\x8a\xc0\xc6\xc6\xf6]\xf6\x99\xe55\x17+#\xdf\xdd\xee\xec\u033c\xef\xcc\u03ae\x93^\xafW$IbIR\x18R\x14\x85\x05\x9d\xdd\xdd\xdd\xd9\xc3\xc3C\xd0W\\o\x96\x86q\xe2\xeb\u0624iT\xc7qjy\x9e\xfb\xda\xf0\xf0\xb0\xd5\xebu\x1b\x1a\x1a\xea\xdb?\x06\xf0\xb9\xc6i\x10W\xe0\x88t:\x1d\a\x8d\x81 \x14\x1f\xd6 \x84T*\x91\fs\x80y$\xddn\xd7\xee\xef\xef\xad\xd5j\xb9\xbd\xc8j]\xdfG\xde1S@\x9f\x9c\n\aEW\xa9D\xf68A\x88J Y\x96\xb9\x8d\x80\x01\x81L\xbb\xdd\xf68\xb2s\xe3\xd2\v\xfb$\xbc\x90\xe0\x103\x8d\xe5M\x02@(n\xa8F\x9afF\x16\b\xe5C'{\xf4\xe8\xe2\xbc\u05ef\x0es\u064f\x8e\x8e\xf6\t\xba2\xbcXOy\xf1\xb4\u06ddP\x9e\a\x1fSJ\x95\x98\f\xb4_\x001\x87\\\x19\x94\x80\xd8\xeb\v9\x84j5\x9bM\x8f\xc9\\\x84\x18\xa7*\x0f\x06\b\u58dc\xe8E\x8a9\x804\xce\xe5\u595d\x9c\x9c\xd8\xed\xed\xad\u06e0\xc7N\xc0\xe5\xe0\x8c);\x04\x06%\xd3\"\x01\xd44\x1186\x90\xb2\xafV\xabv~~n\xfb\xfb\xfb\xd6h4ln\xee\x85MOO{\xd0AP\x81\x939\xb1\x00'\x0eII\xbc\xd4t F\x04(g\xab\x80|/..loo\xcfA\xb7\xb6\xb6lqq\xd1\xc7*\xab\xc0\xb0\x1d|\xd8\x1a\x12Cd\x97v\xbb\xb97\x12\xc6(i\xa6\xa2\x88\xce\x04\x85\xe9\xd9\u0659}\xde\xffb\xcdF\u02f6\xb7\xb7mee%\xecs\u05fb\x1d\xa2\xd8( _@\x88\x87\xf0\xa5\x1f\xb0\x93\xdeq(\x9b\xb2e/P*\x10\x86\x80\x1e\x1c\x1c\xf8\xb9\xdc\xd9\u0671\xe5\xe5e\x1fsI\xe0\u01d7\xc0\xec?\x0f@\xf8\x03$2\xe8\x04*2\u026f_\xbf\v\x8c\xc2\tu'\x8c\xc5\xf6\xfa\xfa\xdavw\xf7|o_\xbd|mKKK\xd6j7\xfbA\x01\x0e?\x0f\x8a\xdf\xfc\xfc\xbc-,,8!\x00b\xdcX^zdbb\xa2\x1f;c\x11\xa0<\x8f\x99\u009e&\xe0K\a\x9f\x9e\x9e\xda\xe4\xe4\xa4]]]\x19D:\xdd\xd8(\x80b\xc3UK\f\u01ab\xab\xab6;;\xeb\xc0\xaa\xa2\xb2&\xe3\xb2d\x94\x05%\x86*\x11\xcdF\t)\xeb\x9f?\xb7\xf6\xed\xebw\x9b\x99\x99\xb1\x8d\x8d\r\xd7\u04e5I\x1a\xcf?\xc0\xf8\x02NV\xc4`\x8e\bT\x15\xfc/0Yr]\xe2T\xab\u055cL\xbd\xfe\xcc\u07beyg\xddN\xeeg\xf7\xf8\xf8\xd8\xc1\xa7\xa6\xa6\xec\xbe\xd5x\xec\x85^\x7f\x8f\xe9\x112\a<V\xe3\xe9\x94\x10\xbf\xbc\x8d\xd9\xc8\u0208\x9f3\x94e\xa6l{\xa5\x92z\x99\xd7\xd6\u059c\xec\xd1\u04517\xd6\xe6\xe6\xa6\xd5\xeaU\xf7\xe3\xaa%(\x17\x10\x95S\x05\x89\xa7\x8cq\xa6\x1a\x12\xf4^j\x1c\xf3\xfc\xe9\x02\x89\xfb\xf1t\xf8\xc7\xc7\xc7m}}\u0749\x1d\x1e\x1ez6\x1b\x9f>\x1az\xaa*\x10@\x89\x85\xbf\a\xf7\xb8\xb1\x87\u0417%\u00f1Z\xcd\xc2e\x10\x9b\x86E\x9cB\x8c\x10\x80F\v\xf7j\x18\x0f\xd7*\xf6\xfe\xc3[\xeb\xe5m\xbfL~\xfe\xfc\x11\xaa\xf1\xdc\xefw\xf6\x10P\xfcTb\xed;\xe5\x1f\x1b\x1bs\u04aa(\x18\xfe\xef\xc4\xder\x9eU*\fb\xd6\xf1\xa2\xe7|2\x875\xb7\xd0\xcd\u034d\x1f\r\xf5\x82\a\n\xe0\x00\xab\x91\x18#\xc4b;\xb1\x15\xb0\u06c5W\x01K:Y\x97\t\xeca\x8aayL\xe7\xa2\xd3\x03\te\xea(\xe1\x050\x81y\x10@!\xce?\x9c\x845/<\x99\x88\xbd\xfeM\xe4\b)\x80\xb4w8\xab\x1a\x80\ff(P\xf4\xf8\x01:\xb8\xbf\xac\xf9\xbf\x93\x0f\x028g\x97\xac\u0299\x90\x11B\x05X\xd3\x1f\xbf\xf6R$\xb0\x11Y\x00\xb1\x03\x10\xff29\x8d\xffi5Z\x9e\xe0Z\x84\x00s\x82\xabT\x8c\t\x8c\r\x0fs\xd9\x03\xce\x1aq\x94\xa9\xd6D\n\x1b\u0101Q\xca\x00\a\u0194\x1caM\xac5\xe6[&\x00\x18:\x84,\x01\xe6!\x8e\xf4\xbeXz\xfd\x05\x8e\x98Z6\xba\xf4\x186\x00\x00\x00\x00IEND\xaeB`\x82")

func testQeTestdataOpmRenderInitTestPngBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderInitTestPng, nil
}

func testQeTestdataOpmRenderInitTestPng() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderInitTestPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/init/test.png", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateCatalogOperator1IndexYaml = []byte(`---
schema: olm.package
name: operator-1
defaultChannel: alpha
---
entries:
- name: operator-1.v0.1.0
- name: operator-1.v0.2.0
  replaces: operator-1.v0.1.0
name: alpha
package: operator-1
schema: olm.channel
---
image: quay.io/xzhao/operator-1-bundle:v0.1.0
name: operator-1.v0.1.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.1.0
schema: olm.bundle
---
image: quay.io/xzhao/operator-1-bundle:v0.2.0
name: operator-1.v0.2.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.2.0
schema: olm.bundle
`)

func testQeTestdataOpmRenderValidateCatalogOperator1IndexYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateCatalogOperator1IndexYaml, nil
}

func testQeTestdataOpmRenderValidateCatalogOperator1IndexYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateCatalogOperator1IndexYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/catalog/operator-1/index.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYaml = []byte(`---
schema: olm.package
name: operator-1
defaultChannel: beta
---
entries:
- name: operator-1.v0.1.0
  replaces: operator-1.v0.2.0
- name: operator-1.v0.2.0
  replaces: operator-1.v0.1.0
- name: operator-1.v0.4.0
  replaces: operator-1.v0.2.0
name: 45401-1
package: operator-1
schema: olm.channel
---
entries:
- name: operator-1.v0.1.0
- name: operator-1.v0.2.0
- name: operator-1.v0.4.0
name: 45401-2
package: operator-1
schema: olm.channel
---
entries:
- name: operator-1.v0.1.0
  replaces: operator-1.v0.2.0
- name: operator-1.v0.2.0
  replaces: operator-1.v0.4.0
- name: operator-1.v0.4.0
  replaces: operator-1.v0.1.0
name: 45401-3
package: operator-1
schema: olm.channel
---
entries:
- name: operator-1.v0.1.0
- name: operator-1.v0.2.0
  replaces: operator-1.v0.1.1
name: alpha
package: operator-1
schema: olm.channel
---
entries:
- name: operator-1.v0.3.0
  skips:
    - operator-1.v0.2.0
name: "4.7"
package: operator-1
schema: olm.channel
---
entries:
- name: operator-1.v0.4.0
  replaces: operator-1.v0.5.0
- name: operator-1.v0.5.0
  replaces: operator-1.v0.4.0
name: "4.8"
package: operator-1
schema: olm.channel
---
entries:
- name: operator-1.v0.6.0
  skipRange: ">=0.1.0 <0.6.0"
name: "4.9"
package: operator-1
schema: olm.channel
---
image: quay.io/xzhao/operator-1-bundle:v0.1.0
name: operator-1.v0.1.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.1.1-1
schema: olm.bundle
---
image: quay.io/xzhao/operator-1-bundle:v0.2.0
name: operator-1.v0.2.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.2.0
schema: olm.bundle
---
name: operator-1.v0.3.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.3.0
schema: olm.bundle
---
image: quay.io/xzhao/operator-1-bundle:v0.4.0
name: operator-1.v0.4.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.4.0
schema: olm.bundle
---
image: quay.io/xzhao/operator-1-bundle:v0.5.0
name: operator-1.v0.5.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.5.0
schema: olm.bundle
---
image: quay.io/xzhao/operator-1-bundle:v0.6.0
name: operator-1.v0.6.0
package: operator-1
properties:
- type: olm.gvk
  value:
    group: example.my.domain
    kind: Operator
    version: v1alpha1
- type: olm.package
  value:
    packageName: operator-1
    version: 0.6.0
schema: olm.bundle
`)

func testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYamlBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYaml, nil
}

func testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYaml() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/catalog-error/operator-1/index.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJson = []byte(`{
    "schema": "olm.package",
    "name": "operator-2",
    "defaultChannel": "beta"
}
{
    "schema": "olm.channel",
    "name": "4.7",
    "package": "operator-2",
    "entries": [
        {
            "name": "operator-2.v0.3.0",
            "skips": [
                "operator-2.v0.2.0"
            ]
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "4.8",
    "package": "operator-2",
    "entries": [
        {
            "name": "operator-2.v0.4.0",
            "replaces": "operator-2.v0.5.0"
        },
        {
            "name": "operator-2.v0.5.0",
            "replaces": "operator-2.v0.4.0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "4.9",
    "package": "operator-2",
    "entries": [
        {
            "name": "operator-2.v0.6.0",
            "skipRange": ">=0.1.0 <0.6.0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "alpha",
    "package": "operator-2",
    "entries": [
        {
            "name": "operator-2.v0.1.0"
        },
        {
            "name": "operator-2.v0.2.0",
            "replaces": "operator-2.v0.1.1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "operator-2.v0.1.0",
    "package": "operator-2",
    "image": "quay.io/xzhao/operator-2-bundle:v0.1.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.my.domain",
                "kind": "Operator",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "operator-2",
                "version": "0.1.1-1"
            }
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "operator-2.v0.2.0",
    "package": "operator-2",
    "image": "quay.io/xzhao/operator-2-bundle:v0.2.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.my.domain",
                "kind": "Operator",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "operator-2",
                "version": "0.2.0"
            }
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "operator-2.v0.3.0",
    "package": "operator-2",
    "image": "",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.my.domain",
                "kind": "Operator",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "operator-2",
                "version": "0.3.0"
            }
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "operator-2.v0.4.0",
    "package": "operator-2",
    "image": "quay.io/xzhao/operator-2-bundle:v0.4.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.my.domain",
                "kind": "Operator",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "operator-2",
                "version": "0.4.0"
            }
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "operator-2.v0.5.0",
    "package": "operator-2",
    "image": "quay.io/xzhao/operator-2-bundle:v0.5.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.my.domain",
                "kind": "Operator",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "operator-2",
                "version": "0.5.0"
            }
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "operator-2.v0.6.0",
    "package": "operator-2",
    "image": "quay.io/xzhao/operator-2-bundle:v0.6.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.my.domain",
                "kind": "Operator",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "operator-2",
                "version": "0.6.0"
            }
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJson, nil
}

func testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/catalog-error/operator-2/index.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsEtcdChannel1Json = []byte(`{
    "schema": "olm.channel",
    "name": "singlenamespace-alpha",
    "package": "etcd",
    "entries": [
        {
            "name": "etcdoperator.v0.9.0"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsEtcdChannel1JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsEtcdChannel1Json, nil
}

func testQeTestdataOpmRenderValidateConfigsEtcdChannel1Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsEtcdChannel1JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/etcd/channel1.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsEtcdChannel2Json = []byte(`{
    "schema": "olm.channel",
    "name": "clusterwide-alpha",
    "package": "etcd",
    "entries": [
        {
            "name": "etcdoperator.v0.9.0"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsEtcdChannel2JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsEtcdChannel2Json, nil
}

func testQeTestdataOpmRenderValidateConfigsEtcdChannel2Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsEtcdChannel2JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/etcd/channel2.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsEtcdEtcdJson = []byte(`{
    "schema": "olm.bundle",
    "name": "etcdoperator.v0.9.0",
    "package": "etcd",
    "image": "quay.io/openshift-community-operators/etcd:v0.9.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdBackup",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdCluster",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdRestore",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "etcd",
                "version": "0.9.0"
            }
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsEtcdEtcdJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsEtcdEtcdJson, nil
}

func testQeTestdataOpmRenderValidateConfigsEtcdEtcdJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsEtcdEtcdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/etcd/etcd.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsEtcdPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "etcd",
    "defaultChannel": "singlenamespace-alpha",
    "description": "etcd test\n"
}
`)

func testQeTestdataOpmRenderValidateConfigsEtcdPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsEtcdPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsEtcdPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsEtcdPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/etcd/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1Json = []byte(`{
    "schema": "olm.channel",
    "name": "stable",
    "package": "example-operator",
    "entries": [
        {
            "name": "example-operator.v0.1.0"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1Json, nil
}

func testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/example-operator/channel1.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJson = []byte(`{
    "schema": "olm.bundle",
    "name": "example-operator.v0.1.0",
    "package": "example-operator",
    "image": "quay.io/joelanford/example-operator-bundle:0.1.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.com",
                "kind": "App",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "example-operator",
                "version": "0.1.0"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "quay.io/joelanford/example-operator-bundle:0.1.0"
        },
        {
            "name": "",
            "image": "quay.io/joelanford/example-operator@sha256:a5f8fce740945fcdabf7f8ac6fcd6f0f95b3a828fbf17e43de251de9d5544118"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJson, nil
}

func testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/example-operator/example-operator.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "example-operator",
    "defaultChannel": "stable"
}
`)

func testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs/example-operator/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJson = []byte(`{
    "schema": "olm.bundle",
    "name": "etcdoperator.v0.9.0",
    "package": "etcd",
    "image": "quay.io/openshift-community-operators/etcd:v0.9.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdBackup",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdCluster",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdRestore",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "etcd",
                "version": "0.9.0"
            }
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong/etcd/etcd.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "etcd",
    "defaultChannel": "singlenamespace-alpha",
    "description": "etcd test\n"
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong/etcd/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJson = []byte(`{
    "schema": "olm.bundle",
    "name": "example-operator.v0.1.0",
    "package": "example-operator",
    "image": "quay.io/joelanford/example-operator-bundle:0.1.0",
    "properties": [
        {
            "type": "olm.channel",
            "value": {
                "name": "stable"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.com",
                "kind": "App",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "example-operator",
                "version": "0.1.0"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "quay.io/joelanford/example-operator-bundle:0.1.0"
        },
        {
            "name": "",
            "image": "quay.io/joelanford/example-operator@sha256:a5f8fce740945fcdabf7f8ac6fcd6f0f95b3a828fbf17e43de251de9d5544118"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong/example-operator/example-operator.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "example-operator",
    "defaultChannel": "stable"
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong/example-operator/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignore = []byte(`/etcd
/wrong-etcd.json
/etcdwrong/etcd.json
/etcdwrong/package.json
/.indexignore
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignoreBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignore, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignore() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/.indexignore", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJson = []byte(`{
    "schema": "olm.bundle",
    "name": "etcdoperator.v0.9.0",
    "package": "etcd",
    "image": "quay.io/openshift-community-operators/etcd:v0.9.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdBackup",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdCluster",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdRestore",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "etcd",
                "version": "0.9.0"
            }
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcd/etcd.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "etcd",
    "defaultChannel": "singlenamespace-alpha",
    "description": "etcd test\n"
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcd/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJson = []byte(`{
    "schema": "olm.bundle",
    "name": "etcdoperator.v0.9.0",
    "package": "etcd",
    "image": "quay.io/openshift-community-operators/etcd:v0.9.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdBackup",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdCluster",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdRestore",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "etcd",
                "version": "0.9.0"
            }
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcdwrong/etcd.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "etcd",
    "defaultChannel": "singlenamespace-alpha",
    "description": "etcd test\n"
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcdwrong/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1Json = []byte(`{
    "schema": "olm.channel",
    "name": "stable",
    "package": "example-operator",
    "entries": [
        {
            "name": "example-operator.v0.1.0"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1JsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1Json, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1Json() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/channel1.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJson = []byte(`{
    "schema": "olm.bundle",
    "name": "example-operator.v0.1.0",
    "package": "example-operator",
    "image": "quay.io/joelanford/example-operator-bundle:0.1.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "example.com",
                "kind": "App",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "example-operator",
                "version": "0.1.0"
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "quay.io/joelanford/example-operator-bundle:0.1.0"
        },
        {
            "name": "",
            "image": "quay.io/joelanford/example-operator@sha256:a5f8fce740945fcdabf7f8ac6fcd6f0f95b3a828fbf17e43de251de9d5544118"
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/example-operator.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJson = []byte(`{
    "schema": "olm.package",
    "name": "example-operator",
    "defaultChannel": "stable"
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJson = []byte(`{
    "schema": "olm.bundle",
    "name": "etcdoperator.v0.9.0",
    "package": "etcd",
    "image": "quay.io/openshift-community-operators/etcd:v0.9.0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdBackup",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdCluster",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "etcd.database.coreos.com",
                "kind": "EtcdRestore",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.maxOpenShiftVersion",
            "value": "4.8"
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "etcd",
                "version": "0.9.0"
            }
        }
    ]
}
`)

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJsonBytes() ([]byte, error) {
	return _testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJson, nil
}

func testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJson() (*asset, error) {
	bytes, err := testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test/qe/testdata/opm/render/validate/configs-wrong-ignore/wrong-etcd.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"test/qe/testdata/olm/catalogsource-address.yaml":                                                            testQeTestdataOlmCatalogsourceAddressYaml,
	"test/qe/testdata/olm/catalogsource-configmap.yaml":                                                          testQeTestdataOlmCatalogsourceConfigmapYaml,
	"test/qe/testdata/olm/catalogsource-image-cacheless.yaml":                                                    testQeTestdataOlmCatalogsourceImageCachelessYaml,
	"test/qe/testdata/olm/catalogsource-image-extract.yaml":                                                      testQeTestdataOlmCatalogsourceImageExtractYaml,
	"test/qe/testdata/olm/catalogsource-image-incorrect-updatestrategy.yaml":                                     testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYaml,
	"test/qe/testdata/olm/catalogsource-image.yaml":                                                              testQeTestdataOlmCatalogsourceImageYaml,
	"test/qe/testdata/olm/catalogsource-legacy.yaml":                                                             testQeTestdataOlmCatalogsourceLegacyYaml,
	"test/qe/testdata/olm/catalogsource-namespace.yaml":                                                          testQeTestdataOlmCatalogsourceNamespaceYaml,
	"test/qe/testdata/olm/catalogsource-opm.yaml":                                                                testQeTestdataOlmCatalogsourceOpmYaml,
	"test/qe/testdata/olm/cm-21824-correct.yaml":                                                                 testQeTestdataOlmCm21824CorrectYaml,
	"test/qe/testdata/olm/cm-21824-wrong.yaml":                                                                   testQeTestdataOlmCm21824WrongYaml,
	"test/qe/testdata/olm/cm-25644-etcd-csv.yaml":                                                                testQeTestdataOlmCm25644EtcdCsvYaml,
	"test/qe/testdata/olm/cm-csv-etcd.yaml":                                                                      testQeTestdataOlmCmCsvEtcdYaml,
	"test/qe/testdata/olm/cm-namespaceconfig.yaml":                                                               testQeTestdataOlmCmNamespaceconfigYaml,
	"test/qe/testdata/olm/cm-template.yaml":                                                                      testQeTestdataOlmCmTemplateYaml,
	"test/qe/testdata/olm/configmap-ectd-alpha-beta.yaml":                                                        testQeTestdataOlmConfigmapEctdAlphaBetaYaml,
	"test/qe/testdata/olm/configmap-etcd.yaml":                                                                   testQeTestdataOlmConfigmapEtcdYaml,
	"test/qe/testdata/olm/configmap-test.yaml":                                                                   testQeTestdataOlmConfigmapTestYaml,
	"test/qe/testdata/olm/configmap-with-defaultchannel.yaml":                                                    testQeTestdataOlmConfigmapWithDefaultchannelYaml,
	"test/qe/testdata/olm/configmap-without-defaultchannel.yaml":                                                 testQeTestdataOlmConfigmapWithoutDefaultchannelYaml,
	"test/qe/testdata/olm/cr-webhookTest.yaml":                                                                   testQeTestdataOlmCrWebhooktestYaml,
	"test/qe/testdata/olm/cr_devworkspace.yaml":                                                                  testQeTestdataOlmCr_devworkspaceYaml,
	"test/qe/testdata/olm/cr_pgadmin.yaml":                                                                       testQeTestdataOlmCr_pgadminYaml,
	"test/qe/testdata/olm/cs-image-template.yaml":                                                                testQeTestdataOlmCsImageTemplateYaml,
	"test/qe/testdata/olm/cs-without-image.yaml":                                                                 testQeTestdataOlmCsWithoutImageYaml,
	"test/qe/testdata/olm/cs-without-interval.yaml":                                                              testQeTestdataOlmCsWithoutIntervalYaml,
	"test/qe/testdata/olm/cs-without-scc.yaml":                                                                   testQeTestdataOlmCsWithoutSccYaml,
	"test/qe/testdata/olm/csc.yaml":                                                                              testQeTestdataOlmCscYaml,
	"test/qe/testdata/olm/env-subscription.yaml":                                                                 testQeTestdataOlmEnvSubscriptionYaml,
	"test/qe/testdata/olm/envfrom-subscription.yaml":                                                             testQeTestdataOlmEnvfromSubscriptionYaml,
	"test/qe/testdata/olm/etcd-cluster.yaml":                                                                     testQeTestdataOlmEtcdClusterYaml,
	"test/qe/testdata/olm/etcd-subscription-manual.yaml":                                                         testQeTestdataOlmEtcdSubscriptionManualYaml,
	"test/qe/testdata/olm/etcd-subscription.yaml":                                                                testQeTestdataOlmEtcdSubscriptionYaml,
	"test/qe/testdata/olm/mc-workload-partition.yaml":                                                            testQeTestdataOlmMcWorkloadPartitionYaml,
	"test/qe/testdata/olm/og-allns.yaml":                                                                         testQeTestdataOlmOgAllnsYaml,
	"test/qe/testdata/olm/og-multins.yaml":                                                                       testQeTestdataOlmOgMultinsYaml,
	"test/qe/testdata/olm/olm-proxy-subscription.yaml":                                                           testQeTestdataOlmOlmProxySubscriptionYaml,
	"test/qe/testdata/olm/olm-subscription.yaml":                                                                 testQeTestdataOlmOlmSubscriptionYaml,
	"test/qe/testdata/olm/operator.yaml":                                                                         testQeTestdataOlmOperatorYaml,
	"test/qe/testdata/olm/operatorgroup-serviceaccount.yaml":                                                     testQeTestdataOlmOperatorgroupServiceaccountYaml,
	"test/qe/testdata/olm/operatorgroup-upgradestrategy.yaml":                                                    testQeTestdataOlmOperatorgroupUpgradestrategyYaml,
	"test/qe/testdata/olm/operatorgroup.yaml":                                                                    testQeTestdataOlmOperatorgroupYaml,
	"test/qe/testdata/olm/opsrc.yaml":                                                                            testQeTestdataOlmOpsrcYaml,
	"test/qe/testdata/olm/packageserver.yaml":                                                                    testQeTestdataOlmPackageserverYaml,
	"test/qe/testdata/olm/platform_operator.yaml":                                                                testQeTestdataOlmPlatform_operatorYaml,
	"test/qe/testdata/olm/prometheus-antiaffinity.yaml":                                                          testQeTestdataOlmPrometheusAntiaffinityYaml,
	"test/qe/testdata/olm/prometheus-nodeaffinity.yaml":                                                          testQeTestdataOlmPrometheusNodeaffinityYaml,
	"test/qe/testdata/olm/role-binding.yaml":                                                                     testQeTestdataOlmRoleBindingYaml,
	"test/qe/testdata/olm/role.yaml":                                                                             testQeTestdataOlmRoleYaml,
	"test/qe/testdata/olm/scc.yaml":                                                                              testQeTestdataOlmSccYaml,
	"test/qe/testdata/olm/scoped-sa-etcd.yaml":                                                                   testQeTestdataOlmScopedSaEtcdYaml,
	"test/qe/testdata/olm/scoped-sa-fine-grained-roles.yaml":                                                     testQeTestdataOlmScopedSaFineGrainedRolesYaml,
	"test/qe/testdata/olm/scoped-sa-roles.yaml":                                                                  testQeTestdataOlmScopedSaRolesYaml,
	"test/qe/testdata/olm/secret.yaml":                                                                           testQeTestdataOlmSecretYaml,
	"test/qe/testdata/olm/secret_opaque.yaml":                                                                    testQeTestdataOlmSecret_opaqueYaml,
	"test/qe/testdata/olm/vpa-crd.yaml":                                                                          testQeTestdataOlmVpaCrdYaml,
	"test/qe/testdata/opm/45409_include.yaml":                                                                    testQeTestdataOpm45409_includeYaml,
	"test/qe/testdata/opm/53869/catalog-basic-template.yaml":                                                     testQeTestdataOpm53869CatalogBasicTemplateYaml,
	"test/qe/testdata/opm/53871/catalog-semver-veneer-1.yaml":                                                    testQeTestdataOpm53871CatalogSemverVeneer1Yaml,
	"test/qe/testdata/opm/53871/catalog-semver-veneer-2.yaml":                                                    testQeTestdataOpm53871CatalogSemverVeneer2Yaml,
	"test/qe/testdata/opm/53871/catalog-semver-veneer-3.yaml":                                                    testQeTestdataOpm53871CatalogSemverVeneer3Yaml,
	"test/qe/testdata/opm/53871/catalog-semver-veneer-4.yaml":                                                    testQeTestdataOpm53871CatalogSemverVeneer4Yaml,
	"test/qe/testdata/opm/53871/catalog-semver-veneer-5.yaml":                                                    testQeTestdataOpm53871CatalogSemverVeneer5Yaml,
	"test/qe/testdata/opm/70013/catalog-invalid/index.yaml":                                                      testQeTestdataOpm70013CatalogInvalidIndexYaml,
	"test/qe/testdata/opm/70013/catalog-valid/index.yaml":                                                        testQeTestdataOpm70013CatalogValidIndexYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/charts.operatorhub.io_cockroachdbs.yaml": testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb-controller-manager-metrics-service_v1_service.yaml":           testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml": testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/manifests/cockroachdb.clusterserviceversion.yaml":                                   testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.3/metadata/properties.yaml":                                                           testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/charts.operatorhub.io_cockroachdbs.yaml":                                  testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb-controller-manager-metrics-service_v1_service.yaml":           testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml": testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/manifests/cockroachdb.clusterserviceversion.yaml":                                   testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYaml,
	"test/qe/testdata/opm/cockroachdb/supportproperties/5.0.4/metadata/properties.yaml":                                                           testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/charts.operatorhub.io_cockroachdbs.yaml":                                                testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb-controller-manager-metrics-service_v1_service.yaml":                         testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml":               testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.3/cockroachdb.clusterserviceversion.yaml":                                                 testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/charts.operatorhub.io_cockroachdbs.yaml":                                                testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb-controller-manager-metrics-service_v1_service.yaml":                         testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml":               testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml,
	"test/qe/testdata/opm/cockroachdb/supportsemver/5.0.4/cockroachdb.clusterserviceversion.yaml":                                                 testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYaml,
	"test/qe/testdata/opm/eclipse-che/7.32.2/checlusters.org.eclipse.che.crd.yaml":                                                                testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYaml,
	"test/qe/testdata/opm/eclipse-che/7.32.2/eclipse-che.v7.32.2.clusterserviceversion.yaml":                                                      testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYaml,
	"test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdbackups.etcd.database.coreos.com.crd.yaml":                                            testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdclusters.etcd.database.coreos.com.crd.yaml":                                           testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdoperator.v0.9.2.clusterserviceversion.yaml":                                           testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYaml,
	"test/qe/testdata/opm/etcd_operator/0.9.2/manifests/etcdrestores.etcd.database.coreos.com.crd.yaml":                                           testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/0.9.2/metadata/annotations.yaml":                                                                          testQeTestdataOpmEtcd_operator092MetadataAnnotationsYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdbackups.etcd.database.coreos.com.crd.yaml":                                       testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdclusters.etcd.database.coreos.com.crd.yaml":                                      testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdoperator.v0.9.4.clusterserviceversion.yaml":                                      testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4/etcdrestores.etcd.database.coreos.com.crd.yaml":                                      testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdbackups.etcd.database.coreos.com.crd.yaml":                           testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdclusters.etcd.database.coreos.com.crd.yaml":                          testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdoperator.v0.9.4-clusterwide.clusterserviceversion.yaml":              testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/0.9.4-clusterwide/etcdrestores.etcd.database.coreos.com.crd.yaml":                          testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYaml,
	"test/qe/testdata/opm/etcd_operator/etcd_community/etcd.package.yaml":                                                                         testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYaml,
	"test/qe/testdata/opm/index_34016.db": testQeTestdataOpmIndex_34016Db,
	"test/qe/testdata/opm/learn_operator/package/0.0.1/learn-operator.v0.0.1.clusterserviceversion.yaml": testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYaml,
	"test/qe/testdata/opm/learn_operator/package/0.0.1/learn.crd.yaml":                                   testQeTestdataOpmLearn_operatorPackage001LearnCrdYaml,
	"test/qe/testdata/opm/learn_operator/package/0.0.2/learn-operator.v0.0.2.clusterserviceversion.yaml": testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYaml,
	"test/qe/testdata/opm/learn_operator/package/0.0.2/learn.crd.yaml":                                   testQeTestdataOpmLearn_operatorPackage002LearnCrdYaml,
	"test/qe/testdata/opm/learn_operator/package/learn.package.yaml":                                     testQeTestdataOpmLearn_operatorPackageLearnPackageYaml,
	"test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-bundle3.json":                           testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3Json,
	"test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-bundle4.json":                           testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4Json,
	"test/qe/testdata/opm/render/configs/cockroachdb/cockroachdb-package.json":                           testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJson,
	"test/qe/testdata/opm/render/configs/mta-operator/mta-operator-bundle4.json":                         testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4Json,
	"test/qe/testdata/opm/render/configs/mta-operator/mta-operator-bundle5.json":                         testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5Json,
	"test/qe/testdata/opm/render/configs/mta-operator/mta-operator-package.json":                         testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJson,
	"test/qe/testdata/opm/render/diff/index-latest-2.db":                                                 testQeTestdataOpmRenderDiffIndexLatest2Db,
	"test/qe/testdata/opm/render/diff/index.db":                                                          testQeTestdataOpmRenderDiffIndexDb,
	"test/qe/testdata/opm/render/init/readme.md":                                                         testQeTestdataOpmRenderInitReadmeMd,
	"test/qe/testdata/opm/render/init/test.png":                                                          testQeTestdataOpmRenderInitTestPng,
	"test/qe/testdata/opm/render/validate/catalog/operator-1/index.yaml":                                 testQeTestdataOpmRenderValidateCatalogOperator1IndexYaml,
	"test/qe/testdata/opm/render/validate/catalog-error/operator-1/index.yaml":                           testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYaml,
	"test/qe/testdata/opm/render/validate/catalog-error/operator-2/index.json":                           testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJson,
	"test/qe/testdata/opm/render/validate/configs/etcd/channel1.json":                                    testQeTestdataOpmRenderValidateConfigsEtcdChannel1Json,
	"test/qe/testdata/opm/render/validate/configs/etcd/channel2.json":                                    testQeTestdataOpmRenderValidateConfigsEtcdChannel2Json,
	"test/qe/testdata/opm/render/validate/configs/etcd/etcd.json":                                        testQeTestdataOpmRenderValidateConfigsEtcdEtcdJson,
	"test/qe/testdata/opm/render/validate/configs/etcd/package.json":                                     testQeTestdataOpmRenderValidateConfigsEtcdPackageJson,
	"test/qe/testdata/opm/render/validate/configs/example-operator/channel1.json":                        testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1Json,
	"test/qe/testdata/opm/render/validate/configs/example-operator/example-operator.json":                testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJson,
	"test/qe/testdata/opm/render/validate/configs/example-operator/package.json":                         testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJson,
	"test/qe/testdata/opm/render/validate/configs-wrong/etcd/etcd.json":                                  testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJson,
	"test/qe/testdata/opm/render/validate/configs-wrong/etcd/package.json":                               testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJson,
	"test/qe/testdata/opm/render/validate/configs-wrong/example-operator/example-operator.json":          testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJson,
	"test/qe/testdata/opm/render/validate/configs-wrong/example-operator/package.json":                   testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/.indexignore":                             testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignore,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcd/etcd.json":                           testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcd/package.json":                        testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcdwrong/etcd.json":                      testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/etcdwrong/package.json":                   testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/channel1.json":           testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1Json,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/example-operator.json":   testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/example-operator/package.json":            testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJson,
	"test/qe/testdata/opm/render/validate/configs-wrong-ignore/wrong-etcd.json":                          testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"test": {nil, map[string]*bintree{
		"qe": {nil, map[string]*bintree{
			"testdata": {nil, map[string]*bintree{
				"olm": {nil, map[string]*bintree{
					"catalogsource-address.yaml":                        {testQeTestdataOlmCatalogsourceAddressYaml, map[string]*bintree{}},
					"catalogsource-configmap.yaml":                      {testQeTestdataOlmCatalogsourceConfigmapYaml, map[string]*bintree{}},
					"catalogsource-image-cacheless.yaml":                {testQeTestdataOlmCatalogsourceImageCachelessYaml, map[string]*bintree{}},
					"catalogsource-image-extract.yaml":                  {testQeTestdataOlmCatalogsourceImageExtractYaml, map[string]*bintree{}},
					"catalogsource-image-incorrect-updatestrategy.yaml": {testQeTestdataOlmCatalogsourceImageIncorrectUpdatestrategyYaml, map[string]*bintree{}},
					"catalogsource-image.yaml":                          {testQeTestdataOlmCatalogsourceImageYaml, map[string]*bintree{}},
					"catalogsource-legacy.yaml":                         {testQeTestdataOlmCatalogsourceLegacyYaml, map[string]*bintree{}},
					"catalogsource-namespace.yaml":                      {testQeTestdataOlmCatalogsourceNamespaceYaml, map[string]*bintree{}},
					"catalogsource-opm.yaml":                            {testQeTestdataOlmCatalogsourceOpmYaml, map[string]*bintree{}},
					"cm-21824-correct.yaml":                             {testQeTestdataOlmCm21824CorrectYaml, map[string]*bintree{}},
					"cm-21824-wrong.yaml":                               {testQeTestdataOlmCm21824WrongYaml, map[string]*bintree{}},
					"cm-25644-etcd-csv.yaml":                            {testQeTestdataOlmCm25644EtcdCsvYaml, map[string]*bintree{}},
					"cm-csv-etcd.yaml":                                  {testQeTestdataOlmCmCsvEtcdYaml, map[string]*bintree{}},
					"cm-namespaceconfig.yaml":                           {testQeTestdataOlmCmNamespaceconfigYaml, map[string]*bintree{}},
					"cm-template.yaml":                                  {testQeTestdataOlmCmTemplateYaml, map[string]*bintree{}},
					"configmap-ectd-alpha-beta.yaml":                    {testQeTestdataOlmConfigmapEctdAlphaBetaYaml, map[string]*bintree{}},
					"configmap-etcd.yaml":                               {testQeTestdataOlmConfigmapEtcdYaml, map[string]*bintree{}},
					"configmap-test.yaml":                               {testQeTestdataOlmConfigmapTestYaml, map[string]*bintree{}},
					"configmap-with-defaultchannel.yaml":                {testQeTestdataOlmConfigmapWithDefaultchannelYaml, map[string]*bintree{}},
					"configmap-without-defaultchannel.yaml":             {testQeTestdataOlmConfigmapWithoutDefaultchannelYaml, map[string]*bintree{}},
					"cr-webhookTest.yaml":                               {testQeTestdataOlmCrWebhooktestYaml, map[string]*bintree{}},
					"cr_devworkspace.yaml":                              {testQeTestdataOlmCr_devworkspaceYaml, map[string]*bintree{}},
					"cr_pgadmin.yaml":                                   {testQeTestdataOlmCr_pgadminYaml, map[string]*bintree{}},
					"cs-image-template.yaml":                            {testQeTestdataOlmCsImageTemplateYaml, map[string]*bintree{}},
					"cs-without-image.yaml":                             {testQeTestdataOlmCsWithoutImageYaml, map[string]*bintree{}},
					"cs-without-interval.yaml":                          {testQeTestdataOlmCsWithoutIntervalYaml, map[string]*bintree{}},
					"cs-without-scc.yaml":                               {testQeTestdataOlmCsWithoutSccYaml, map[string]*bintree{}},
					"csc.yaml":                                          {testQeTestdataOlmCscYaml, map[string]*bintree{}},
					"env-subscription.yaml":                             {testQeTestdataOlmEnvSubscriptionYaml, map[string]*bintree{}},
					"envfrom-subscription.yaml":                         {testQeTestdataOlmEnvfromSubscriptionYaml, map[string]*bintree{}},
					"etcd-cluster.yaml":                                 {testQeTestdataOlmEtcdClusterYaml, map[string]*bintree{}},
					"etcd-subscription-manual.yaml":                     {testQeTestdataOlmEtcdSubscriptionManualYaml, map[string]*bintree{}},
					"etcd-subscription.yaml":                            {testQeTestdataOlmEtcdSubscriptionYaml, map[string]*bintree{}},
					"mc-workload-partition.yaml":                        {testQeTestdataOlmMcWorkloadPartitionYaml, map[string]*bintree{}},
					"og-allns.yaml":                                     {testQeTestdataOlmOgAllnsYaml, map[string]*bintree{}},
					"og-multins.yaml":                                   {testQeTestdataOlmOgMultinsYaml, map[string]*bintree{}},
					"olm-proxy-subscription.yaml":                       {testQeTestdataOlmOlmProxySubscriptionYaml, map[string]*bintree{}},
					"olm-subscription.yaml":                             {testQeTestdataOlmOlmSubscriptionYaml, map[string]*bintree{}},
					"operator.yaml":                                     {testQeTestdataOlmOperatorYaml, map[string]*bintree{}},
					"operatorgroup-serviceaccount.yaml":                 {testQeTestdataOlmOperatorgroupServiceaccountYaml, map[string]*bintree{}},
					"operatorgroup-upgradestrategy.yaml":                {testQeTestdataOlmOperatorgroupUpgradestrategyYaml, map[string]*bintree{}},
					"operatorgroup.yaml":                                {testQeTestdataOlmOperatorgroupYaml, map[string]*bintree{}},
					"opsrc.yaml":                                        {testQeTestdataOlmOpsrcYaml, map[string]*bintree{}},
					"packageserver.yaml":                                {testQeTestdataOlmPackageserverYaml, map[string]*bintree{}},
					"platform_operator.yaml":                            {testQeTestdataOlmPlatform_operatorYaml, map[string]*bintree{}},
					"prometheus-antiaffinity.yaml":                      {testQeTestdataOlmPrometheusAntiaffinityYaml, map[string]*bintree{}},
					"prometheus-nodeaffinity.yaml":                      {testQeTestdataOlmPrometheusNodeaffinityYaml, map[string]*bintree{}},
					"role-binding.yaml":                                 {testQeTestdataOlmRoleBindingYaml, map[string]*bintree{}},
					"role.yaml":                                         {testQeTestdataOlmRoleYaml, map[string]*bintree{}},
					"scc.yaml":                                          {testQeTestdataOlmSccYaml, map[string]*bintree{}},
					"scoped-sa-etcd.yaml":                               {testQeTestdataOlmScopedSaEtcdYaml, map[string]*bintree{}},
					"scoped-sa-fine-grained-roles.yaml":                 {testQeTestdataOlmScopedSaFineGrainedRolesYaml, map[string]*bintree{}},
					"scoped-sa-roles.yaml":                              {testQeTestdataOlmScopedSaRolesYaml, map[string]*bintree{}},
					"secret.yaml":                                       {testQeTestdataOlmSecretYaml, map[string]*bintree{}},
					"secret_opaque.yaml":                                {testQeTestdataOlmSecret_opaqueYaml, map[string]*bintree{}},
					"vpa-crd.yaml":                                      {testQeTestdataOlmVpaCrdYaml, map[string]*bintree{}},
				}},
				"opm": {nil, map[string]*bintree{
					"45409_include.yaml": {testQeTestdataOpm45409_includeYaml, map[string]*bintree{}},
					"53869": {nil, map[string]*bintree{
						"catalog-basic-template.yaml": {testQeTestdataOpm53869CatalogBasicTemplateYaml, map[string]*bintree{}},
					}},
					"53871": {nil, map[string]*bintree{
						"catalog-semver-veneer-1.yaml": {testQeTestdataOpm53871CatalogSemverVeneer1Yaml, map[string]*bintree{}},
						"catalog-semver-veneer-2.yaml": {testQeTestdataOpm53871CatalogSemverVeneer2Yaml, map[string]*bintree{}},
						"catalog-semver-veneer-3.yaml": {testQeTestdataOpm53871CatalogSemverVeneer3Yaml, map[string]*bintree{}},
						"catalog-semver-veneer-4.yaml": {testQeTestdataOpm53871CatalogSemverVeneer4Yaml, map[string]*bintree{}},
						"catalog-semver-veneer-5.yaml": {testQeTestdataOpm53871CatalogSemverVeneer5Yaml, map[string]*bintree{}},
					}},
					"70013": {nil, map[string]*bintree{
						"catalog-invalid": {nil, map[string]*bintree{
							"index.yaml": {testQeTestdataOpm70013CatalogInvalidIndexYaml, map[string]*bintree{}},
						}},
						"catalog-valid": {nil, map[string]*bintree{
							"index.yaml": {testQeTestdataOpm70013CatalogValidIndexYaml, map[string]*bintree{}},
						}},
					}},
					"cockroachdb": {nil, map[string]*bintree{
						"supportproperties": {nil, map[string]*bintree{
							"5.0.3": {nil, map[string]*bintree{
								"manifests": {nil, map[string]*bintree{
									"charts.operatorhub.io_cockroachdbs.yaml":                                  {testQeTestdataOpmCockroachdbSupportproperties503ManifestsChartsOperatorhubIo_cockroachdbsYaml, map[string]*bintree{}},
									"cockroachdb-controller-manager-metrics-service_v1_service.yaml":           {testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml, map[string]*bintree{}},
									"cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml": {testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, map[string]*bintree{}},
									"cockroachdb.clusterserviceversion.yaml":                                   {testQeTestdataOpmCockroachdbSupportproperties503ManifestsCockroachdbClusterserviceversionYaml, map[string]*bintree{}},
								}},
								"metadata": {nil, map[string]*bintree{
									"properties.yaml": {testQeTestdataOpmCockroachdbSupportproperties503MetadataPropertiesYaml, map[string]*bintree{}},
								}},
							}},
							"5.0.4": {nil, map[string]*bintree{
								"manifests": {nil, map[string]*bintree{
									"charts.operatorhub.io_cockroachdbs.yaml":                                  {testQeTestdataOpmCockroachdbSupportproperties504ManifestsChartsOperatorhubIo_cockroachdbsYaml, map[string]*bintree{}},
									"cockroachdb-controller-manager-metrics-service_v1_service.yaml":           {testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbControllerManagerMetricsService_v1_serviceYaml, map[string]*bintree{}},
									"cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml": {testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, map[string]*bintree{}},
									"cockroachdb.clusterserviceversion.yaml":                                   {testQeTestdataOpmCockroachdbSupportproperties504ManifestsCockroachdbClusterserviceversionYaml, map[string]*bintree{}},
								}},
								"metadata": {nil, map[string]*bintree{
									"properties.yaml": {testQeTestdataOpmCockroachdbSupportproperties504MetadataPropertiesYaml, map[string]*bintree{}},
								}},
							}},
						}},
						"supportsemver": {nil, map[string]*bintree{
							"5.0.3": {nil, map[string]*bintree{
								"charts.operatorhub.io_cockroachdbs.yaml":                                  {testQeTestdataOpmCockroachdbSupportsemver503ChartsOperatorhubIo_cockroachdbsYaml, map[string]*bintree{}},
								"cockroachdb-controller-manager-metrics-service_v1_service.yaml":           {testQeTestdataOpmCockroachdbSupportsemver503CockroachdbControllerManagerMetricsService_v1_serviceYaml, map[string]*bintree{}},
								"cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml": {testQeTestdataOpmCockroachdbSupportsemver503CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, map[string]*bintree{}},
								"cockroachdb.clusterserviceversion.yaml":                                   {testQeTestdataOpmCockroachdbSupportsemver503CockroachdbClusterserviceversionYaml, map[string]*bintree{}},
							}},
							"5.0.4": {nil, map[string]*bintree{
								"charts.operatorhub.io_cockroachdbs.yaml":                                  {testQeTestdataOpmCockroachdbSupportsemver504ChartsOperatorhubIo_cockroachdbsYaml, map[string]*bintree{}},
								"cockroachdb-controller-manager-metrics-service_v1_service.yaml":           {testQeTestdataOpmCockroachdbSupportsemver504CockroachdbControllerManagerMetricsService_v1_serviceYaml, map[string]*bintree{}},
								"cockroachdb-metrics-reader_rbac.authorization.k8s.io_v1_clusterrole.yaml": {testQeTestdataOpmCockroachdbSupportsemver504CockroachdbMetricsReader_rbacAuthorizationK8sIo_v1_clusterroleYaml, map[string]*bintree{}},
								"cockroachdb.clusterserviceversion.yaml":                                   {testQeTestdataOpmCockroachdbSupportsemver504CockroachdbClusterserviceversionYaml, map[string]*bintree{}},
							}},
						}},
					}},
					"eclipse-che": {nil, map[string]*bintree{
						"7.32.2": {nil, map[string]*bintree{
							"checlusters.org.eclipse.che.crd.yaml":           {testQeTestdataOpmEclipseChe7322CheclustersOrgEclipseCheCrdYaml, map[string]*bintree{}},
							"eclipse-che.v7.32.2.clusterserviceversion.yaml": {testQeTestdataOpmEclipseChe7322EclipseCheV7322ClusterserviceversionYaml, map[string]*bintree{}},
						}},
					}},
					"etcd_operator": {nil, map[string]*bintree{
						"0.9.2": {nil, map[string]*bintree{
							"manifests": {nil, map[string]*bintree{
								"etcdbackups.etcd.database.coreos.com.crd.yaml":  {testQeTestdataOpmEtcd_operator092ManifestsEtcdbackupsEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
								"etcdclusters.etcd.database.coreos.com.crd.yaml": {testQeTestdataOpmEtcd_operator092ManifestsEtcdclustersEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
								"etcdoperator.v0.9.2.clusterserviceversion.yaml": {testQeTestdataOpmEtcd_operator092ManifestsEtcdoperatorV092ClusterserviceversionYaml, map[string]*bintree{}},
								"etcdrestores.etcd.database.coreos.com.crd.yaml": {testQeTestdataOpmEtcd_operator092ManifestsEtcdrestoresEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
							}},
							"metadata": {nil, map[string]*bintree{
								"annotations.yaml": {testQeTestdataOpmEtcd_operator092MetadataAnnotationsYaml, map[string]*bintree{}},
							}},
						}},
						"etcd_community": {nil, map[string]*bintree{
							"0.9.4": {nil, map[string]*bintree{
								"etcdbackups.etcd.database.coreos.com.crd.yaml":  {testQeTestdataOpmEtcd_operatorEtcd_community094EtcdbackupsEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
								"etcdclusters.etcd.database.coreos.com.crd.yaml": {testQeTestdataOpmEtcd_operatorEtcd_community094EtcdclustersEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
								"etcdoperator.v0.9.4.clusterserviceversion.yaml": {testQeTestdataOpmEtcd_operatorEtcd_community094EtcdoperatorV094ClusterserviceversionYaml, map[string]*bintree{}},
								"etcdrestores.etcd.database.coreos.com.crd.yaml": {testQeTestdataOpmEtcd_operatorEtcd_community094EtcdrestoresEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
							}},
							"0.9.4-clusterwide": {nil, map[string]*bintree{
								"etcdbackups.etcd.database.coreos.com.crd.yaml":              {testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdbackupsEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
								"etcdclusters.etcd.database.coreos.com.crd.yaml":             {testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdclustersEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
								"etcdoperator.v0.9.4-clusterwide.clusterserviceversion.yaml": {testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdoperatorV094ClusterwideClusterserviceversionYaml, map[string]*bintree{}},
								"etcdrestores.etcd.database.coreos.com.crd.yaml":             {testQeTestdataOpmEtcd_operatorEtcd_community094ClusterwideEtcdrestoresEtcdDatabaseCoreosComCrdYaml, map[string]*bintree{}},
							}},
							"etcd.package.yaml": {testQeTestdataOpmEtcd_operatorEtcd_communityEtcdPackageYaml, map[string]*bintree{}},
						}},
					}},
					"index_34016.db": {testQeTestdataOpmIndex_34016Db, map[string]*bintree{}},
					"learn_operator": {nil, map[string]*bintree{
						"package": {nil, map[string]*bintree{
							"0.0.1": {nil, map[string]*bintree{
								"learn-operator.v0.0.1.clusterserviceversion.yaml": {testQeTestdataOpmLearn_operatorPackage001LearnOperatorV001ClusterserviceversionYaml, map[string]*bintree{}},
								"learn.crd.yaml": {testQeTestdataOpmLearn_operatorPackage001LearnCrdYaml, map[string]*bintree{}},
							}},
							"0.0.2": {nil, map[string]*bintree{
								"learn-operator.v0.0.2.clusterserviceversion.yaml": {testQeTestdataOpmLearn_operatorPackage002LearnOperatorV002ClusterserviceversionYaml, map[string]*bintree{}},
								"learn.crd.yaml": {testQeTestdataOpmLearn_operatorPackage002LearnCrdYaml, map[string]*bintree{}},
							}},
							"learn.package.yaml": {testQeTestdataOpmLearn_operatorPackageLearnPackageYaml, map[string]*bintree{}},
						}},
					}},
					"render": {nil, map[string]*bintree{
						"configs": {nil, map[string]*bintree{
							"cockroachdb": {nil, map[string]*bintree{
								"cockroachdb-bundle3.json": {testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle3Json, map[string]*bintree{}},
								"cockroachdb-bundle4.json": {testQeTestdataOpmRenderConfigsCockroachdbCockroachdbBundle4Json, map[string]*bintree{}},
								"cockroachdb-package.json": {testQeTestdataOpmRenderConfigsCockroachdbCockroachdbPackageJson, map[string]*bintree{}},
							}},
							"mta-operator": {nil, map[string]*bintree{
								"mta-operator-bundle4.json": {testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle4Json, map[string]*bintree{}},
								"mta-operator-bundle5.json": {testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorBundle5Json, map[string]*bintree{}},
								"mta-operator-package.json": {testQeTestdataOpmRenderConfigsMtaOperatorMtaOperatorPackageJson, map[string]*bintree{}},
							}},
						}},
						"diff": {nil, map[string]*bintree{
							"index-latest-2.db": {testQeTestdataOpmRenderDiffIndexLatest2Db, map[string]*bintree{}},
							"index.db":          {testQeTestdataOpmRenderDiffIndexDb, map[string]*bintree{}},
						}},
						"init": {nil, map[string]*bintree{
							"readme.md": {testQeTestdataOpmRenderInitReadmeMd, map[string]*bintree{}},
							"test.png":  {testQeTestdataOpmRenderInitTestPng, map[string]*bintree{}},
						}},
						"validate": {nil, map[string]*bintree{
							"catalog": {nil, map[string]*bintree{
								"operator-1": {nil, map[string]*bintree{
									"index.yaml": {testQeTestdataOpmRenderValidateCatalogOperator1IndexYaml, map[string]*bintree{}},
								}},
							}},
							"catalog-error": {nil, map[string]*bintree{
								"operator-1": {nil, map[string]*bintree{
									"index.yaml": {testQeTestdataOpmRenderValidateCatalogErrorOperator1IndexYaml, map[string]*bintree{}},
								}},
								"operator-2": {nil, map[string]*bintree{
									"index.json": {testQeTestdataOpmRenderValidateCatalogErrorOperator2IndexJson, map[string]*bintree{}},
								}},
							}},
							"configs": {nil, map[string]*bintree{
								"etcd": {nil, map[string]*bintree{
									"channel1.json": {testQeTestdataOpmRenderValidateConfigsEtcdChannel1Json, map[string]*bintree{}},
									"channel2.json": {testQeTestdataOpmRenderValidateConfigsEtcdChannel2Json, map[string]*bintree{}},
									"etcd.json":     {testQeTestdataOpmRenderValidateConfigsEtcdEtcdJson, map[string]*bintree{}},
									"package.json":  {testQeTestdataOpmRenderValidateConfigsEtcdPackageJson, map[string]*bintree{}},
								}},
								"example-operator": {nil, map[string]*bintree{
									"channel1.json":         {testQeTestdataOpmRenderValidateConfigsExampleOperatorChannel1Json, map[string]*bintree{}},
									"example-operator.json": {testQeTestdataOpmRenderValidateConfigsExampleOperatorExampleOperatorJson, map[string]*bintree{}},
									"package.json":          {testQeTestdataOpmRenderValidateConfigsExampleOperatorPackageJson, map[string]*bintree{}},
								}},
							}},
							"configs-wrong": {nil, map[string]*bintree{
								"etcd": {nil, map[string]*bintree{
									"etcd.json":    {testQeTestdataOpmRenderValidateConfigsWrongEtcdEtcdJson, map[string]*bintree{}},
									"package.json": {testQeTestdataOpmRenderValidateConfigsWrongEtcdPackageJson, map[string]*bintree{}},
								}},
								"example-operator": {nil, map[string]*bintree{
									"example-operator.json": {testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorExampleOperatorJson, map[string]*bintree{}},
									"package.json":          {testQeTestdataOpmRenderValidateConfigsWrongExampleOperatorPackageJson, map[string]*bintree{}},
								}},
							}},
							"configs-wrong-ignore": {nil, map[string]*bintree{
								".indexignore": {testQeTestdataOpmRenderValidateConfigsWrongIgnoreIndexignore, map[string]*bintree{}},
								"etcd": {nil, map[string]*bintree{
									"etcd.json":    {testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdEtcdJson, map[string]*bintree{}},
									"package.json": {testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdPackageJson, map[string]*bintree{}},
								}},
								"etcdwrong": {nil, map[string]*bintree{
									"etcd.json":    {testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongEtcdJson, map[string]*bintree{}},
									"package.json": {testQeTestdataOpmRenderValidateConfigsWrongIgnoreEtcdwrongPackageJson, map[string]*bintree{}},
								}},
								"example-operator": {nil, map[string]*bintree{
									"channel1.json":         {testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorChannel1Json, map[string]*bintree{}},
									"example-operator.json": {testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorExampleOperatorJson, map[string]*bintree{}},
									"package.json":          {testQeTestdataOpmRenderValidateConfigsWrongIgnoreExampleOperatorPackageJson, map[string]*bintree{}},
								}},
								"wrong-etcd.json": {testQeTestdataOpmRenderValidateConfigsWrongIgnoreWrongEtcdJson, map[string]*bintree{}},
							}},
						}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
